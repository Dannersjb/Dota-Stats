// Code generated by protoc-gen-go.
// source: usermessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EBaseUserMessages int32

const (
	EBaseUserMessages_UM_AchievementEvent        EBaseUserMessages = 101
	EBaseUserMessages_UM_CloseCaption            EBaseUserMessages = 102
	EBaseUserMessages_UM_CloseCaptionDirect      EBaseUserMessages = 103
	EBaseUserMessages_UM_CurrentTimescale        EBaseUserMessages = 104
	EBaseUserMessages_UM_DesiredTimescale        EBaseUserMessages = 105
	EBaseUserMessages_UM_Fade                    EBaseUserMessages = 106
	EBaseUserMessages_UM_GameTitle               EBaseUserMessages = 107
	EBaseUserMessages_UM_HintText                EBaseUserMessages = 109
	EBaseUserMessages_UM_HudMsg                  EBaseUserMessages = 110
	EBaseUserMessages_UM_HudText                 EBaseUserMessages = 111
	EBaseUserMessages_UM_KeyHintText             EBaseUserMessages = 112
	EBaseUserMessages_UM_ColoredText             EBaseUserMessages = 113
	EBaseUserMessages_UM_RequestState            EBaseUserMessages = 114
	EBaseUserMessages_UM_ResetHUD                EBaseUserMessages = 115
	EBaseUserMessages_UM_Rumble                  EBaseUserMessages = 116
	EBaseUserMessages_UM_SayText                 EBaseUserMessages = 117
	EBaseUserMessages_UM_SayText2                EBaseUserMessages = 118
	EBaseUserMessages_UM_SayTextChannel          EBaseUserMessages = 119
	EBaseUserMessages_UM_Shake                   EBaseUserMessages = 120
	EBaseUserMessages_UM_ShakeDir                EBaseUserMessages = 121
	EBaseUserMessages_UM_TextMsg                 EBaseUserMessages = 124
	EBaseUserMessages_UM_ScreenTilt              EBaseUserMessages = 125
	EBaseUserMessages_UM_Train                   EBaseUserMessages = 126
	EBaseUserMessages_UM_VGUIMenu                EBaseUserMessages = 127
	EBaseUserMessages_UM_VoiceMask               EBaseUserMessages = 128
	EBaseUserMessages_UM_VoiceSubtitle           EBaseUserMessages = 129
	EBaseUserMessages_UM_SendAudio               EBaseUserMessages = 130
	EBaseUserMessages_UM_ItemPickup              EBaseUserMessages = 131
	EBaseUserMessages_UM_AmmoDenied              EBaseUserMessages = 132
	EBaseUserMessages_UM_CrosshairAngle          EBaseUserMessages = 133
	EBaseUserMessages_UM_ShowMenu                EBaseUserMessages = 134
	EBaseUserMessages_UM_CreditsMsg              EBaseUserMessages = 135
	EBaseUserMessages_UM_CloseCaptionPlaceholder EBaseUserMessages = 142
	EBaseUserMessages_UM_CameraTransition        EBaseUserMessages = 143
	EBaseUserMessages_UM_AudioParameter          EBaseUserMessages = 144
	EBaseUserMessages_UM_ParticleManager         EBaseUserMessages = 145
	EBaseUserMessages_UM_HudError                EBaseUserMessages = 146
	EBaseUserMessages_UM_CustomGameEvent         EBaseUserMessages = 148
	EBaseUserMessages_UM_HandHapticPulse         EBaseUserMessages = 149
	EBaseUserMessages_UM_MAX_BASE                EBaseUserMessages = 200
)

var EBaseUserMessages_name = map[int32]string{
	101: "UM_AchievementEvent",
	102: "UM_CloseCaption",
	103: "UM_CloseCaptionDirect",
	104: "UM_CurrentTimescale",
	105: "UM_DesiredTimescale",
	106: "UM_Fade",
	107: "UM_GameTitle",
	109: "UM_HintText",
	110: "UM_HudMsg",
	111: "UM_HudText",
	112: "UM_KeyHintText",
	113: "UM_ColoredText",
	114: "UM_RequestState",
	115: "UM_ResetHUD",
	116: "UM_Rumble",
	117: "UM_SayText",
	118: "UM_SayText2",
	119: "UM_SayTextChannel",
	120: "UM_Shake",
	121: "UM_ShakeDir",
	124: "UM_TextMsg",
	125: "UM_ScreenTilt",
	126: "UM_Train",
	127: "UM_VGUIMenu",
	128: "UM_VoiceMask",
	129: "UM_VoiceSubtitle",
	130: "UM_SendAudio",
	131: "UM_ItemPickup",
	132: "UM_AmmoDenied",
	133: "UM_CrosshairAngle",
	134: "UM_ShowMenu",
	135: "UM_CreditsMsg",
	142: "UM_CloseCaptionPlaceholder",
	143: "UM_CameraTransition",
	144: "UM_AudioParameter",
	145: "UM_ParticleManager",
	146: "UM_HudError",
	148: "UM_CustomGameEvent",
	149: "UM_HandHapticPulse",
	200: "UM_MAX_BASE",
}
var EBaseUserMessages_value = map[string]int32{
	"UM_AchievementEvent":        101,
	"UM_CloseCaption":            102,
	"UM_CloseCaptionDirect":      103,
	"UM_CurrentTimescale":        104,
	"UM_DesiredTimescale":        105,
	"UM_Fade":                    106,
	"UM_GameTitle":               107,
	"UM_HintText":                109,
	"UM_HudMsg":                  110,
	"UM_HudText":                 111,
	"UM_KeyHintText":             112,
	"UM_ColoredText":             113,
	"UM_RequestState":            114,
	"UM_ResetHUD":                115,
	"UM_Rumble":                  116,
	"UM_SayText":                 117,
	"UM_SayText2":                118,
	"UM_SayTextChannel":          119,
	"UM_Shake":                   120,
	"UM_ShakeDir":                121,
	"UM_TextMsg":                 124,
	"UM_ScreenTilt":              125,
	"UM_Train":                   126,
	"UM_VGUIMenu":                127,
	"UM_VoiceMask":               128,
	"UM_VoiceSubtitle":           129,
	"UM_SendAudio":               130,
	"UM_ItemPickup":              131,
	"UM_AmmoDenied":              132,
	"UM_CrosshairAngle":          133,
	"UM_ShowMenu":                134,
	"UM_CreditsMsg":              135,
	"UM_CloseCaptionPlaceholder": 142,
	"UM_CameraTransition":        143,
	"UM_AudioParameter":          144,
	"UM_ParticleManager":         145,
	"UM_HudError":                146,
	"UM_CustomGameEvent":         148,
	"UM_HandHapticPulse":         149,
	"UM_MAX_BASE":                200,
}

func (x EBaseUserMessages) Enum() *EBaseUserMessages {
	p := new(EBaseUserMessages)
	*p = x
	return p
}
func (x EBaseUserMessages) String() string {
	return proto.EnumName(EBaseUserMessages_name, int32(x))
}
func (x *EBaseUserMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBaseUserMessages_value, data, "EBaseUserMessages")
	if err != nil {
		return err
	}
	*x = EBaseUserMessages(value)
	return nil
}
func (EBaseUserMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor43, []int{0} }

type EBaseEntityMessages int32

const (
	EBaseEntityMessages_EM_PlayJingle      EBaseEntityMessages = 136
	EBaseEntityMessages_EM_ScreenOverlay   EBaseEntityMessages = 137
	EBaseEntityMessages_EM_RemoveAllDecals EBaseEntityMessages = 138
	EBaseEntityMessages_EM_PropagateForce  EBaseEntityMessages = 139
	EBaseEntityMessages_EM_DoSpark         EBaseEntityMessages = 140
	EBaseEntityMessages_EM_FixAngle        EBaseEntityMessages = 141
)

var EBaseEntityMessages_name = map[int32]string{
	136: "EM_PlayJingle",
	137: "EM_ScreenOverlay",
	138: "EM_RemoveAllDecals",
	139: "EM_PropagateForce",
	140: "EM_DoSpark",
	141: "EM_FixAngle",
}
var EBaseEntityMessages_value = map[string]int32{
	"EM_PlayJingle":      136,
	"EM_ScreenOverlay":   137,
	"EM_RemoveAllDecals": 138,
	"EM_PropagateForce":  139,
	"EM_DoSpark":         140,
	"EM_FixAngle":        141,
}

func (x EBaseEntityMessages) Enum() *EBaseEntityMessages {
	p := new(EBaseEntityMessages)
	*p = x
	return p
}
func (x EBaseEntityMessages) String() string {
	return proto.EnumName(EBaseEntityMessages_name, int32(x))
}
func (x *EBaseEntityMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBaseEntityMessages_value, data, "EBaseEntityMessages")
	if err != nil {
		return err
	}
	*x = EBaseEntityMessages(value)
	return nil
}
func (EBaseEntityMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor43, []int{1} }

type ERollType int32

const (
	ERollType_ROLL_NONE           ERollType = -1
	ERollType_ROLL_STATS          ERollType = 0
	ERollType_ROLL_CREDITS        ERollType = 1
	ERollType_ROLL_LATE_JOIN_LOGO ERollType = 2
	ERollType_ROLL_OUTTRO         ERollType = 3
)

var ERollType_name = map[int32]string{
	-1: "ROLL_NONE",
	0:  "ROLL_STATS",
	1:  "ROLL_CREDITS",
	2:  "ROLL_LATE_JOIN_LOGO",
	3:  "ROLL_OUTTRO",
}
var ERollType_value = map[string]int32{
	"ROLL_NONE":           -1,
	"ROLL_STATS":          0,
	"ROLL_CREDITS":        1,
	"ROLL_LATE_JOIN_LOGO": 2,
	"ROLL_OUTTRO":         3,
}

func (x ERollType) Enum() *ERollType {
	p := new(ERollType)
	*p = x
	return p
}
func (x ERollType) String() string {
	return proto.EnumName(ERollType_name, int32(x))
}
func (x *ERollType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ERollType_value, data, "ERollType")
	if err != nil {
		return err
	}
	*x = ERollType(value)
	return nil
}
func (ERollType) EnumDescriptor() ([]byte, []int) { return fileDescriptor43, []int{2} }

type PARTICLE_MESSAGE int32

const (
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CREATE                          PARTICLE_MESSAGE = 0
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE                          PARTICLE_MESSAGE = 1
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD                  PARTICLE_MESSAGE = 2
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION              PARTICLE_MESSAGE = 3
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK                 PARTICLE_MESSAGE = 4
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT                      PARTICLE_MESSAGE = 5
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET                   PARTICLE_MESSAGE = 6
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_DESTROY                         PARTICLE_MESSAGE = 7
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING               PARTICLE_MESSAGE = 8
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_RELEASE                         PARTICLE_MESSAGE = 9
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_LATENCY                         PARTICLE_MESSAGE = 10
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW                     PARTICLE_MESSAGE = 11
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_FROZEN                          PARTICLE_MESSAGE = 12
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT PARTICLE_MESSAGE = 13
)

var PARTICLE_MESSAGE_name = map[int32]string{
	0:  "GAME_PARTICLE_MANAGER_EVENT_CREATE",
	1:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE",
	2:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD",
	3:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION",
	4:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK",
	5:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT",
	6:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET",
	7:  "GAME_PARTICLE_MANAGER_EVENT_DESTROY",
	8:  "GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING",
	9:  "GAME_PARTICLE_MANAGER_EVENT_RELEASE",
	10: "GAME_PARTICLE_MANAGER_EVENT_LATENCY",
	11: "GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW",
	12: "GAME_PARTICLE_MANAGER_EVENT_FROZEN",
	13: "GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT",
}
var PARTICLE_MESSAGE_value = map[string]int32{
	"GAME_PARTICLE_MANAGER_EVENT_CREATE":                          0,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE":                          1,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD":                  2,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION":              3,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK":                 4,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT":                      5,
	"GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET":                   6,
	"GAME_PARTICLE_MANAGER_EVENT_DESTROY":                         7,
	"GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING":               8,
	"GAME_PARTICLE_MANAGER_EVENT_RELEASE":                         9,
	"GAME_PARTICLE_MANAGER_EVENT_LATENCY":                         10,
	"GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW":                     11,
	"GAME_PARTICLE_MANAGER_EVENT_FROZEN":                          12,
	"GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT": 13,
}

func (x PARTICLE_MESSAGE) Enum() *PARTICLE_MESSAGE {
	p := new(PARTICLE_MESSAGE)
	*p = x
	return p
}
func (x PARTICLE_MESSAGE) String() string {
	return proto.EnumName(PARTICLE_MESSAGE_name, int32(x))
}
func (x *PARTICLE_MESSAGE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PARTICLE_MESSAGE_value, data, "PARTICLE_MESSAGE")
	if err != nil {
		return err
	}
	*x = PARTICLE_MESSAGE(value)
	return nil
}
func (PARTICLE_MESSAGE) EnumDescriptor() ([]byte, []int) { return fileDescriptor43, []int{3} }

type EHapticPulseType int32

const (
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_LIGHT  EHapticPulseType = 0
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_MEDIUM EHapticPulseType = 1
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_STRONG EHapticPulseType = 2
)

var EHapticPulseType_name = map[int32]string{
	0: "VR_HAND_HAPTIC_PULSE_LIGHT",
	1: "VR_HAND_HAPTIC_PULSE_MEDIUM",
	2: "VR_HAND_HAPTIC_PULSE_STRONG",
}
var EHapticPulseType_value = map[string]int32{
	"VR_HAND_HAPTIC_PULSE_LIGHT":  0,
	"VR_HAND_HAPTIC_PULSE_MEDIUM": 1,
	"VR_HAND_HAPTIC_PULSE_STRONG": 2,
}

func (x EHapticPulseType) Enum() *EHapticPulseType {
	p := new(EHapticPulseType)
	*p = x
	return p
}
func (x EHapticPulseType) String() string {
	return proto.EnumName(EHapticPulseType_name, int32(x))
}
func (x *EHapticPulseType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHapticPulseType_value, data, "EHapticPulseType")
	if err != nil {
		return err
	}
	*x = EHapticPulseType(value)
	return nil
}
func (EHapticPulseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor43, []int{4} }

type CUserMessageAchievementEvent struct {
	Achievement      *uint32 `protobuf:"varint,1,opt,name=achievement" json:"achievement,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageAchievementEvent) Reset()                    { *m = CUserMessageAchievementEvent{} }
func (m *CUserMessageAchievementEvent) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageAchievementEvent) ProtoMessage()               {}
func (*CUserMessageAchievementEvent) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{0} }

func (m *CUserMessageAchievementEvent) GetAchievement() uint32 {
	if m != nil && m.Achievement != nil {
		return *m.Achievement
	}
	return 0
}

type CUserMessageCloseCaption struct {
	Hash             *uint32  `protobuf:"fixed32,1,opt,name=hash" json:"hash,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer       *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex         *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageCloseCaption) Reset()                    { *m = CUserMessageCloseCaption{} }
func (m *CUserMessageCloseCaption) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCloseCaption) ProtoMessage()               {}
func (*CUserMessageCloseCaption) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{1} }

func (m *CUserMessageCloseCaption) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *CUserMessageCloseCaption) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageCloseCaption) GetFromPlayer() bool {
	if m != nil && m.FromPlayer != nil {
		return *m.FromPlayer
	}
	return false
}

func (m *CUserMessageCloseCaption) GetEntIndex() int32 {
	if m != nil && m.EntIndex != nil {
		return *m.EntIndex
	}
	return 0
}

type CUserMessageCloseCaptionDirect struct {
	Hash             *uint32  `protobuf:"fixed32,1,opt,name=hash" json:"hash,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer       *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex         *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageCloseCaptionDirect) Reset()                    { *m = CUserMessageCloseCaptionDirect{} }
func (m *CUserMessageCloseCaptionDirect) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCloseCaptionDirect) ProtoMessage()               {}
func (*CUserMessageCloseCaptionDirect) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{2} }

func (m *CUserMessageCloseCaptionDirect) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *CUserMessageCloseCaptionDirect) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageCloseCaptionDirect) GetFromPlayer() bool {
	if m != nil && m.FromPlayer != nil {
		return *m.FromPlayer
	}
	return false
}

func (m *CUserMessageCloseCaptionDirect) GetEntIndex() int32 {
	if m != nil && m.EntIndex != nil {
		return *m.EntIndex
	}
	return 0
}

type CUserMessageCloseCaptionPlaceholder struct {
	String_          *string  `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer       *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex         *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageCloseCaptionPlaceholder) Reset()         { *m = CUserMessageCloseCaptionPlaceholder{} }
func (m *CUserMessageCloseCaptionPlaceholder) String() string { return proto.CompactTextString(m) }
func (*CUserMessageCloseCaptionPlaceholder) ProtoMessage()    {}
func (*CUserMessageCloseCaptionPlaceholder) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{3}
}

func (m *CUserMessageCloseCaptionPlaceholder) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

func (m *CUserMessageCloseCaptionPlaceholder) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageCloseCaptionPlaceholder) GetFromPlayer() bool {
	if m != nil && m.FromPlayer != nil {
		return *m.FromPlayer
	}
	return false
}

func (m *CUserMessageCloseCaptionPlaceholder) GetEntIndex() int32 {
	if m != nil && m.EntIndex != nil {
		return *m.EntIndex
	}
	return 0
}

type CUserMessageCurrentTimescale struct {
	Current          *float32 `protobuf:"fixed32,1,opt,name=current" json:"current,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageCurrentTimescale) Reset()                    { *m = CUserMessageCurrentTimescale{} }
func (m *CUserMessageCurrentTimescale) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCurrentTimescale) ProtoMessage()               {}
func (*CUserMessageCurrentTimescale) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{4} }

func (m *CUserMessageCurrentTimescale) GetCurrent() float32 {
	if m != nil && m.Current != nil {
		return *m.Current
	}
	return 0
}

type CUserMessageDesiredTimescale struct {
	Desired              *float32 `protobuf:"fixed32,1,opt,name=desired" json:"desired,omitempty"`
	Acceleration         *float32 `protobuf:"fixed32,2,opt,name=acceleration" json:"acceleration,omitempty"`
	Minblendrate         *float32 `protobuf:"fixed32,3,opt,name=minblendrate" json:"minblendrate,omitempty"`
	Blenddeltamultiplier *float32 `protobuf:"fixed32,4,opt,name=blenddeltamultiplier" json:"blenddeltamultiplier,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CUserMessageDesiredTimescale) Reset()                    { *m = CUserMessageDesiredTimescale{} }
func (m *CUserMessageDesiredTimescale) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageDesiredTimescale) ProtoMessage()               {}
func (*CUserMessageDesiredTimescale) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{5} }

func (m *CUserMessageDesiredTimescale) GetDesired() float32 {
	if m != nil && m.Desired != nil {
		return *m.Desired
	}
	return 0
}

func (m *CUserMessageDesiredTimescale) GetAcceleration() float32 {
	if m != nil && m.Acceleration != nil {
		return *m.Acceleration
	}
	return 0
}

func (m *CUserMessageDesiredTimescale) GetMinblendrate() float32 {
	if m != nil && m.Minblendrate != nil {
		return *m.Minblendrate
	}
	return 0
}

func (m *CUserMessageDesiredTimescale) GetBlenddeltamultiplier() float32 {
	if m != nil && m.Blenddeltamultiplier != nil {
		return *m.Blenddeltamultiplier
	}
	return 0
}

type CUserMessageFade struct {
	Duration         *uint32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	HoldTime         *uint32 `protobuf:"varint,2,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	Flags            *uint32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Color            *uint32 `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageFade) Reset()                    { *m = CUserMessageFade{} }
func (m *CUserMessageFade) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageFade) ProtoMessage()               {}
func (*CUserMessageFade) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{6} }

func (m *CUserMessageFade) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageFade) GetHoldTime() uint32 {
	if m != nil && m.HoldTime != nil {
		return *m.HoldTime
	}
	return 0
}

func (m *CUserMessageFade) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CUserMessageFade) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

type CUserMessageShake struct {
	Command          *uint32  `protobuf:"varint,1,opt,name=command" json:"command,omitempty"`
	Amplitude        *float32 `protobuf:"fixed32,2,opt,name=amplitude" json:"amplitude,omitempty"`
	Frequency        *float32 `protobuf:"fixed32,3,opt,name=frequency" json:"frequency,omitempty"`
	Duration         *float32 `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageShake) Reset()                    { *m = CUserMessageShake{} }
func (m *CUserMessageShake) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageShake) ProtoMessage()               {}
func (*CUserMessageShake) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{7} }

func (m *CUserMessageShake) GetCommand() uint32 {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return 0
}

func (m *CUserMessageShake) GetAmplitude() float32 {
	if m != nil && m.Amplitude != nil {
		return *m.Amplitude
	}
	return 0
}

func (m *CUserMessageShake) GetFrequency() float32 {
	if m != nil && m.Frequency != nil {
		return *m.Frequency
	}
	return 0
}

func (m *CUserMessageShake) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CUserMessageShakeDir struct {
	Shake            *CUserMessageShake `protobuf:"bytes,1,opt,name=shake" json:"shake,omitempty"`
	Direction        *CMsgVector        `protobuf:"bytes,2,opt,name=direction" json:"direction,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CUserMessageShakeDir) Reset()                    { *m = CUserMessageShakeDir{} }
func (m *CUserMessageShakeDir) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageShakeDir) ProtoMessage()               {}
func (*CUserMessageShakeDir) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{8} }

func (m *CUserMessageShakeDir) GetShake() *CUserMessageShake {
	if m != nil {
		return m.Shake
	}
	return nil
}

func (m *CUserMessageShakeDir) GetDirection() *CMsgVector {
	if m != nil {
		return m.Direction
	}
	return nil
}

type CUserMessageScreenTilt struct {
	Command          *uint32     `protobuf:"varint,1,opt,name=command" json:"command,omitempty"`
	EaseInOut        *bool       `protobuf:"varint,2,opt,name=ease_in_out,json=easeInOut" json:"ease_in_out,omitempty"`
	Angle            *CMsgVector `protobuf:"bytes,3,opt,name=angle" json:"angle,omitempty"`
	Duration         *float32    `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	Time             *float32    `protobuf:"fixed32,5,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMessageScreenTilt) Reset()                    { *m = CUserMessageScreenTilt{} }
func (m *CUserMessageScreenTilt) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageScreenTilt) ProtoMessage()               {}
func (*CUserMessageScreenTilt) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{9} }

func (m *CUserMessageScreenTilt) GetCommand() uint32 {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return 0
}

func (m *CUserMessageScreenTilt) GetEaseInOut() bool {
	if m != nil && m.EaseInOut != nil {
		return *m.EaseInOut
	}
	return false
}

func (m *CUserMessageScreenTilt) GetAngle() *CMsgVector {
	if m != nil {
		return m.Angle
	}
	return nil
}

func (m *CUserMessageScreenTilt) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageScreenTilt) GetTime() float32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CUserMessageSayText struct {
	Playerindex      *uint32 `protobuf:"varint,1,opt,name=playerindex" json:"playerindex,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Chat             *bool   `protobuf:"varint,3,opt,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageSayText) Reset()                    { *m = CUserMessageSayText{} }
func (m *CUserMessageSayText) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageSayText) ProtoMessage()               {}
func (*CUserMessageSayText) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{10} }

func (m *CUserMessageSayText) GetPlayerindex() uint32 {
	if m != nil && m.Playerindex != nil {
		return *m.Playerindex
	}
	return 0
}

func (m *CUserMessageSayText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CUserMessageSayText) GetChat() bool {
	if m != nil && m.Chat != nil {
		return *m.Chat
	}
	return false
}

type CUserMessageSayText2 struct {
	Entityindex      *uint32 `protobuf:"varint,1,opt,name=entityindex" json:"entityindex,omitempty"`
	Chat             *bool   `protobuf:"varint,2,opt,name=chat" json:"chat,omitempty"`
	Messagename      *string `protobuf:"bytes,3,opt,name=messagename" json:"messagename,omitempty"`
	Param1           *string `protobuf:"bytes,4,opt,name=param1" json:"param1,omitempty"`
	Param2           *string `protobuf:"bytes,5,opt,name=param2" json:"param2,omitempty"`
	Param3           *string `protobuf:"bytes,6,opt,name=param3" json:"param3,omitempty"`
	Param4           *string `protobuf:"bytes,7,opt,name=param4" json:"param4,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageSayText2) Reset()                    { *m = CUserMessageSayText2{} }
func (m *CUserMessageSayText2) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageSayText2) ProtoMessage()               {}
func (*CUserMessageSayText2) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{11} }

func (m *CUserMessageSayText2) GetEntityindex() uint32 {
	if m != nil && m.Entityindex != nil {
		return *m.Entityindex
	}
	return 0
}

func (m *CUserMessageSayText2) GetChat() bool {
	if m != nil && m.Chat != nil {
		return *m.Chat
	}
	return false
}

func (m *CUserMessageSayText2) GetMessagename() string {
	if m != nil && m.Messagename != nil {
		return *m.Messagename
	}
	return ""
}

func (m *CUserMessageSayText2) GetParam1() string {
	if m != nil && m.Param1 != nil {
		return *m.Param1
	}
	return ""
}

func (m *CUserMessageSayText2) GetParam2() string {
	if m != nil && m.Param2 != nil {
		return *m.Param2
	}
	return ""
}

func (m *CUserMessageSayText2) GetParam3() string {
	if m != nil && m.Param3 != nil {
		return *m.Param3
	}
	return ""
}

func (m *CUserMessageSayText2) GetParam4() string {
	if m != nil && m.Param4 != nil {
		return *m.Param4
	}
	return ""
}

type CUserMessageHudMsg struct {
	Channel          *uint32  `protobuf:"varint,1,opt,name=channel" json:"channel,omitempty"`
	X                *float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Color1           *uint32  `protobuf:"fixed32,4,opt,name=color1" json:"color1,omitempty"`
	Color2           *uint32  `protobuf:"fixed32,5,opt,name=color2" json:"color2,omitempty"`
	Effect           *uint32  `protobuf:"varint,6,opt,name=effect" json:"effect,omitempty"`
	FadeInTime       *float32 `protobuf:"fixed32,7,opt,name=fade_in_time,json=fadeInTime" json:"fade_in_time,omitempty"`
	FadeOutTime      *float32 `protobuf:"fixed32,8,opt,name=fade_out_time,json=fadeOutTime" json:"fade_out_time,omitempty"`
	HoldTime         *float32 `protobuf:"fixed32,9,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	FxTime           *float32 `protobuf:"fixed32,10,opt,name=fx_time,json=fxTime" json:"fx_time,omitempty"`
	Message          *string  `protobuf:"bytes,11,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageHudMsg) Reset()                    { *m = CUserMessageHudMsg{} }
func (m *CUserMessageHudMsg) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageHudMsg) ProtoMessage()               {}
func (*CUserMessageHudMsg) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{12} }

func (m *CUserMessageHudMsg) GetChannel() uint32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CUserMessageHudMsg) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CUserMessageHudMsg) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CUserMessageHudMsg) GetColor1() uint32 {
	if m != nil && m.Color1 != nil {
		return *m.Color1
	}
	return 0
}

func (m *CUserMessageHudMsg) GetColor2() uint32 {
	if m != nil && m.Color2 != nil {
		return *m.Color2
	}
	return 0
}

func (m *CUserMessageHudMsg) GetEffect() uint32 {
	if m != nil && m.Effect != nil {
		return *m.Effect
	}
	return 0
}

func (m *CUserMessageHudMsg) GetFadeInTime() float32 {
	if m != nil && m.FadeInTime != nil {
		return *m.FadeInTime
	}
	return 0
}

func (m *CUserMessageHudMsg) GetFadeOutTime() float32 {
	if m != nil && m.FadeOutTime != nil {
		return *m.FadeOutTime
	}
	return 0
}

func (m *CUserMessageHudMsg) GetHoldTime() float32 {
	if m != nil && m.HoldTime != nil {
		return *m.HoldTime
	}
	return 0
}

func (m *CUserMessageHudMsg) GetFxTime() float32 {
	if m != nil && m.FxTime != nil {
		return *m.FxTime
	}
	return 0
}

func (m *CUserMessageHudMsg) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CUserMessageHudText struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageHudText) Reset()                    { *m = CUserMessageHudText{} }
func (m *CUserMessageHudText) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageHudText) ProtoMessage()               {}
func (*CUserMessageHudText) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{13} }

func (m *CUserMessageHudText) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CUserMessageTextMsg struct {
	Dest             *uint32  `protobuf:"varint,1,opt,name=dest" json:"dest,omitempty"`
	Param            []string `protobuf:"bytes,2,rep,name=param" json:"param,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageTextMsg) Reset()                    { *m = CUserMessageTextMsg{} }
func (m *CUserMessageTextMsg) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageTextMsg) ProtoMessage()               {}
func (*CUserMessageTextMsg) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{14} }

func (m *CUserMessageTextMsg) GetDest() uint32 {
	if m != nil && m.Dest != nil {
		return *m.Dest
	}
	return 0
}

func (m *CUserMessageTextMsg) GetParam() []string {
	if m != nil {
		return m.Param
	}
	return nil
}

type CUserMessageGameTitle struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMessageGameTitle) Reset()                    { *m = CUserMessageGameTitle{} }
func (m *CUserMessageGameTitle) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageGameTitle) ProtoMessage()               {}
func (*CUserMessageGameTitle) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{15} }

type CUserMessageResetHUD struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMessageResetHUD) Reset()                    { *m = CUserMessageResetHUD{} }
func (m *CUserMessageResetHUD) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageResetHUD) ProtoMessage()               {}
func (*CUserMessageResetHUD) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{16} }

type CUserMessageSendAudio struct {
	Soundname        *string `protobuf:"bytes,1,opt,name=soundname" json:"soundname,omitempty"`
	Stop             *bool   `protobuf:"varint,2,opt,name=stop" json:"stop,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageSendAudio) Reset()                    { *m = CUserMessageSendAudio{} }
func (m *CUserMessageSendAudio) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageSendAudio) ProtoMessage()               {}
func (*CUserMessageSendAudio) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{17} }

func (m *CUserMessageSendAudio) GetSoundname() string {
	if m != nil && m.Soundname != nil {
		return *m.Soundname
	}
	return ""
}

func (m *CUserMessageSendAudio) GetStop() bool {
	if m != nil && m.Stop != nil {
		return *m.Stop
	}
	return false
}

type CUserMessageAudioParameter struct {
	ParameterType    *uint32  `protobuf:"varint,1,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	NameHashCode     *uint32  `protobuf:"varint,2,opt,name=name_hash_code,json=nameHashCode" json:"name_hash_code,omitempty"`
	Value            *float32 `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	IntValue         *uint32  `protobuf:"varint,4,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageAudioParameter) Reset()                    { *m = CUserMessageAudioParameter{} }
func (m *CUserMessageAudioParameter) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageAudioParameter) ProtoMessage()               {}
func (*CUserMessageAudioParameter) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{18} }

func (m *CUserMessageAudioParameter) GetParameterType() uint32 {
	if m != nil && m.ParameterType != nil {
		return *m.ParameterType
	}
	return 0
}

func (m *CUserMessageAudioParameter) GetNameHashCode() uint32 {
	if m != nil && m.NameHashCode != nil {
		return *m.NameHashCode
	}
	return 0
}

func (m *CUserMessageAudioParameter) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CUserMessageAudioParameter) GetIntValue() uint32 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

type CUserMessageVoiceMask struct {
	GamerulesMasks   []uint32 `protobuf:"varint,1,rep,name=gamerules_masks,json=gamerulesMasks" json:"gamerules_masks,omitempty"`
	BanMasks         []uint32 `protobuf:"varint,2,rep,name=ban_masks,json=banMasks" json:"ban_masks,omitempty"`
	ModEnable        *bool    `protobuf:"varint,3,opt,name=mod_enable,json=modEnable" json:"mod_enable,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageVoiceMask) Reset()                    { *m = CUserMessageVoiceMask{} }
func (m *CUserMessageVoiceMask) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageVoiceMask) ProtoMessage()               {}
func (*CUserMessageVoiceMask) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{19} }

func (m *CUserMessageVoiceMask) GetGamerulesMasks() []uint32 {
	if m != nil {
		return m.GamerulesMasks
	}
	return nil
}

func (m *CUserMessageVoiceMask) GetBanMasks() []uint32 {
	if m != nil {
		return m.BanMasks
	}
	return nil
}

func (m *CUserMessageVoiceMask) GetModEnable() bool {
	if m != nil && m.ModEnable != nil {
		return *m.ModEnable
	}
	return false
}

type CUserMessageRequestState struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMessageRequestState) Reset()                    { *m = CUserMessageRequestState{} }
func (m *CUserMessageRequestState) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageRequestState) ProtoMessage()               {}
func (*CUserMessageRequestState) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{20} }

type CUserMessageHintText struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageHintText) Reset()                    { *m = CUserMessageHintText{} }
func (m *CUserMessageHintText) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageHintText) ProtoMessage()               {}
func (*CUserMessageHintText) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{21} }

func (m *CUserMessageHintText) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CUserMessageKeyHintText struct {
	Messages         []string `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CUserMessageKeyHintText) Reset()                    { *m = CUserMessageKeyHintText{} }
func (m *CUserMessageKeyHintText) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageKeyHintText) ProtoMessage()               {}
func (*CUserMessageKeyHintText) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{22} }

func (m *CUserMessageKeyHintText) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

type CUserMessageVoiceSubtitle struct {
	Player           *int32 `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Menu             *int32 `protobuf:"varint,2,opt,name=menu" json:"menu,omitempty"`
	Item             *int32 `protobuf:"varint,3,opt,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMessageVoiceSubtitle) Reset()                    { *m = CUserMessageVoiceSubtitle{} }
func (m *CUserMessageVoiceSubtitle) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageVoiceSubtitle) ProtoMessage()               {}
func (*CUserMessageVoiceSubtitle) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{23} }

func (m *CUserMessageVoiceSubtitle) GetPlayer() int32 {
	if m != nil && m.Player != nil {
		return *m.Player
	}
	return 0
}

func (m *CUserMessageVoiceSubtitle) GetMenu() int32 {
	if m != nil && m.Menu != nil {
		return *m.Menu
	}
	return 0
}

func (m *CUserMessageVoiceSubtitle) GetItem() int32 {
	if m != nil && m.Item != nil {
		return *m.Item
	}
	return 0
}

type CUserMessageVGUIMenu struct {
	Name             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Show             *bool                        `protobuf:"varint,2,opt,name=show" json:"show,omitempty"`
	Keys             []*CUserMessageVGUIMenu_Keys `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CUserMessageVGUIMenu) Reset()                    { *m = CUserMessageVGUIMenu{} }
func (m *CUserMessageVGUIMenu) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageVGUIMenu) ProtoMessage()               {}
func (*CUserMessageVGUIMenu) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{24} }

func (m *CUserMessageVGUIMenu) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CUserMessageVGUIMenu) GetShow() bool {
	if m != nil && m.Show != nil {
		return *m.Show
	}
	return false
}

func (m *CUserMessageVGUIMenu) GetKeys() []*CUserMessageVGUIMenu_Keys {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CUserMessageVGUIMenu_Keys struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageVGUIMenu_Keys) Reset()                    { *m = CUserMessageVGUIMenu_Keys{} }
func (m *CUserMessageVGUIMenu_Keys) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageVGUIMenu_Keys) ProtoMessage()               {}
func (*CUserMessageVGUIMenu_Keys) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{24, 0} }

func (m *CUserMessageVGUIMenu_Keys) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CUserMessageVGUIMenu_Keys) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CUserMessageRumble struct {
	Index            *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Data             *int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Flags            *int32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMessageRumble) Reset()                    { *m = CUserMessageRumble{} }
func (m *CUserMessageRumble) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageRumble) ProtoMessage()               {}
func (*CUserMessageRumble) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{25} }

func (m *CUserMessageRumble) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CUserMessageRumble) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *CUserMessageRumble) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type CUserMessageTrain struct {
	Position         *uint32 `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageTrain) Reset()                    { *m = CUserMessageTrain{} }
func (m *CUserMessageTrain) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageTrain) ProtoMessage()               {}
func (*CUserMessageTrain) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{26} }

func (m *CUserMessageTrain) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type CUserMessageSayTextChannel struct {
	Player           *int32  `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Channel          *int32  `protobuf:"varint,2,opt,name=channel" json:"channel,omitempty"`
	Text             *string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageSayTextChannel) Reset()                    { *m = CUserMessageSayTextChannel{} }
func (m *CUserMessageSayTextChannel) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageSayTextChannel) ProtoMessage()               {}
func (*CUserMessageSayTextChannel) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{27} }

func (m *CUserMessageSayTextChannel) GetPlayer() int32 {
	if m != nil && m.Player != nil {
		return *m.Player
	}
	return 0
}

func (m *CUserMessageSayTextChannel) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CUserMessageSayTextChannel) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CUserMessageColoredText struct {
	Color            *uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Reset_           *bool   `protobuf:"varint,3,opt,name=reset" json:"reset,omitempty"`
	ContextPlayerId  *int32  `protobuf:"varint,4,opt,name=context_player_id,json=contextPlayerId" json:"context_player_id,omitempty"`
	ContextValue     *int32  `protobuf:"varint,5,opt,name=context_value,json=contextValue" json:"context_value,omitempty"`
	ContextTeamId    *int32  `protobuf:"varint,6,opt,name=context_team_id,json=contextTeamId" json:"context_team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageColoredText) Reset()                    { *m = CUserMessageColoredText{} }
func (m *CUserMessageColoredText) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageColoredText) ProtoMessage()               {}
func (*CUserMessageColoredText) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{28} }

func (m *CUserMessageColoredText) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CUserMessageColoredText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CUserMessageColoredText) GetReset_() bool {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return false
}

func (m *CUserMessageColoredText) GetContextPlayerId() int32 {
	if m != nil && m.ContextPlayerId != nil {
		return *m.ContextPlayerId
	}
	return 0
}

func (m *CUserMessageColoredText) GetContextValue() int32 {
	if m != nil && m.ContextValue != nil {
		return *m.ContextValue
	}
	return 0
}

func (m *CUserMessageColoredText) GetContextTeamId() int32 {
	if m != nil && m.ContextTeamId != nil {
		return *m.ContextTeamId
	}
	return 0
}

type CUserMessageItemPickup struct {
	Itemname         *string `protobuf:"bytes,1,opt,name=itemname" json:"itemname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageItemPickup) Reset()                    { *m = CUserMessageItemPickup{} }
func (m *CUserMessageItemPickup) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageItemPickup) ProtoMessage()               {}
func (*CUserMessageItemPickup) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{29} }

func (m *CUserMessageItemPickup) GetItemname() string {
	if m != nil && m.Itemname != nil {
		return *m.Itemname
	}
	return ""
}

type CUserMessageAmmoDenied struct {
	AmmoId           *uint32 `protobuf:"varint,1,opt,name=ammo_id,json=ammoId" json:"ammo_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageAmmoDenied) Reset()                    { *m = CUserMessageAmmoDenied{} }
func (m *CUserMessageAmmoDenied) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageAmmoDenied) ProtoMessage()               {}
func (*CUserMessageAmmoDenied) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{30} }

func (m *CUserMessageAmmoDenied) GetAmmoId() uint32 {
	if m != nil && m.AmmoId != nil {
		return *m.AmmoId
	}
	return 0
}

type CUserMessageCrosshairAngle struct {
	Angcrosshair     *CMsgQAngle `protobuf:"bytes,1,opt,name=angcrosshair" json:"angcrosshair,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMessageCrosshairAngle) Reset()                    { *m = CUserMessageCrosshairAngle{} }
func (m *CUserMessageCrosshairAngle) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCrosshairAngle) ProtoMessage()               {}
func (*CUserMessageCrosshairAngle) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{31} }

func (m *CUserMessageCrosshairAngle) GetAngcrosshair() *CMsgQAngle {
	if m != nil {
		return m.Angcrosshair
	}
	return nil
}

type CUserMessageShowMenu struct {
	Validslots       *uint32 `protobuf:"varint,1,opt,name=validslots" json:"validslots,omitempty"`
	Displaytime      *uint32 `protobuf:"varint,2,opt,name=displaytime" json:"displaytime,omitempty"`
	Needmore         *bool   `protobuf:"varint,3,opt,name=needmore" json:"needmore,omitempty"`
	Menustring       *string `protobuf:"bytes,4,opt,name=menustring" json:"menustring,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageShowMenu) Reset()                    { *m = CUserMessageShowMenu{} }
func (m *CUserMessageShowMenu) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageShowMenu) ProtoMessage()               {}
func (*CUserMessageShowMenu) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{32} }

func (m *CUserMessageShowMenu) GetValidslots() uint32 {
	if m != nil && m.Validslots != nil {
		return *m.Validslots
	}
	return 0
}

func (m *CUserMessageShowMenu) GetDisplaytime() uint32 {
	if m != nil && m.Displaytime != nil {
		return *m.Displaytime
	}
	return 0
}

func (m *CUserMessageShowMenu) GetNeedmore() bool {
	if m != nil && m.Needmore != nil {
		return *m.Needmore
	}
	return false
}

func (m *CUserMessageShowMenu) GetMenustring() string {
	if m != nil && m.Menustring != nil {
		return *m.Menustring
	}
	return ""
}

type CUserMessageCreditsMsg struct {
	Rolltype         *ERollType `protobuf:"varint,1,opt,name=rolltype,enum=dota.ERollType,def=-1" json:"rolltype,omitempty"`
	LogoLength       *float32   `protobuf:"fixed32,2,opt,name=logo_length,json=logoLength" json:"logo_length,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CUserMessageCreditsMsg) Reset()                    { *m = CUserMessageCreditsMsg{} }
func (m *CUserMessageCreditsMsg) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCreditsMsg) ProtoMessage()               {}
func (*CUserMessageCreditsMsg) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{33} }

const Default_CUserMessageCreditsMsg_Rolltype ERollType = ERollType_ROLL_NONE

func (m *CUserMessageCreditsMsg) GetRolltype() ERollType {
	if m != nil && m.Rolltype != nil {
		return *m.Rolltype
	}
	return Default_CUserMessageCreditsMsg_Rolltype
}

func (m *CUserMessageCreditsMsg) GetLogoLength() float32 {
	if m != nil && m.LogoLength != nil {
		return *m.LogoLength
	}
	return 0
}

type CEntityMessagePlayJingle struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CEntityMessagePlayJingle) Reset()                    { *m = CEntityMessagePlayJingle{} }
func (m *CEntityMessagePlayJingle) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessagePlayJingle) ProtoMessage()               {}
func (*CEntityMessagePlayJingle) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{34} }

type CEntityMessageScreenOverlay struct {
	StartEffect      *bool  `protobuf:"varint,1,opt,name=start_effect,json=startEffect" json:"start_effect,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CEntityMessageScreenOverlay) Reset()                    { *m = CEntityMessageScreenOverlay{} }
func (m *CEntityMessageScreenOverlay) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessageScreenOverlay) ProtoMessage()               {}
func (*CEntityMessageScreenOverlay) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{35} }

func (m *CEntityMessageScreenOverlay) GetStartEffect() bool {
	if m != nil && m.StartEffect != nil {
		return *m.StartEffect
	}
	return false
}

type CEntityMessageRemoveAllDecals struct {
	RemoveDecals     *bool  `protobuf:"varint,1,opt,name=remove_decals,json=removeDecals" json:"remove_decals,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CEntityMessageRemoveAllDecals) Reset()                    { *m = CEntityMessageRemoveAllDecals{} }
func (m *CEntityMessageRemoveAllDecals) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessageRemoveAllDecals) ProtoMessage()               {}
func (*CEntityMessageRemoveAllDecals) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{36} }

func (m *CEntityMessageRemoveAllDecals) GetRemoveDecals() bool {
	if m != nil && m.RemoveDecals != nil {
		return *m.RemoveDecals
	}
	return false
}

type CEntityMessagePropagateForce struct {
	Impulse          *CMsgVector `protobuf:"bytes,1,opt,name=impulse" json:"impulse,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CEntityMessagePropagateForce) Reset()                    { *m = CEntityMessagePropagateForce{} }
func (m *CEntityMessagePropagateForce) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessagePropagateForce) ProtoMessage()               {}
func (*CEntityMessagePropagateForce) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{37} }

func (m *CEntityMessagePropagateForce) GetImpulse() *CMsgVector {
	if m != nil {
		return m.Impulse
	}
	return nil
}

type CEntityMessageDoSpark struct {
	Origin           *CMsgVector `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Entityindex      *uint32     `protobuf:"varint,2,opt,name=entityindex" json:"entityindex,omitempty"`
	Radius           *float32    `protobuf:"fixed32,3,opt,name=radius" json:"radius,omitempty"`
	Color            *uint32     `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
	Beams            *uint32     `protobuf:"varint,5,opt,name=beams" json:"beams,omitempty"`
	Thick            *float32    `protobuf:"fixed32,6,opt,name=thick" json:"thick,omitempty"`
	Duration         *float32    `protobuf:"fixed32,7,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CEntityMessageDoSpark) Reset()                    { *m = CEntityMessageDoSpark{} }
func (m *CEntityMessageDoSpark) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessageDoSpark) ProtoMessage()               {}
func (*CEntityMessageDoSpark) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{38} }

func (m *CEntityMessageDoSpark) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CEntityMessageDoSpark) GetEntityindex() uint32 {
	if m != nil && m.Entityindex != nil {
		return *m.Entityindex
	}
	return 0
}

func (m *CEntityMessageDoSpark) GetRadius() float32 {
	if m != nil && m.Radius != nil {
		return *m.Radius
	}
	return 0
}

func (m *CEntityMessageDoSpark) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CEntityMessageDoSpark) GetBeams() uint32 {
	if m != nil && m.Beams != nil {
		return *m.Beams
	}
	return 0
}

func (m *CEntityMessageDoSpark) GetThick() float32 {
	if m != nil && m.Thick != nil {
		return *m.Thick
	}
	return 0
}

func (m *CEntityMessageDoSpark) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CEntityMessageFixAngle struct {
	Relative         *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle            *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CEntityMessageFixAngle) Reset()                    { *m = CEntityMessageFixAngle{} }
func (m *CEntityMessageFixAngle) String() string            { return proto.CompactTextString(m) }
func (*CEntityMessageFixAngle) ProtoMessage()               {}
func (*CEntityMessageFixAngle) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{39} }

func (m *CEntityMessageFixAngle) GetRelative() bool {
	if m != nil && m.Relative != nil {
		return *m.Relative
	}
	return false
}

func (m *CEntityMessageFixAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CUserMessageCameraTransition struct {
	CameraType       *uint32                                             `protobuf:"varint,1,opt,name=camera_type,json=cameraType" json:"camera_type,omitempty"`
	Duration         *float32                                            `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	ParamsDataDriven *CUserMessageCameraTransition_Transition_DataDriven `protobuf:"bytes,3,opt,name=params_data_driven,json=paramsDataDriven" json:"params_data_driven,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CUserMessageCameraTransition) Reset()                    { *m = CUserMessageCameraTransition{} }
func (m *CUserMessageCameraTransition) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageCameraTransition) ProtoMessage()               {}
func (*CUserMessageCameraTransition) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{40} }

func (m *CUserMessageCameraTransition) GetCameraType() uint32 {
	if m != nil && m.CameraType != nil {
		return *m.CameraType
	}
	return 0
}

func (m *CUserMessageCameraTransition) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CUserMessageCameraTransition) GetParamsDataDriven() *CUserMessageCameraTransition_Transition_DataDriven {
	if m != nil {
		return m.ParamsDataDriven
	}
	return nil
}

type CUserMessageCameraTransition_Transition_DataDriven struct {
	Filename         *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	AttachEntIndex   *int32  `protobuf:"varint,2,opt,name=attach_ent_index,json=attachEntIndex" json:"attach_ent_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMessageCameraTransition_Transition_DataDriven) Reset() {
	*m = CUserMessageCameraTransition_Transition_DataDriven{}
}
func (m *CUserMessageCameraTransition_Transition_DataDriven) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMessageCameraTransition_Transition_DataDriven) ProtoMessage() {}
func (*CUserMessageCameraTransition_Transition_DataDriven) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{40, 0}
}

func (m *CUserMessageCameraTransition_Transition_DataDriven) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CUserMessageCameraTransition_Transition_DataDriven) GetAttachEntIndex() int32 {
	if m != nil && m.AttachEntIndex != nil {
		return *m.AttachEntIndex
	}
	return 0
}

type CUserMsg_ParticleManager struct {
	Type                         *PARTICLE_MESSAGE                                      `protobuf:"varint,1,req,name=type,enum=dota.PARTICLE_MESSAGE,def=0" json:"type,omitempty"`
	Index                        *uint32                                                `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	ReleaseParticleIndex         *CUserMsg_ParticleManager_ReleaseParticleIndex         `protobuf:"bytes,3,opt,name=release_particle_index,json=releaseParticleIndex" json:"release_particle_index,omitempty"`
	CreateParticle               *CUserMsg_ParticleManager_CreateParticle               `protobuf:"bytes,4,opt,name=create_particle,json=createParticle" json:"create_particle,omitempty"`
	DestroyParticle              *CUserMsg_ParticleManager_DestroyParticle              `protobuf:"bytes,5,opt,name=destroy_particle,json=destroyParticle" json:"destroy_particle,omitempty"`
	DestroyParticleInvolving     *CUserMsg_ParticleManager_DestroyParticleInvolving     `protobuf:"bytes,6,opt,name=destroy_particle_involving,json=destroyParticleInvolving" json:"destroy_particle_involving,omitempty"`
	UpdateParticle               *CUserMsg_ParticleManager_UpdateParticle               `protobuf:"bytes,7,opt,name=update_particle,json=updateParticle" json:"update_particle,omitempty"`
	UpdateParticleFwd            *CUserMsg_ParticleManager_UpdateParticleFwd            `protobuf:"bytes,8,opt,name=update_particle_fwd,json=updateParticleFwd" json:"update_particle_fwd,omitempty"`
	UpdateParticleOrient         *CUserMsg_ParticleManager_UpdateParticleOrient         `protobuf:"bytes,9,opt,name=update_particle_orient,json=updateParticleOrient" json:"update_particle_orient,omitempty"`
	UpdateParticleFallback       *CUserMsg_ParticleManager_UpdateParticleFallback       `protobuf:"bytes,10,opt,name=update_particle_fallback,json=updateParticleFallback" json:"update_particle_fallback,omitempty"`
	UpdateParticleOffset         *CUserMsg_ParticleManager_UpdateParticleOffset         `protobuf:"bytes,11,opt,name=update_particle_offset,json=updateParticleOffset" json:"update_particle_offset,omitempty"`
	UpdateParticleEnt            *CUserMsg_ParticleManager_UpdateParticleEnt            `protobuf:"bytes,12,opt,name=update_particle_ent,json=updateParticleEnt" json:"update_particle_ent,omitempty"`
	UpdateParticleShouldDraw     *CUserMsg_ParticleManager_UpdateParticleShouldDraw     `protobuf:"bytes,14,opt,name=update_particle_should_draw,json=updateParticleShouldDraw" json:"update_particle_should_draw,omitempty"`
	UpdateParticleSetFrozen      *CUserMsg_ParticleManager_UpdateParticleSetFrozen      `protobuf:"bytes,15,opt,name=update_particle_set_frozen,json=updateParticleSetFrozen" json:"update_particle_set_frozen,omitempty"`
	ChangeControlPointAttachment *CUserMsg_ParticleManager_ChangeControlPointAttachment `protobuf:"bytes,16,opt,name=change_control_point_attachment,json=changeControlPointAttachment" json:"change_control_point_attachment,omitempty"`
	XXX_unrecognized             []byte                                                 `json:"-"`
}

func (m *CUserMsg_ParticleManager) Reset()                    { *m = CUserMsg_ParticleManager{} }
func (m *CUserMsg_ParticleManager) String() string            { return proto.CompactTextString(m) }
func (*CUserMsg_ParticleManager) ProtoMessage()               {}
func (*CUserMsg_ParticleManager) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{41} }

const Default_CUserMsg_ParticleManager_Type PARTICLE_MESSAGE = PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CREATE

func (m *CUserMsg_ParticleManager) GetType() PARTICLE_MESSAGE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CUserMsg_ParticleManager_Type
}

func (m *CUserMsg_ParticleManager) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CUserMsg_ParticleManager) GetReleaseParticleIndex() *CUserMsg_ParticleManager_ReleaseParticleIndex {
	if m != nil {
		return m.ReleaseParticleIndex
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetCreateParticle() *CUserMsg_ParticleManager_CreateParticle {
	if m != nil {
		return m.CreateParticle
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetDestroyParticle() *CUserMsg_ParticleManager_DestroyParticle {
	if m != nil {
		return m.DestroyParticle
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetDestroyParticleInvolving() *CUserMsg_ParticleManager_DestroyParticleInvolving {
	if m != nil {
		return m.DestroyParticleInvolving
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticle() *CUserMsg_ParticleManager_UpdateParticle {
	if m != nil {
		return m.UpdateParticle
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleFwd() *CUserMsg_ParticleManager_UpdateParticleFwd {
	if m != nil {
		return m.UpdateParticleFwd
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleOrient() *CUserMsg_ParticleManager_UpdateParticleOrient {
	if m != nil {
		return m.UpdateParticleOrient
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleFallback() *CUserMsg_ParticleManager_UpdateParticleFallback {
	if m != nil {
		return m.UpdateParticleFallback
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleOffset() *CUserMsg_ParticleManager_UpdateParticleOffset {
	if m != nil {
		return m.UpdateParticleOffset
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleEnt() *CUserMsg_ParticleManager_UpdateParticleEnt {
	if m != nil {
		return m.UpdateParticleEnt
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleShouldDraw() *CUserMsg_ParticleManager_UpdateParticleShouldDraw {
	if m != nil {
		return m.UpdateParticleShouldDraw
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetUpdateParticleSetFrozen() *CUserMsg_ParticleManager_UpdateParticleSetFrozen {
	if m != nil {
		return m.UpdateParticleSetFrozen
	}
	return nil
}

func (m *CUserMsg_ParticleManager) GetChangeControlPointAttachment() *CUserMsg_ParticleManager_ChangeControlPointAttachment {
	if m != nil {
		return m.ChangeControlPointAttachment
	}
	return nil
}

type CUserMsg_ParticleManager_ReleaseParticleIndex struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_ReleaseParticleIndex) Reset() {
	*m = CUserMsg_ParticleManager_ReleaseParticleIndex{}
}
func (m *CUserMsg_ParticleManager_ReleaseParticleIndex) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_ReleaseParticleIndex) ProtoMessage() {}
func (*CUserMsg_ParticleManager_ReleaseParticleIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 0}
}

type CUserMsg_ParticleManager_CreateParticle struct {
	ParticleNameIndex *uint64 `protobuf:"fixed64,1,opt,name=particle_name_index,json=particleNameIndex" json:"particle_name_index,omitempty"`
	AttachType        *int32  `protobuf:"varint,2,opt,name=attach_type,json=attachType" json:"attach_type,omitempty"`
	EntityHandle      *int32  `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CUserMsg_ParticleManager_CreateParticle) Reset() {
	*m = CUserMsg_ParticleManager_CreateParticle{}
}
func (m *CUserMsg_ParticleManager_CreateParticle) String() string { return proto.CompactTextString(m) }
func (*CUserMsg_ParticleManager_CreateParticle) ProtoMessage()    {}
func (*CUserMsg_ParticleManager_CreateParticle) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 1}
}

func (m *CUserMsg_ParticleManager_CreateParticle) GetParticleNameIndex() uint64 {
	if m != nil && m.ParticleNameIndex != nil {
		return *m.ParticleNameIndex
	}
	return 0
}

func (m *CUserMsg_ParticleManager_CreateParticle) GetAttachType() int32 {
	if m != nil && m.AttachType != nil {
		return *m.AttachType
	}
	return 0
}

func (m *CUserMsg_ParticleManager_CreateParticle) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CUserMsg_ParticleManager_DestroyParticle struct {
	DestroyImmediately *bool  `protobuf:"varint,1,opt,name=destroy_immediately,json=destroyImmediately" json:"destroy_immediately,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_DestroyParticle) Reset() {
	*m = CUserMsg_ParticleManager_DestroyParticle{}
}
func (m *CUserMsg_ParticleManager_DestroyParticle) String() string { return proto.CompactTextString(m) }
func (*CUserMsg_ParticleManager_DestroyParticle) ProtoMessage()    {}
func (*CUserMsg_ParticleManager_DestroyParticle) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 2}
}

func (m *CUserMsg_ParticleManager_DestroyParticle) GetDestroyImmediately() bool {
	if m != nil && m.DestroyImmediately != nil {
		return *m.DestroyImmediately
	}
	return false
}

type CUserMsg_ParticleManager_DestroyParticleInvolving struct {
	DestroyImmediately *bool  `protobuf:"varint,1,opt,name=destroy_immediately,json=destroyImmediately" json:"destroy_immediately,omitempty"`
	EntityHandle       *int32 `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_DestroyParticleInvolving) Reset() {
	*m = CUserMsg_ParticleManager_DestroyParticleInvolving{}
}
func (m *CUserMsg_ParticleManager_DestroyParticleInvolving) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_DestroyParticleInvolving) ProtoMessage() {}
func (*CUserMsg_ParticleManager_DestroyParticleInvolving) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 3}
}

func (m *CUserMsg_ParticleManager_DestroyParticleInvolving) GetDestroyImmediately() bool {
	if m != nil && m.DestroyImmediately != nil {
		return *m.DestroyImmediately
	}
	return false
}

func (m *CUserMsg_ParticleManager_DestroyParticleInvolving) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CUserMsg_ParticleManager_UpdateParticle struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Position         *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticle) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticle{}
}
func (m *CUserMsg_ParticleManager_UpdateParticle) String() string { return proto.CompactTextString(m) }
func (*CUserMsg_ParticleManager_UpdateParticle) ProtoMessage()    {}
func (*CUserMsg_ParticleManager_UpdateParticle) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 4}
}

func (m *CUserMsg_ParticleManager_UpdateParticle) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticle) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleFwd struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Forward          *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleFwd) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleFwd{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleFwd) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleFwd) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleFwd) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 5}
}

func (m *CUserMsg_ParticleManager_UpdateParticleFwd) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleFwd) GetForward() *CMsgVector {
	if m != nil {
		return m.Forward
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleOrient struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Forward          *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
	Right            *CMsgVector `protobuf:"bytes,3,opt,name=right" json:"right,omitempty"`
	Up               *CMsgVector `protobuf:"bytes,4,opt,name=up" json:"up,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleOrient) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleOrient{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleOrient) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleOrient) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleOrient) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 6}
}

func (m *CUserMsg_ParticleManager_UpdateParticleOrient) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleOrient) GetForward() *CMsgVector {
	if m != nil {
		return m.Forward
	}
	return nil
}

func (m *CUserMsg_ParticleManager_UpdateParticleOrient) GetRight() *CMsgVector {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *CUserMsg_ParticleManager_UpdateParticleOrient) GetUp() *CMsgVector {
	if m != nil {
		return m.Up
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleFallback struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Position         *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleFallback) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleFallback{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleFallback) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleFallback) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleFallback) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 7}
}

func (m *CUserMsg_ParticleManager_UpdateParticleFallback) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleFallback) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleOffset struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	OriginOffset     *CMsgVector `protobuf:"bytes,2,opt,name=origin_offset,json=originOffset" json:"origin_offset,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleOffset) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleOffset{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleOffset) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleOffset) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 8}
}

func (m *CUserMsg_ParticleManager_UpdateParticleOffset) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleOffset) GetOriginOffset() *CMsgVector {
	if m != nil {
		return m.OriginOffset
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleEnt struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	EntityHandle     *int32      `protobuf:"varint,2,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	AttachType       *int32      `protobuf:"varint,3,opt,name=attach_type,json=attachType" json:"attach_type,omitempty"`
	Attachment       *int32      `protobuf:"varint,4,opt,name=attachment" json:"attachment,omitempty"`
	FallbackPosition *CMsgVector `protobuf:"bytes,5,opt,name=fallback_position,json=fallbackPosition" json:"fallback_position,omitempty"`
	IncludeWearables *bool       `protobuf:"varint,6,opt,name=include_wearables,json=includeWearables" json:"include_wearables,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleEnt{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleEnt) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleEnt) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleEnt) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 9}
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetAttachType() int32 {
	if m != nil && m.AttachType != nil {
		return *m.AttachType
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetAttachment() int32 {
	if m != nil && m.Attachment != nil {
		return *m.Attachment
	}
	return 0
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetFallbackPosition() *CMsgVector {
	if m != nil {
		return m.FallbackPosition
	}
	return nil
}

func (m *CUserMsg_ParticleManager_UpdateParticleEnt) GetIncludeWearables() bool {
	if m != nil && m.IncludeWearables != nil {
		return *m.IncludeWearables
	}
	return false
}

type CUserMsg_ParticleManager_UpdateParticleSetFrozen struct {
	SetFrozen        *bool  `protobuf:"varint,1,opt,name=set_frozen,json=setFrozen" json:"set_frozen,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleSetFrozen) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleSetFrozen{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleSetFrozen) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleSetFrozen) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleSetFrozen) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 10}
}

func (m *CUserMsg_ParticleManager_UpdateParticleSetFrozen) GetSetFrozen() bool {
	if m != nil && m.SetFrozen != nil {
		return *m.SetFrozen
	}
	return false
}

type CUserMsg_ParticleManager_UpdateParticleShouldDraw struct {
	ShouldDraw       *bool  `protobuf:"varint,1,opt,name=should_draw,json=shouldDraw" json:"should_draw,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_UpdateParticleShouldDraw) Reset() {
	*m = CUserMsg_ParticleManager_UpdateParticleShouldDraw{}
}
func (m *CUserMsg_ParticleManager_UpdateParticleShouldDraw) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_UpdateParticleShouldDraw) ProtoMessage() {}
func (*CUserMsg_ParticleManager_UpdateParticleShouldDraw) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 11}
}

func (m *CUserMsg_ParticleManager_UpdateParticleShouldDraw) GetShouldDraw() bool {
	if m != nil && m.ShouldDraw != nil {
		return *m.ShouldDraw
	}
	return false
}

type CUserMsg_ParticleManager_ChangeControlPointAttachment struct {
	AttachmentOld    *int32 `protobuf:"varint,1,opt,name=attachment_old,json=attachmentOld" json:"attachment_old,omitempty"`
	AttachmentNew    *int32 `protobuf:"varint,2,opt,name=attachment_new,json=attachmentNew" json:"attachment_new,omitempty"`
	EntityHandle     *int32 `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMsg_ParticleManager_ChangeControlPointAttachment) Reset() {
	*m = CUserMsg_ParticleManager_ChangeControlPointAttachment{}
}
func (m *CUserMsg_ParticleManager_ChangeControlPointAttachment) String() string {
	return proto.CompactTextString(m)
}
func (*CUserMsg_ParticleManager_ChangeControlPointAttachment) ProtoMessage() {}
func (*CUserMsg_ParticleManager_ChangeControlPointAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor43, []int{41, 12}
}

func (m *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentOld() int32 {
	if m != nil && m.AttachmentOld != nil {
		return *m.AttachmentOld
	}
	return 0
}

func (m *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentNew() int32 {
	if m != nil && m.AttachmentNew != nil {
		return *m.AttachmentNew
	}
	return 0
}

func (m *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CUserMsg_HudError struct {
	OrderId          *int32 `protobuf:"varint,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CUserMsg_HudError) Reset()                    { *m = CUserMsg_HudError{} }
func (m *CUserMsg_HudError) String() string            { return proto.CompactTextString(m) }
func (*CUserMsg_HudError) ProtoMessage()               {}
func (*CUserMsg_HudError) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{42} }

func (m *CUserMsg_HudError) GetOrderId() int32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type CUserMsg_CustomGameEvent struct {
	EventName        *string `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserMsg_CustomGameEvent) Reset()                    { *m = CUserMsg_CustomGameEvent{} }
func (m *CUserMsg_CustomGameEvent) String() string            { return proto.CompactTextString(m) }
func (*CUserMsg_CustomGameEvent) ProtoMessage()               {}
func (*CUserMsg_CustomGameEvent) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{43} }

func (m *CUserMsg_CustomGameEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *CUserMsg_CustomGameEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CUserMessageHapticPulse struct {
	HandId           *int32            `protobuf:"varint,1,opt,name=hand_id,json=handId" json:"hand_id,omitempty"`
	PulseType        *EHapticPulseType `protobuf:"varint,2,opt,name=pulse_type,json=pulseType,enum=dota.EHapticPulseType,def=0" json:"pulse_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CUserMessageHapticPulse) Reset()                    { *m = CUserMessageHapticPulse{} }
func (m *CUserMessageHapticPulse) String() string            { return proto.CompactTextString(m) }
func (*CUserMessageHapticPulse) ProtoMessage()               {}
func (*CUserMessageHapticPulse) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{44} }

const Default_CUserMessageHapticPulse_PulseType EHapticPulseType = EHapticPulseType_VR_HAND_HAPTIC_PULSE_LIGHT

func (m *CUserMessageHapticPulse) GetHandId() int32 {
	if m != nil && m.HandId != nil {
		return *m.HandId
	}
	return 0
}

func (m *CUserMessageHapticPulse) GetPulseType() EHapticPulseType {
	if m != nil && m.PulseType != nil {
		return *m.PulseType
	}
	return Default_CUserMessageHapticPulse_PulseType
}

func init() {
	proto.RegisterType((*CUserMessageAchievementEvent)(nil), "dota.CUserMessageAchievementEvent")
	proto.RegisterType((*CUserMessageCloseCaption)(nil), "dota.CUserMessageCloseCaption")
	proto.RegisterType((*CUserMessageCloseCaptionDirect)(nil), "dota.CUserMessageCloseCaptionDirect")
	proto.RegisterType((*CUserMessageCloseCaptionPlaceholder)(nil), "dota.CUserMessageCloseCaptionPlaceholder")
	proto.RegisterType((*CUserMessageCurrentTimescale)(nil), "dota.CUserMessageCurrentTimescale")
	proto.RegisterType((*CUserMessageDesiredTimescale)(nil), "dota.CUserMessageDesiredTimescale")
	proto.RegisterType((*CUserMessageFade)(nil), "dota.CUserMessageFade")
	proto.RegisterType((*CUserMessageShake)(nil), "dota.CUserMessageShake")
	proto.RegisterType((*CUserMessageShakeDir)(nil), "dota.CUserMessageShakeDir")
	proto.RegisterType((*CUserMessageScreenTilt)(nil), "dota.CUserMessageScreenTilt")
	proto.RegisterType((*CUserMessageSayText)(nil), "dota.CUserMessageSayText")
	proto.RegisterType((*CUserMessageSayText2)(nil), "dota.CUserMessageSayText2")
	proto.RegisterType((*CUserMessageHudMsg)(nil), "dota.CUserMessageHudMsg")
	proto.RegisterType((*CUserMessageHudText)(nil), "dota.CUserMessageHudText")
	proto.RegisterType((*CUserMessageTextMsg)(nil), "dota.CUserMessageTextMsg")
	proto.RegisterType((*CUserMessageGameTitle)(nil), "dota.CUserMessageGameTitle")
	proto.RegisterType((*CUserMessageResetHUD)(nil), "dota.CUserMessageResetHUD")
	proto.RegisterType((*CUserMessageSendAudio)(nil), "dota.CUserMessageSendAudio")
	proto.RegisterType((*CUserMessageAudioParameter)(nil), "dota.CUserMessageAudioParameter")
	proto.RegisterType((*CUserMessageVoiceMask)(nil), "dota.CUserMessageVoiceMask")
	proto.RegisterType((*CUserMessageRequestState)(nil), "dota.CUserMessageRequestState")
	proto.RegisterType((*CUserMessageHintText)(nil), "dota.CUserMessageHintText")
	proto.RegisterType((*CUserMessageKeyHintText)(nil), "dota.CUserMessageKeyHintText")
	proto.RegisterType((*CUserMessageVoiceSubtitle)(nil), "dota.CUserMessageVoiceSubtitle")
	proto.RegisterType((*CUserMessageVGUIMenu)(nil), "dota.CUserMessageVGUIMenu")
	proto.RegisterType((*CUserMessageVGUIMenu_Keys)(nil), "dota.CUserMessageVGUIMenu.Keys")
	proto.RegisterType((*CUserMessageRumble)(nil), "dota.CUserMessageRumble")
	proto.RegisterType((*CUserMessageTrain)(nil), "dota.CUserMessageTrain")
	proto.RegisterType((*CUserMessageSayTextChannel)(nil), "dota.CUserMessageSayTextChannel")
	proto.RegisterType((*CUserMessageColoredText)(nil), "dota.CUserMessageColoredText")
	proto.RegisterType((*CUserMessageItemPickup)(nil), "dota.CUserMessageItemPickup")
	proto.RegisterType((*CUserMessageAmmoDenied)(nil), "dota.CUserMessageAmmoDenied")
	proto.RegisterType((*CUserMessageCrosshairAngle)(nil), "dota.CUserMessageCrosshairAngle")
	proto.RegisterType((*CUserMessageShowMenu)(nil), "dota.CUserMessageShowMenu")
	proto.RegisterType((*CUserMessageCreditsMsg)(nil), "dota.CUserMessageCreditsMsg")
	proto.RegisterType((*CEntityMessagePlayJingle)(nil), "dota.CEntityMessagePlayJingle")
	proto.RegisterType((*CEntityMessageScreenOverlay)(nil), "dota.CEntityMessageScreenOverlay")
	proto.RegisterType((*CEntityMessageRemoveAllDecals)(nil), "dota.CEntityMessageRemoveAllDecals")
	proto.RegisterType((*CEntityMessagePropagateForce)(nil), "dota.CEntityMessagePropagateForce")
	proto.RegisterType((*CEntityMessageDoSpark)(nil), "dota.CEntityMessageDoSpark")
	proto.RegisterType((*CEntityMessageFixAngle)(nil), "dota.CEntityMessageFixAngle")
	proto.RegisterType((*CUserMessageCameraTransition)(nil), "dota.CUserMessageCameraTransition")
	proto.RegisterType((*CUserMessageCameraTransition_Transition_DataDriven)(nil), "dota.CUserMessageCameraTransition.Transition_DataDriven")
	proto.RegisterType((*CUserMsg_ParticleManager)(nil), "dota.CUserMsg_ParticleManager")
	proto.RegisterType((*CUserMsg_ParticleManager_ReleaseParticleIndex)(nil), "dota.CUserMsg_ParticleManager.ReleaseParticleIndex")
	proto.RegisterType((*CUserMsg_ParticleManager_CreateParticle)(nil), "dota.CUserMsg_ParticleManager.CreateParticle")
	proto.RegisterType((*CUserMsg_ParticleManager_DestroyParticle)(nil), "dota.CUserMsg_ParticleManager.DestroyParticle")
	proto.RegisterType((*CUserMsg_ParticleManager_DestroyParticleInvolving)(nil), "dota.CUserMsg_ParticleManager.DestroyParticleInvolving")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticle)(nil), "dota.CUserMsg_ParticleManager.UpdateParticle")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleFwd)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleFwd")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleOrient)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleOrient")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleFallback)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleFallback")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleOffset)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleOffset")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleEnt)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleEnt")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleSetFrozen)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleSetFrozen")
	proto.RegisterType((*CUserMsg_ParticleManager_UpdateParticleShouldDraw)(nil), "dota.CUserMsg_ParticleManager.UpdateParticleShouldDraw")
	proto.RegisterType((*CUserMsg_ParticleManager_ChangeControlPointAttachment)(nil), "dota.CUserMsg_ParticleManager.ChangeControlPointAttachment")
	proto.RegisterType((*CUserMsg_HudError)(nil), "dota.CUserMsg_HudError")
	proto.RegisterType((*CUserMsg_CustomGameEvent)(nil), "dota.CUserMsg_CustomGameEvent")
	proto.RegisterType((*CUserMessageHapticPulse)(nil), "dota.CUserMessageHapticPulse")
	proto.RegisterEnum("dota.EBaseUserMessages", EBaseUserMessages_name, EBaseUserMessages_value)
	proto.RegisterEnum("dota.EBaseEntityMessages", EBaseEntityMessages_name, EBaseEntityMessages_value)
	proto.RegisterEnum("dota.ERollType", ERollType_name, ERollType_value)
	proto.RegisterEnum("dota.PARTICLE_MESSAGE", PARTICLE_MESSAGE_name, PARTICLE_MESSAGE_value)
	proto.RegisterEnum("dota.EHapticPulseType", EHapticPulseType_name, EHapticPulseType_value)
}

func init() { proto.RegisterFile("usermessages.proto", fileDescriptor43) }

var fileDescriptor43 = []byte{
	// 3504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xdd, 0x73, 0x2b, 0x47,
	0x56, 0xcf, 0xe8, 0x5a, 0xb6, 0x75, 0xe4, 0x8f, 0x76, 0xdf, 0x7b, 0x6d, 0x45, 0xf7, 0xe6, 0x5e,
	0x33, 0x61, 0x13, 0xe3, 0x10, 0x27, 0x71, 0x6e, 0x96, 0xd4, 0xa6, 0xa8, 0x5d, 0x5d, 0x69, 0x6c,
	0x2b, 0xb1, 0x24, 0x6f, 0x5b, 0x76, 0x08, 0x1f, 0x35, 0xb4, 0x67, 0xda, 0xd2, 0xe0, 0xf9, 0x50,
	0xe6, 0xc3, 0x1f, 0xd4, 0x02, 0xcb, 0x42, 0x96, 0x65, 0x81, 0x85, 0xa5, 0x02, 0xbc, 0xf0, 0x44,
	0x15, 0x55, 0x14, 0x6f, 0x54, 0xf1, 0x00, 0xff, 0x01, 0x4f, 0x3c, 0xf0, 0xc6, 0x5f, 0x03, 0xd5,
	0x1f, 0x33, 0x9a, 0x91, 0xfc, 0x75, 0xb7, 0x58, 0xf4, 0xa4, 0xf3, 0xeb, 0xd3, 0xe7, 0x9c, 0x3e,
	0x7d, 0xfa, 0xf4, 0xe9, 0x33, 0x80, 0x93, 0x88, 0x85, 0x1e, 0x8b, 0x22, 0x3a, 0x60, 0xd1, 0xd6,
	0x28, 0x0c, 0xe2, 0x00, 0xcf, 0xd8, 0x41, 0x4c, 0xeb, 0xab, 0x3e, 0x8b, 0x2f, 0x82, 0xf0, 0xec,
	0x84, 0x46, 0x2c, 0xbe, 0x1a, 0xa5, 0xa3, 0xfa, 0x77, 0xe0, 0x69, 0xf3, 0x28, 0x62, 0x61, 0x47,
	0x4e, 0x6a, 0x58, 0x43, 0x87, 0x9d, 0x33, 0x8f, 0xf9, 0xb1, 0x71, 0xce, 0xfc, 0x18, 0xaf, 0x43,
	0x95, 0x8e, 0xb1, 0x9a, 0xb6, 0xae, 0x6d, 0x2c, 0x92, 0x3c, 0xa4, 0xff, 0x48, 0x83, 0x5a, 0x5e,
	0x44, 0xd3, 0x0d, 0x22, 0xd6, 0xa4, 0xa3, 0xd8, 0x09, 0x7c, 0x8c, 0x61, 0x66, 0x48, 0xa3, 0xa1,
	0x98, 0x37, 0x47, 0xc4, 0x7f, 0x5c, 0x87, 0x79, 0x3b, 0x09, 0x29, 0x1f, 0xaf, 0x95, 0xd6, 0xb5,
	0x8d, 0x12, 0xc9, 0x68, 0xfc, 0x1c, 0xaa, 0xa7, 0x61, 0xe0, 0x99, 0x23, 0x97, 0x5e, 0xb1, 0xb0,
	0xf6, 0x60, 0x5d, 0xdb, 0x98, 0x27, 0xc0, 0xa1, 0x03, 0x81, 0xe0, 0x27, 0x50, 0x61, 0x7e, 0x6c,
	0x3a, 0xbe, 0xcd, 0x2e, 0x6b, 0x33, 0xeb, 0xda, 0x46, 0x99, 0xcc, 0x33, 0x3f, 0x6e, 0x73, 0x5a,
	0xff, 0x89, 0x06, 0xcf, 0x6e, 0x32, 0xa5, 0xe5, 0x84, 0xcc, 0x8a, 0xff, 0x9f, 0x0d, 0xfa, 0x3b,
	0x0d, 0xde, 0xbc, 0xc9, 0xa0, 0x03, 0x97, 0x5a, 0x6c, 0x18, 0xb8, 0x36, 0x0b, 0xf1, 0x2a, 0xcc,
	0x46, 0x71, 0xe8, 0xf8, 0x03, 0x61, 0x57, 0x85, 0x28, 0xea, 0xe7, 0x68, 0xd9, 0xc7, 0xc5, 0x7d,
	0x6f, 0x26, 0x61, 0xc8, 0xfc, 0xb8, 0xef, 0x78, 0x2c, 0xb2, 0xa8, 0xcb, 0x70, 0x0d, 0xe6, 0x2c,
	0x89, 0x09, 0x93, 0x4a, 0x24, 0x25, 0xf5, 0x7f, 0xd5, 0x8a, 0x53, 0x5b, 0x2c, 0x72, 0x42, 0x66,
	0x17, 0xa6, 0xda, 0x12, 0x4b, 0xa7, 0x2a, 0x12, 0xeb, 0xb0, 0x40, 0x2d, 0x8b, 0xb9, 0xac, 0xb0,
	0xa4, 0x02, 0xc6, 0x79, 0x3c, 0xc7, 0x3f, 0x71, 0x99, 0x6f, 0x87, 0x34, 0x66, 0x62, 0x5d, 0x25,
	0x52, 0xc0, 0xf0, 0x36, 0x3c, 0x12, 0x84, 0xcd, 0xdc, 0x98, 0x7a, 0x89, 0x1b, 0x3b, 0x23, 0xd7,
	0x61, 0xa1, 0x58, 0x64, 0x89, 0x5c, 0x3b, 0xa6, 0x5f, 0x00, 0xca, 0x5b, 0xbd, 0x43, 0x6d, 0x56,
	0x70, 0xaf, 0x8c, 0xec, 0xb1, 0x7b, 0x9f, 0x40, 0x85, 0x6f, 0x8e, 0x19, 0x3b, 0x1e, 0x13, 0x86,
	0x2e, 0x92, 0x79, 0x0e, 0xf0, 0x75, 0xe2, 0x47, 0x50, 0x3e, 0x75, 0xe9, 0x20, 0x12, 0xd6, 0x2d,
	0x12, 0x49, 0x70, 0xd4, 0x0a, 0xdc, 0x40, 0xda, 0x31, 0x47, 0x24, 0xa1, 0x7f, 0xa5, 0xc1, 0x4a,
	0x5e, 0xf3, 0xe1, 0x90, 0x9e, 0x49, 0xff, 0x06, 0x9e, 0x47, 0x7d, 0x5b, 0x69, 0x4e, 0x49, 0xfc,
	0x14, 0x2a, 0xd4, 0x1b, 0xb9, 0x4e, 0x9c, 0xd8, 0x4c, 0x79, 0x68, 0x0c, 0xf0, 0xd1, 0xd3, 0x90,
	0x7d, 0x99, 0x30, 0xdf, 0xba, 0x52, 0xbe, 0x19, 0x03, 0x85, 0x05, 0xcd, 0x14, 0xe3, 0x45, 0x4f,
	0xe0, 0xd1, 0x94, 0x19, 0x2d, 0x27, 0xc4, 0xef, 0x42, 0x39, 0xe2, 0xff, 0x85, 0x1d, 0xd5, 0xed,
	0xb5, 0x2d, 0x9e, 0x2f, 0xb6, 0xa6, 0x58, 0x89, 0xe4, 0xc2, 0x5b, 0x50, 0xb1, 0xc5, 0x51, 0x4a,
	0x37, 0xb0, 0xba, 0x8d, 0xd4, 0x94, 0x4e, 0x34, 0x38, 0x66, 0x56, 0x1c, 0x84, 0x64, 0xcc, 0xa2,
	0xff, 0xb3, 0x06, 0xab, 0x05, 0x61, 0x56, 0xc8, 0x98, 0xdf, 0x77, 0xdc, 0xf8, 0x16, 0x1f, 0x3c,
	0x83, 0x2a, 0xa3, 0x11, 0x33, 0x1d, 0xdf, 0x0c, 0x92, 0x58, 0xa8, 0x99, 0x27, 0x15, 0x0e, 0xb5,
	0xfd, 0x5e, 0x12, 0xe3, 0xb7, 0xa0, 0x4c, 0xfd, 0x81, 0x2b, 0xa3, 0xe3, 0x3a, 0x03, 0xe4, 0xf0,
	0x6d, 0xfe, 0xe0, 0x99, 0x40, 0xec, 0x6d, 0x59, 0xe0, 0xe2, 0xbf, 0x6e, 0xc2, 0xc3, 0x82, 0xad,
	0xf4, 0xaa, 0xcf, 0x2e, 0x45, 0x12, 0x94, 0xa7, 0x4c, 0x9e, 0x25, 0x95, 0x04, 0x73, 0x90, 0x10,
	0xc6, 0x2e, 0xa5, 0xa5, 0x15, 0x22, 0xfe, 0x73, 0xcc, 0x1a, 0xd2, 0x58, 0x9d, 0x4c, 0xf1, 0x5f,
	0xff, 0x4f, 0x6d, 0x62, 0x17, 0xa4, 0x86, 0x6d, 0xae, 0x82, 0xf9, 0xb1, 0x13, 0x5f, 0x15, 0x54,
	0xe4, 0xa0, 0x4c, 0x5c, 0x69, 0x2c, 0x8e, 0xcf, 0x52, 0xd9, 0xde, 0xa7, 0x9e, 0xf4, 0x46, 0x85,
	0xe4, 0x21, 0x9e, 0x59, 0x46, 0x34, 0xa4, 0xde, 0x07, 0x62, 0xfd, 0x15, 0xa2, 0xa8, 0x0c, 0xdf,
	0x16, 0xeb, 0x4f, 0xf1, 0xed, 0x0c, 0xff, 0xb0, 0x36, 0x9b, 0xc3, 0x3f, 0xcc, 0xf0, 0x17, 0xb5,
	0xb9, 0x1c, 0xfe, 0x42, 0xff, 0xa7, 0x12, 0xe0, 0xfc, 0x82, 0xf6, 0x12, 0xbb, 0x13, 0x0d, 0xc4,
	0xd6, 0x0e, 0xa9, 0xef, 0x33, 0x37, 0xdb, 0x5a, 0x49, 0xe2, 0x05, 0xd0, 0x2e, 0x55, 0x58, 0x6b,
	0x97, 0x9c, 0x4a, 0xc3, 0x58, 0xbb, 0xe2, 0x4a, 0xc4, 0x99, 0xf9, 0x40, 0x9d, 0x20, 0x45, 0x65,
	0xb8, 0x34, 0x36, 0xc5, 0x85, 0xb1, 0xec, 0xf4, 0x94, 0x59, 0xb1, 0x30, 0x76, 0x91, 0x28, 0x0a,
	0xaf, 0xc3, 0xc2, 0x29, 0xb5, 0x45, 0xf8, 0x88, 0x2d, 0x9e, 0x13, 0x0a, 0x80, 0x63, 0x6d, 0x5f,
	0x1c, 0x60, 0x1d, 0x16, 0x05, 0x47, 0x90, 0xc4, 0x92, 0x65, 0x5e, 0xb0, 0x54, 0x39, 0xd8, 0x4b,
	0x44, 0x1e, 0x2c, 0x66, 0x80, 0x8a, 0x8c, 0x9e, 0x2c, 0x03, 0xac, 0xc1, 0xdc, 0xe9, 0xa5, 0x1c,
	0x02, 0x31, 0x34, 0x7b, 0x7a, 0x29, 0x06, 0x6a, 0x30, 0xa7, 0xfc, 0x5f, 0xab, 0x0a, 0x4f, 0xa5,
	0xa4, 0xfe, 0x5e, 0x31, 0xb8, 0xf6, 0x12, 0x5b, 0x04, 0x57, 0x6e, 0x82, 0x56, 0x9c, 0xf0, 0xed,
	0xe2, 0x04, 0xce, 0xcd, 0x7d, 0x8b, 0x61, 0xc6, 0x66, 0x51, 0x7a, 0x17, 0x8b, 0xff, 0x3c, 0xf5,
	0x88, 0x0d, 0xa9, 0x95, 0xd6, 0x1f, 0x6c, 0x54, 0x88, 0x24, 0xf4, 0x35, 0x78, 0x9c, 0x17, 0xb0,
	0x4b, 0x3d, 0xd6, 0x77, 0x62, 0x97, 0xe9, 0xab, 0xc5, 0x28, 0x24, 0x2c, 0x62, 0xf1, 0xde, 0x51,
	0x4b, 0x6f, 0x17, 0x27, 0x1c, 0x32, 0xdf, 0x6e, 0x24, 0xb6, 0x13, 0xf0, 0xb4, 0x13, 0x05, 0x89,
	0x6f, 0x8b, 0x30, 0x93, 0x66, 0x8e, 0x01, 0x6e, 0x51, 0x14, 0x07, 0xa3, 0x34, 0x34, 0xf9, 0x7f,
	0xfd, 0xef, 0x35, 0xa8, 0x17, 0x2a, 0x0b, 0x2e, 0xe7, 0x80, 0x9b, 0xc5, 0x62, 0x16, 0xe2, 0x6f,
	0xc0, 0xd2, 0x28, 0x25, 0x4c, 0x5e, 0x90, 0xa8, 0xe5, 0x2c, 0x66, 0x68, 0xff, 0x6a, 0xc4, 0xf0,
	0x2f, 0xc2, 0x12, 0xd7, 0x60, 0xf2, 0x7b, 0xda, 0xb4, 0x02, 0x3b, 0x4d, 0xc5, 0x0b, 0x1c, 0xdd,
	0xa3, 0xd1, 0xb0, 0x19, 0xd8, 0x22, 0x1d, 0x9f, 0x53, 0x37, 0x49, 0x2f, 0x0b, 0x49, 0xf0, 0xfd,
	0x73, 0xfc, 0xd8, 0x94, 0x23, 0x33, 0x32, 0x83, 0x3b, 0x7e, 0x7c, 0xcc, 0x69, 0xfd, 0x7b, 0xc5,
	0x95, 0x1e, 0x07, 0x8e, 0xc5, 0x3a, 0x34, 0x3a, 0xc3, 0x6f, 0xc3, 0xf2, 0x80, 0x7a, 0x2c, 0x4c,
	0x5c, 0x16, 0x99, 0x1e, 0x8d, 0xce, 0xa2, 0x9a, 0xb6, 0xfe, 0x60, 0x63, 0x91, 0x2c, 0x65, 0x30,
	0xe7, 0x8b, 0xb8, 0xf8, 0x13, 0xea, 0x2b, 0x96, 0x92, 0x60, 0x99, 0x3f, 0xa1, 0xbe, 0x1c, 0x7c,
	0x03, 0xc0, 0x0b, 0x6c, 0x93, 0xf9, 0xf4, 0x44, 0x65, 0xa9, 0x79, 0x52, 0xf1, 0x02, 0xdb, 0x10,
	0x80, 0x5e, 0x2f, 0x96, 0x4c, 0x84, 0xe7, 0xef, 0x28, 0x3e, 0x8c, 0x69, 0xcc, 0xf4, 0xf7, 0x8b,
	0x7b, 0xb3, 0xe7, 0xf8, 0xf1, 0x1d, 0x71, 0xf2, 0x11, 0xac, 0xe5, 0x67, 0x7c, 0xc6, 0xae, 0xb2,
	0x49, 0x75, 0x98, 0x4f, 0xcb, 0x41, 0xb1, 0x8c, 0x0a, 0xc9, 0x68, 0xfd, 0x37, 0xe0, 0xf5, 0x29,
	0x17, 0x1c, 0x26, 0x27, 0x31, 0x8f, 0x10, 0x71, 0xde, 0x65, 0x61, 0xa1, 0x89, 0xca, 0x41, 0x51,
	0x7c, 0xab, 0x3d, 0xe6, 0x27, 0x62, 0x1b, 0xca, 0x44, 0xfc, 0xe7, 0x98, 0x13, 0x33, 0x4f, 0x2c,
	0xb3, 0x4c, 0xc4, 0x7f, 0xfd, 0x1f, 0x27, 0x12, 0xdd, 0xf1, 0xee, 0x51, 0xbb, 0xa3, 0x98, 0x73,
	0x41, 0x34, 0x93, 0xc5, 0xcf, 0x30, 0xb8, 0xc8, 0xe2, 0x67, 0x18, 0x5c, 0xe0, 0x0f, 0x61, 0xe6,
	0x8c, 0x5d, 0xf1, 0x1b, 0xf6, 0xc1, 0x46, 0x75, 0xfb, 0xf9, 0xf4, 0xad, 0x94, 0x4a, 0xdc, 0xfa,
	0x8c, 0x5d, 0x45, 0x44, 0x30, 0xd7, 0xdf, 0x87, 0x19, 0x4e, 0x5d, 0xab, 0x24, 0x0b, 0x12, 0x99,
	0xa3, 0x25, 0xa1, 0xf7, 0x8b, 0xe9, 0x8b, 0x24, 0xde, 0x89, 0x2b, 0x78, 0xc7, 0x79, 0xb8, 0x4c,
	0xca, 0x59, 0x06, 0xb6, 0x69, 0x4c, 0xd3, 0xb5, 0xf3, 0xff, 0xc5, 0x4a, 0xa0, 0xac, 0x2a, 0x01,
	0xfd, 0xbd, 0xe2, 0x95, 0xdf, 0x0f, 0xa9, 0xe3, 0xf3, 0xbd, 0x18, 0x05, 0x91, 0x93, 0xaf, 0x36,
	0x52, 0x5a, 0x3f, 0x29, 0x1e, 0x16, 0x75, 0x2d, 0x34, 0x55, 0xce, 0xbc, 0x69, 0x33, 0x72, 0x59,
	0x56, 0xda, 0x94, 0x65, 0xd9, 0xf4, 0x3e, 0x7a, 0x30, 0xbe, 0x8f, 0xf4, 0xff, 0xd2, 0x8a, 0x71,
	0xd2, 0xe4, 0x49, 0x94, 0xc9, 0x24, 0x94, 0x95, 0x2e, 0xd2, 0x30, 0x49, 0x5c, 0x7b, 0xab, 0x3d,
	0x82, 0x72, 0xc8, 0xd3, 0x85, 0x0a, 0x6a, 0x49, 0xe0, 0x4d, 0x58, 0xb1, 0x02, 0x9f, 0x33, 0xa8,
	0x7a, 0xd4, 0x74, 0x6c, 0x55, 0x73, 0x2e, 0xab, 0x01, 0x59, 0x95, 0xb6, 0x6d, 0xfc, 0x26, 0x2c,
	0xa6, 0xbc, 0x72, 0x43, 0xca, 0x82, 0x6f, 0x41, 0x81, 0xe2, 0x7c, 0xe2, 0xb7, 0x20, 0x9d, 0x67,
	0xc6, 0x8c, 0x7a, 0x5c, 0xdc, 0xac, 0x60, 0x4b, 0xe7, 0xf6, 0x19, 0xf5, 0xda, 0xb6, 0xfe, 0xa2,
	0x58, 0x5d, 0xb4, 0x63, 0xe6, 0x1d, 0x38, 0xd6, 0x59, 0x32, 0xe2, 0xee, 0xe6, 0x91, 0x98, 0x8b,
	0x83, 0x8c, 0xd6, 0x3f, 0x28, 0xce, 0x6a, 0x78, 0x5e, 0xd0, 0x62, 0xbe, 0xc3, 0x6c, 0x9e, 0xd7,
	0xa9, 0xe7, 0x05, 0x5c, 0x9f, 0x74, 0xc5, 0x2c, 0x27, 0xdb, 0xb6, 0x4e, 0x8a, 0x3b, 0xd4, 0x0c,
	0x83, 0x28, 0x1a, 0x52, 0x27, 0x6c, 0x88, 0x42, 0xe3, 0x05, 0x2c, 0x50, 0x7f, 0x60, 0xa5, 0xa0,
	0xaa, 0xa5, 0x72, 0x75, 0xc9, 0x77, 0x05, 0x1f, 0x29, 0x70, 0xe9, 0x5f, 0x4f, 0x56, 0x03, 0xc3,
	0xe0, 0x42, 0x1c, 0x92, 0x67, 0x00, 0xe7, 0xd4, 0x75, 0xec, 0xc8, 0x0d, 0xe2, 0x48, 0x19, 0x92,
	0x43, 0xf8, 0xbd, 0x6f, 0x3b, 0x11, 0xf7, 0x74, 0xae, 0x3c, 0xcd, 0x43, 0x7c, 0xf5, 0x3e, 0x63,
	0xb6, 0x17, 0x84, 0x69, 0xfa, 0xc9, 0x68, 0x2e, 0x9d, 0x9f, 0x5b, 0xf5, 0xe2, 0x90, 0x75, 0x41,
	0x0e, 0xd1, 0xbf, 0x2c, 0x7a, 0xa7, 0x19, 0x32, 0xdb, 0x89, 0x23, 0x7e, 0xf5, 0x7c, 0x13, 0xe6,
	0xc3, 0xc0, 0x75, 0xb3, 0x7c, 0xbd, 0xb4, 0xbd, 0x2c, 0x97, 0xc8, 0x48, 0xe0, 0xba, 0x3c, 0x63,
	0x7f, 0xab, 0x42, 0x7a, 0xfb, 0xfb, 0x66, 0xb7, 0xd7, 0x35, 0x48, 0xc6, 0xcb, 0xdf, 0x2a, 0x6e,
	0x30, 0x08, 0x4c, 0x97, 0xf9, 0x83, 0x78, 0xa8, 0xae, 0x7f, 0xe0, 0xd0, 0xbe, 0x40, 0x44, 0x42,
	0x34, 0x44, 0xb1, 0xa3, 0x94, 0xf2, 0x68, 0xf9, 0xd4, 0xe1, 0x3e, 0xd3, 0xbf, 0x03, 0x4f, 0x8a,
	0x63, 0xb2, 0x84, 0xec, 0x9d, 0xb3, 0xd0, 0xa5, 0x57, 0xf8, 0x17, 0x60, 0x21, 0x8a, 0x69, 0x18,
	0x9b, 0xaa, 0x14, 0xd0, 0xc4, 0x6a, 0xab, 0x02, 0x33, 0x04, 0xa4, 0xb7, 0xe0, 0x8d, 0xa2, 0x04,
	0xc2, 0xbc, 0xe0, 0x9c, 0x35, 0x5c, 0xb7, 0xc5, 0x2c, 0xea, 0x46, 0x3c, 0x24, 0x43, 0x01, 0x99,
	0xb6, 0x00, 0x94, 0x90, 0x05, 0x09, 0x4a, 0x26, 0xfd, 0x53, 0x78, 0x3a, 0x61, 0x63, 0x18, 0x8c,
	0xe8, 0x80, 0xc6, 0x6c, 0x27, 0x08, 0x2d, 0x86, 0x37, 0x61, 0xce, 0xf1, 0x46, 0x89, 0x1b, 0xb1,
	0xe9, 0xed, 0x57, 0x65, 0x69, 0xca, 0xa0, 0xff, 0xb7, 0x06, 0x8f, 0x8b, 0xc2, 0x5a, 0xc1, 0xe1,
	0x88, 0x86, 0x67, 0x78, 0x03, 0x66, 0x83, 0xd0, 0x19, 0x38, 0xfe, 0x8d, 0x42, 0xd4, 0xf8, 0x64,
	0xc9, 0x58, 0x9a, 0x2e, 0x19, 0x57, 0x61, 0x36, 0xa4, 0xb6, 0x93, 0x44, 0xea, 0x62, 0x54, 0xd4,
	0xf5, 0x0f, 0x15, 0x8e, 0x9e, 0x30, 0xea, 0x45, 0xe2, 0x3c, 0x2e, 0x12, 0x49, 0x70, 0x34, 0x1e,
	0x3a, 0xd6, 0x99, 0x38, 0x7e, 0x25, 0x22, 0x89, 0x42, 0x61, 0x3d, 0x37, 0xf1, 0xd0, 0xf8, 0x4d,
	0x58, 0x2d, 0x2e, 0x6d, 0xc7, 0xb9, 0x6c, 0xa4, 0xe5, 0x78, 0xc8, 0x5c, 0x1a, 0x3b, 0xe7, 0x4c,
	0x79, 0x38, 0xa3, 0xc7, 0x25, 0x7d, 0xe9, 0x86, 0xa3, 0x23, 0x87, 0xf5, 0x7f, 0x28, 0x4d, 0xbc,
	0x5c, 0xf9, 0xad, 0x4c, 0xfb, 0x21, 0xf5, 0x65, 0x2a, 0xe5, 0xb1, 0x66, 0x09, 0x2c, 0x5f, 0x56,
	0x80, 0x84, 0x44, 0x4d, 0x71, 0xdb, 0xa3, 0xfa, 0x14, 0xb0, 0x28, 0x40, 0x22, 0x93, 0x67, 0x77,
	0xd3, 0x0e, 0x9d, 0x73, 0xe6, 0xab, 0x57, 0xc6, 0xc7, 0xd3, 0x77, 0xd0, 0xa4, 0xf2, 0xad, 0xf1,
	0x5f, 0xb3, 0x45, 0x63, 0xda, 0x12, 0xf3, 0x09, 0x92, 0x32, 0xc7, 0x48, 0xfd, 0xb7, 0xe0, 0xf1,
	0xb5, 0xac, 0xdc, 0xb8, 0x53, 0xc7, 0x65, 0xf9, 0xac, 0x95, 0xd2, 0x78, 0x03, 0x10, 0x8d, 0x63,
	0x6a, 0x0d, 0xcd, 0xf1, 0xbb, 0x5e, 0xe6, 0xfd, 0x25, 0x89, 0x1b, 0xe9, 0xeb, 0xfe, 0xdf, 0xd7,
	0xd2, 0x02, 0x23, 0x1a, 0x98, 0x07, 0x34, 0x8c, 0x1d, 0xcb, 0x65, 0x1d, 0xea, 0xd3, 0x01, 0x0b,
	0x71, 0x17, 0x66, 0x94, 0x67, 0x4a, 0x1b, 0x4b, 0xdb, 0xab, 0x72, 0x55, 0x07, 0x0d, 0xd2, 0x6f,
	0x37, 0xf7, 0x0d, 0xb3, 0x63, 0x1c, 0x1e, 0x36, 0x76, 0x8d, 0x6f, 0xe9, 0xbb, 0x8d, 0x8e, 0x61,
	0x8e, 0xe1, 0x46, 0xb7, 0xb1, 0x6b, 0x10, 0xd3, 0x38, 0x36, 0xba, 0x7d, 0xb3, 0x49, 0x8c, 0x46,
	0xdf, 0x20, 0x42, 0xce, 0xf8, 0xb2, 0x2c, 0xad, 0x97, 0x78, 0xdc, 0xc8, 0xd8, 0x73, 0x60, 0x35,
	0x64, 0xae, 0x78, 0xc5, 0x8d, 0x94, 0x01, 0xca, 0x64, 0xe9, 0xcd, 0x0f, 0xf3, 0xde, 0x9c, 0xb6,
	0x72, 0x8b, 0xc8, 0xc9, 0x29, 0x2c, 0xd6, 0x45, 0x1e, 0x85, 0xd7, 0xa0, 0xf8, 0x18, 0x96, 0xad,
	0x90, 0xd1, 0x78, 0xac, 0x49, 0x04, 0x76, 0x75, 0xfb, 0xdd, 0x3b, 0x74, 0x34, 0xc5, 0xac, 0x14,
	0x25, 0x4b, 0x56, 0x81, 0xc6, 0x5f, 0x00, 0xe2, 0xc5, 0x75, 0x18, 0x5c, 0x8d, 0x05, 0x97, 0x85,
	0xe0, 0xad, 0x3b, 0x04, 0xb7, 0xe4, 0xb4, 0x4c, 0xf2, 0xb2, 0x5d, 0x04, 0x70, 0x02, 0xf5, 0x49,
	0xd1, 0xa6, 0xe3, 0x9f, 0x07, 0xee, 0x39, 0x4f, 0xc9, 0xb3, 0x42, 0xc9, 0xaf, 0xbc, 0x9a, 0x92,
	0x76, 0x3a, 0x9d, 0xd4, 0xec, 0x1b, 0x46, 0xb8, 0xa7, 0x92, 0x91, 0x5d, 0xf0, 0xd4, 0xdc, 0xbd,
	0x3c, 0x75, 0x24, 0x66, 0x8d, 0x3d, 0x95, 0x14, 0x68, 0xfc, 0xdb, 0xf0, 0x70, 0x42, 0xae, 0x79,
	0x7a, 0x61, 0x8b, 0x47, 0x55, 0x75, 0xfb, 0xfd, 0x57, 0x92, 0xbd, 0x73, 0x61, 0x93, 0x95, 0x64,
	0x12, 0xe2, 0xe1, 0x34, 0xa9, 0x21, 0x08, 0x1d, 0xe6, 0xc7, 0xe2, 0x65, 0x76, 0x77, 0x38, 0x15,
	0x95, 0xf4, 0xc4, 0x54, 0xf2, 0x28, 0xb9, 0x06, 0xc5, 0x01, 0xd4, 0xa6, 0x16, 0x43, 0x5d, 0xf7,
	0x84, 0x5a, 0x67, 0xe2, 0xad, 0x57, 0xdd, 0xfe, 0xe8, 0xd5, 0x56, 0xa4, 0x26, 0x93, 0xd5, 0xe4,
	0x5a, 0xfc, 0xda, 0xb5, 0x9d, 0x9e, 0xf2, 0x1a, 0xab, 0xfa, 0xb3, 0xac, 0x4d, 0x4c, 0x9d, 0x5a,
	0x9b, 0x40, 0xaf, 0xdb, 0x28, 0xee, 0xc3, 0x85, 0x9f, 0x61, 0xa3, 0x0c, 0x3f, 0x9e, 0xdc, 0x28,
	0xc3, 0x8f, 0xf1, 0x39, 0x3c, 0x99, 0xd4, 0x10, 0x0d, 0x83, 0xc4, 0xb5, 0x4d, 0x3b, 0xa4, 0x17,
	0xb5, 0xa5, 0x7b, 0x85, 0x76, 0x51, 0xd3, 0xa1, 0x98, 0xdf, 0x0a, 0xe9, 0x05, 0xa9, 0x25, 0x37,
	0x8c, 0xe0, 0x08, 0xea, 0x53, 0x7a, 0x59, 0x6c, 0x9e, 0x86, 0xc1, 0xef, 0x32, 0xbf, 0xb6, 0x2c,
	0xd4, 0x7e, 0xf3, 0xd5, 0xd4, 0xb2, 0x78, 0x47, 0xcc, 0x26, 0x6b, 0xc9, 0xf5, 0x03, 0xf8, 0x07,
	0x1a, 0x3c, 0xe7, 0x25, 0xf7, 0x80, 0x99, 0xbc, 0x2c, 0x0d, 0x03, 0xd7, 0x1c, 0x05, 0xfc, 0xd1,
	0x29, 0xf3, 0xb1, 0x68, 0x99, 0x23, 0xa1, 0xfa, 0x93, 0xbb, 0x52, 0x91, 0x90, 0xd2, 0x94, 0x42,
	0x0e, 0xb8, 0x8c, 0x46, 0x26, 0x82, 0x3c, 0xb5, 0x6e, 0x19, 0xad, 0xaf, 0xc2, 0xa3, 0xeb, 0x92,
	0x65, 0xfd, 0x87, 0x1a, 0x2c, 0x15, 0x33, 0x1c, 0xde, 0x82, 0x87, 0x99, 0x77, 0xc4, 0xbb, 0x7a,
	0xfc, 0xca, 0x99, 0x25, 0x2b, 0xe9, 0x50, 0x97, 0x7a, 0x2a, 0xb3, 0x3e, 0x87, 0xaa, 0xba, 0x71,
	0xc4, 0x8d, 0x21, 0x2f, 0x1b, 0x90, 0x90, 0xb8, 0x4b, 0xdf, 0x84, 0x45, 0x59, 0x70, 0x98, 0x43,
	0xea, 0xdb, 0xea, 0xa9, 0x5b, 0x26, 0x0b, 0x12, 0xdc, 0x13, 0x58, 0xfd, 0x25, 0x2c, 0x4f, 0xe4,
	0x2a, 0xfc, 0x1e, 0x3c, 0x4c, 0xf3, 0x9f, 0xe3, 0x79, 0xcc, 0x76, 0x68, 0xcc, 0xdc, 0x2b, 0x55,
	0x14, 0x60, 0x35, 0xd4, 0x1e, 0x8f, 0xd4, 0x47, 0x50, 0xbb, 0x29, 0xdf, 0xbd, 0xb2, 0xb0, 0xfb,
	0x59, 0x6d, 0xc1, 0x52, 0x31, 0x1e, 0xd2, 0x87, 0x4b, 0xb6, 0xcb, 0xea, 0x35, 0xb6, 0x60, 0xe5,
	0xf6, 0x05, 0xff, 0x72, 0xee, 0x95, 0x77, 0x53, 0x7b, 0x34, 0xe3, 0xa8, 0xdb, 0xb0, 0x32, 0x95,
	0xfe, 0xee, 0xa7, 0x67, 0x13, 0xe6, 0x4e, 0x83, 0xf0, 0x82, 0x86, 0xf6, 0x8d, 0x6a, 0x52, 0x86,
	0xfa, 0xbf, 0x68, 0xf0, 0xe8, 0xba, 0x04, 0xf8, 0x7f, 0xae, 0x89, 0x57, 0x71, 0xa1, 0x33, 0x18,
	0xc6, 0x37, 0x37, 0x66, 0xc5, 0x30, 0x5e, 0x87, 0x52, 0x32, 0x52, 0xb7, 0xf4, 0x34, 0x53, 0x29,
	0x19, 0xd5, 0xcf, 0x60, 0xf5, 0xfa, 0x34, 0xfa, 0xf3, 0xd8, 0x86, 0x70, 0xca, 0x3f, 0x32, 0x5d,
	0xde, 0x4b, 0xd5, 0x47, 0xb0, 0x28, 0x2b, 0xf2, 0x34, 0x6b, 0xdf, 0xa4, 0x6f, 0x41, 0xb2, 0x49,
	0xd9, 0xf5, 0x1f, 0x97, 0x26, 0xf7, 0xde, 0xb8, 0xef, 0x8e, 0x4c, 0xc5, 0x6f, 0x69, 0x3a, 0x7e,
	0x27, 0xcf, 0xee, 0x83, 0xa9, 0xb3, 0xfb, 0x0c, 0x20, 0x97, 0xa6, 0x66, 0xf2, 0xe3, 0x1c, 0xc1,
	0xbf, 0x0a, 0x2b, 0xe9, 0xbd, 0x67, 0x66, 0xbe, 0x2c, 0xdf, 0xb0, 0x36, 0x94, 0xb2, 0x1e, 0x28,
	0x4e, 0xfc, 0x0e, 0xac, 0x38, 0xbe, 0xe5, 0x26, 0x36, 0x33, 0x2f, 0x18, 0x0d, 0xe9, 0x89, 0xcb,
	0x22, 0x51, 0xd9, 0xcc, 0x13, 0xa4, 0x06, 0x3e, 0x4f, 0xf1, 0xfa, 0xc7, 0xb0, 0x76, 0x43, 0xf2,
	0xc5, 0x6f, 0x00, 0xe4, 0x12, 0xb9, 0x3c, 0xd4, 0x95, 0x28, 0x1d, 0xae, 0x7f, 0x02, 0xb5, 0x9b,
	0x6e, 0x0b, 0xee, 0x82, 0xfc, 0xdd, 0x23, 0xe7, 0x42, 0x94, 0x31, 0xd4, 0x7f, 0xaa, 0xc1, 0xd3,
	0xdb, 0x32, 0x2f, 0xfe, 0x06, 0x2c, 0x8d, 0x3d, 0x62, 0x06, 0xae, 0xad, 0xf6, 0x63, 0x71, 0x8c,
	0xf6, 0x5c, 0x7b, 0x82, 0xcd, 0x67, 0x17, 0x6a, 0x47, 0x72, 0x6c, 0x5d, 0x76, 0x71, 0xaf, 0xbc,
	0xa3, 0x6f, 0xa5, 0xbd, 0xa3, 0x68, 0x60, 0xee, 0x25, 0xb6, 0x11, 0x86, 0x41, 0x88, 0x5f, 0x87,
	0xf9, 0x20, 0xb4, 0x65, 0x5b, 0x45, 0x5a, 0x30, 0x27, 0xe8, 0xb6, 0xad, 0x77, 0x72, 0xa5, 0x7e,
	0x33, 0x89, 0xe2, 0xc0, 0xdb, 0xa5, 0x1e, 0x93, 0x5f, 0x6f, 0xdf, 0x00, 0x60, 0xe7, 0xc2, 0xa4,
	0x5c, 0xdf, 0x56, 0x20, 0x5d, 0xd5, 0x77, 0xcb, 0x1a, 0x5a, 0x0b, 0xb2, 0xa1, 0xa5, 0x7f, 0x35,
	0xd1, 0x25, 0xda, 0xa3, 0xa3, 0xd8, 0xb1, 0x0e, 0xf8, 0xab, 0x15, 0xaf, 0xc1, 0x1c, 0x37, 0x7c,
	0x6c, 0xc4, 0x2c, 0x27, 0xdb, 0x36, 0xfe, 0x2e, 0x80, 0x78, 0xd7, 0x8e, 0xaf, 0x89, 0xec, 0x61,
	0x61, 0xe4, 0x04, 0x88, 0x06, 0x41, 0xfd, 0x98, 0x98, 0x7b, 0x8d, 0x6e, 0xcb, 0xdc, 0x6b, 0x1c,
	0xf4, 0xdb, 0x4d, 0xf3, 0xe0, 0x68, 0xff, 0xd0, 0x30, 0xf7, 0xdb, 0xbb, 0x7b, 0x7d, 0x52, 0x19,
	0xa5, 0x6c, 0x9b, 0xff, 0x36, 0x0b, 0x2b, 0xc6, 0x4b, 0x1a, 0xb1, 0x9c, 0x2d, 0x11, 0x5e, 0x83,
	0x87, 0x47, 0x1d, 0x73, 0xf2, 0x2b, 0x35, 0x62, 0xf8, 0x21, 0x2c, 0x1f, 0x75, 0xcc, 0xfc, 0xf7,
	0x55, 0x74, 0x8a, 0x5f, 0x87, 0xc7, 0x13, 0xa0, 0xfc, 0x0a, 0x8c, 0x06, 0x4a, 0xd0, 0xe4, 0x67,
	0x4f, 0x34, 0x54, 0x03, 0x93, 0x1f, 0x35, 0x91, 0x83, 0xab, 0x30, 0x77, 0xd4, 0x31, 0x77, 0xa8,
	0xcd, 0xd0, 0xef, 0x60, 0x04, 0x0b, 0x47, 0x1d, 0x33, 0x6b, 0xa8, 0xa3, 0x33, 0xbc, 0x0c, 0xd5,
	0xa3, 0x8e, 0x99, 0x36, 0x5e, 0x91, 0x87, 0x17, 0xa1, 0xc2, 0x01, 0xf1, 0x3d, 0x04, 0xf9, 0x78,
	0x09, 0x40, 0x92, 0x62, 0x38, 0xc0, 0x18, 0x96, 0x8e, 0x3a, 0x66, 0xae, 0x57, 0x8b, 0x46, 0x0a,
	0xcb, 0xf5, 0xe5, 0xd0, 0x97, 0x6a, 0x61, 0xf9, 0x0e, 0x31, 0x0a, 0x95, 0xb2, 0xb4, 0x6d, 0x8f,
	0x22, 0xa5, 0x4c, 0x76, 0x2f, 0x51, 0xac, 0x94, 0xa9, 0x2e, 0x22, 0x4a, 0x14, 0x7f, 0xfa, 0xb1,
	0x09, 0x9d, 0xe3, 0xc7, 0xb0, 0x32, 0x06, 0x54, 0x9b, 0x11, 0x5d, 0xe0, 0x05, 0x98, 0xe7, 0xf0,
	0x90, 0x9e, 0x31, 0x74, 0x99, 0xce, 0x52, 0x1f, 0x0a, 0xd1, 0x95, 0x12, 0xab, 0xbe, 0x43, 0xa0,
	0xef, 0xe1, 0x15, 0x58, 0xe4, 0x0c, 0xd9, 0x17, 0x3d, 0xf4, 0x7b, 0x4a, 0x82, 0x68, 0x78, 0xa2,
	0xdf, 0x57, 0x12, 0xd2, 0x4e, 0x2d, 0xfa, 0x03, 0xbc, 0x22, 0xfc, 0x96, 0x75, 0xdb, 0xd1, 0xf7,
	0x35, 0xfc, 0x18, 0x50, 0x0a, 0xa5, 0xdd, 0x67, 0xf4, 0x87, 0x9a, 0xe2, 0xcc, 0xbe, 0x40, 0xa0,
	0x1f, 0x68, 0x18, 0x0b, 0x75, 0xe3, 0x16, 0x1f, 0xfa, 0xa3, 0x14, 0x1b, 0x37, 0xf0, 0xd0, 0x1f,
	0x6b, 0x78, 0x55, 0x2c, 0xae, 0xd8, 0xa1, 0x43, 0x5f, 0x69, 0x18, 0xa9, 0xf5, 0xc8, 0x26, 0x1b,
	0xfa, 0x61, 0x3a, 0x7b, 0xdc, 0xe0, 0x42, 0x7f, 0xa2, 0xe1, 0xe7, 0x50, 0x9f, 0x08, 0x9a, 0xdc,
	0x97, 0x7a, 0xf4, 0x13, 0x0d, 0xd7, 0x64, 0xe8, 0x4c, 0x3c, 0xfd, 0xd1, 0x5f, 0xa6, 0x8a, 0x8b,
	0x5f, 0x3a, 0xd0, 0x5f, 0x69, 0x78, 0x0d, 0xf0, 0x51, 0x67, 0xb2, 0xe4, 0x43, 0x3f, 0x4d, 0x2d,
	0x4a, 0x4f, 0x39, 0xfa, 0xeb, 0x94, 0x75, 0xe2, 0x1c, 0xa3, 0xaf, 0xd3, 0x01, 0x9e, 0x23, 0x72,
	0x07, 0x0a, 0xfd, 0x4d, 0x2a, 0xa3, 0xd3, 0xf8, 0x35, 0xf3, 0x65, 0xe3, 0xd0, 0x40, 0xff, 0xa1,
	0x6d, 0x7e, 0xad, 0xc1, 0x43, 0x71, 0x74, 0x0a, 0x5d, 0x98, 0x88, 0xaf, 0xd6, 0xe8, 0x98, 0xe3,
	0xce, 0x1a, 0xfa, 0x91, 0xf0, 0xbe, 0x91, 0x6e, 0xa1, 0xea, 0xa8, 0xa1, 0x3f, 0x15, 0xda, 0x0c,
	0x1e, 0x60, 0x85, 0x36, 0x19, 0xfa, 0xb1, 0x58, 0x22, 0x97, 0x51, 0xe8, 0x7c, 0xa1, 0x3f, 0xd3,
	0xf0, 0x32, 0x80, 0xd1, 0x31, 0x55, 0x13, 0x0b, 0xfd, 0xb9, 0x30, 0xcb, 0xe8, 0x98, 0x69, 0xeb,
	0x07, 0xfd, 0x85, 0xb6, 0x19, 0x40, 0x25, 0x6b, 0x13, 0xe2, 0x55, 0x18, 0x37, 0x0a, 0xd1, 0xff,
	0xa4, 0x3f, 0x8d, 0x87, 0x98, 0xc0, 0x0f, 0xfb, 0x8d, 0xfe, 0x21, 0x7a, 0x8d, 0x1f, 0x34, 0x41,
	0x37, 0x89, 0xd1, 0x6a, 0xf7, 0x0f, 0x11, 0x37, 0xed, 0xa1, 0x40, 0xf6, 0x1b, 0x7d, 0xc3, 0xfc,
	0xb4, 0xd7, 0xee, 0x9a, 0xfb, 0xbd, 0xdd, 0x1e, 0x2a, 0xf1, 0x60, 0x13, 0x03, 0xbd, 0xa3, 0x7e,
	0x9f, 0xf4, 0xd0, 0x83, 0xcd, 0xbf, 0x2d, 0x03, 0x9a, 0xec, 0x6b, 0xe0, 0xb7, 0xe0, 0x1e, 0x9d,
	0x0d, 0xf4, 0xda, 0x5d, 0x7c, 0x47, 0x07, 0x2d, 0xce, 0xa7, 0xe1, 0x2d, 0xd8, 0xbc, 0x9b, 0xcf,
	0xdc, 0xe9, 0x91, 0xcf, 0x1b, 0xa4, 0x85, 0x4a, 0x78, 0x1b, 0xb6, 0xee, 0xc1, 0xdf, 0x23, 0x6d,
	0xa3, 0xdb, 0x6f, 0xf4, 0xdb, 0xbd, 0x2e, 0x7a, 0x80, 0xdf, 0x83, 0x77, 0xee, 0xa3, 0xa3, 0xb1,
	0xbf, 0xff, 0xb2, 0xd1, 0xfc, 0x0c, 0xcd, 0xe0, 0x4d, 0x78, 0xeb, 0x1e, 0x13, 0x8c, 0x6e, 0x1f,
	0x95, 0xf1, 0xbb, 0xf0, 0x4b, 0xf7, 0x31, 0x68, 0x67, 0xe7, 0xd0, 0xe8, 0xa3, 0x59, 0xfc, 0x36,
	0xbc, 0x79, 0x1b, 0x7b, 0xcb, 0x38, 0xec, 0x93, 0xde, 0x17, 0x68, 0x0e, 0x7f, 0x00, 0xef, 0xde,
	0x83, 0xd1, 0x6c, 0x77, 0x8f, 0x7b, 0xfb, 0xc7, 0xed, 0xee, 0x2e, 0x9a, 0xbf, 0x4b, 0x36, 0x31,
	0xf6, 0x0d, 0x1e, 0xe2, 0x95, 0xbb, 0x18, 0x79, 0x68, 0x74, 0x9b, 0x5f, 0x20, 0xc0, 0xef, 0xc0,
	0xdb, 0xb7, 0x31, 0x1e, 0xee, 0xf5, 0x8e, 0xf6, 0x5b, 0x66, 0x8b, 0x34, 0x3e, 0x47, 0xd5, 0xbb,
	0xb6, 0x7c, 0x87, 0xf4, 0x7e, 0xdd, 0xe8, 0xa2, 0x05, 0xfc, 0x6d, 0xf8, 0xe4, 0xd6, 0x10, 0xda,
	0x6b, 0x74, 0x77, 0x0d, 0xb3, 0xd9, 0xeb, 0xf6, 0x49, 0x6f, 0xdf, 0x3c, 0xe8, 0xb5, 0xbb, 0x7d,
	0xb3, 0xd1, 0xef, 0x37, 0x9a, 0x7b, 0x1d, 0xee, 0xf2, 0xc5, 0xcd, 0x18, 0xd0, 0xe4, 0xb5, 0x88,
	0x9f, 0xc1, 0x2d, 0x17, 0x23, 0x7a, 0x0d, 0x3f, 0x87, 0x27, 0xd7, 0x8e, 0x77, 0x8c, 0x56, 0xfb,
	0xa8, 0x83, 0xb4, 0x1b, 0x19, 0xb8, 0x9b, 0xbb, 0xbb, 0xa8, 0xf4, 0xb2, 0xbc, 0xa7, 0x7d, 0x5f,
	0x7b, 0xed, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x89, 0x6a, 0x55, 0x24, 0x26, 0x00, 0x00,
}
