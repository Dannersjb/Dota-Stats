// Code generated by protoc-gen-go.
// source: steamdatagram_messages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ESteamDatagramMsgID int32

const (
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Invalid                       ESteamDatagramMsgID = 0
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingRequest             ESteamDatagramMsgID = 1
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingReply               ESteamDatagramMsgID = 2
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingRequest         ESteamDatagramMsgID = 3
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingReply           ESteamDatagramMsgID = 4
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionRequest      ESteamDatagramMsgID = 5
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionEstablished  ESteamDatagramMsgID = 6
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoSession                     ESteamDatagramMsgID = 7
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Diagnostic                    ESteamDatagramMsgID = 8
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataClientToRouter            ESteamDatagramMsgID = 9
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToServer            ESteamDatagramMsgID = 10
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataServerToRouter            ESteamDatagramMsgID = 11
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToClient            ESteamDatagramMsgID = 12
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Stats                         ESteamDatagramMsgID = 13
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleRequest       ESteamDatagramMsgID = 14
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleReply         ESteamDatagramMsgID = 15
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary ESteamDatagramMsgID = 16
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayHealth                   ESteamDatagramMsgID = 17
)

var ESteamDatagramMsgID_name = map[int32]string{
	0:  "k_ESteamDatagramMsg_Invalid",
	1:  "k_ESteamDatagramMsg_RouterPingRequest",
	2:  "k_ESteamDatagramMsg_RouterPingReply",
	3:  "k_ESteamDatagramMsg_GameserverPingRequest",
	4:  "k_ESteamDatagramMsg_GameserverPingReply",
	5:  "k_ESteamDatagramMsg_GameserverSessionRequest",
	6:  "k_ESteamDatagramMsg_GameserverSessionEstablished",
	7:  "k_ESteamDatagramMsg_NoSession",
	8:  "k_ESteamDatagramMsg_Diagnostic",
	9:  "k_ESteamDatagramMsg_DataClientToRouter",
	10: "k_ESteamDatagramMsg_DataRouterToServer",
	11: "k_ESteamDatagramMsg_DataServerToRouter",
	12: "k_ESteamDatagramMsg_DataRouterToClient",
	13: "k_ESteamDatagramMsg_Stats",
	14: "k_ESteamDatagramMsg_ClientPingSampleRequest",
	15: "k_ESteamDatagramMsg_ClientPingSampleReply",
	16: "k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary",
	17: "k_ESteamDatagramMsg_RelayHealth",
}
var ESteamDatagramMsgID_value = map[string]int32{
	"k_ESteamDatagramMsg_Invalid":                       0,
	"k_ESteamDatagramMsg_RouterPingRequest":             1,
	"k_ESteamDatagramMsg_RouterPingReply":               2,
	"k_ESteamDatagramMsg_GameserverPingRequest":         3,
	"k_ESteamDatagramMsg_GameserverPingReply":           4,
	"k_ESteamDatagramMsg_GameserverSessionRequest":      5,
	"k_ESteamDatagramMsg_GameserverSessionEstablished":  6,
	"k_ESteamDatagramMsg_NoSession":                     7,
	"k_ESteamDatagramMsg_Diagnostic":                    8,
	"k_ESteamDatagramMsg_DataClientToRouter":            9,
	"k_ESteamDatagramMsg_DataRouterToServer":            10,
	"k_ESteamDatagramMsg_DataServerToRouter":            11,
	"k_ESteamDatagramMsg_DataRouterToClient":            12,
	"k_ESteamDatagramMsg_Stats":                         13,
	"k_ESteamDatagramMsg_ClientPingSampleRequest":       14,
	"k_ESteamDatagramMsg_ClientPingSampleReply":         15,
	"k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary": 16,
	"k_ESteamDatagramMsg_RelayHealth":                   17,
}

func (x ESteamDatagramMsgID) Enum() *ESteamDatagramMsgID {
	p := new(ESteamDatagramMsgID)
	*p = x
	return p
}
func (x ESteamDatagramMsgID) String() string {
	return proto.EnumName(ESteamDatagramMsgID_name, int32(x))
}
func (x *ESteamDatagramMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESteamDatagramMsgID_value, data, "ESteamDatagramMsgID")
	if err != nil {
		return err
	}
	*x = ESteamDatagramMsgID(value)
	return nil
}
func (ESteamDatagramMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{0} }

type CMsgSteamDatagramRouterPingReply struct {
	ClientTimestamp             *uint32  `protobuf:"fixed32,1,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	LatencyDatacenterIds        []uint32 `protobuf:"fixed32,2,rep,packed,name=latency_datacenter_ids,json=latencyDatacenterIds" json:"latency_datacenter_ids,omitempty"`
	LatencyPingMs               []uint32 `protobuf:"varint,3,rep,packed,name=latency_ping_ms,json=latencyPingMs" json:"latency_ping_ms,omitempty"`
	YourPublicIp                *uint32  `protobuf:"fixed32,4,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	ServerTime                  *uint32  `protobuf:"fixed32,5,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge                   *uint64  `protobuf:"fixed64,6,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown        *uint32  `protobuf:"varint,7,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	ClientCookie                *uint32  `protobuf:"fixed32,8,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	ScoringPenaltyRelayCluster  *uint32  `protobuf:"varint,9,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	ScoringPenaltyDatacenterIds []uint32 `protobuf:"fixed32,10,rep,packed,name=scoring_penalty_datacenter_ids,json=scoringPenaltyDatacenterIds" json:"scoring_penalty_datacenter_ids,omitempty"`
	ScoringPenaltyValues        []uint32 `protobuf:"varint,11,rep,packed,name=scoring_penalty_values,json=scoringPenaltyValues" json:"scoring_penalty_values,omitempty"`
	XXX_unrecognized            []byte   `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply) Reset()         { *m = CMsgSteamDatagramRouterPingReply{} }
func (m *CMsgSteamDatagramRouterPingReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterPingReply) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{0}
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyDatacenterIds() []uint32 {
	if m != nil {
		return m.LatencyDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyPingMs() []uint32 {
	if m != nil {
		return m.LatencyPingMs
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetScoringPenaltyDatacenterIds() []uint32 {
	if m != nil {
		return m.ScoringPenaltyDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetScoringPenaltyValues() []uint32 {
	if m != nil {
		return m.ScoringPenaltyValues
	}
	return nil
}

type CMsgSteamDatagramGameserverPing struct {
	ClientSession           *uint32 `protobuf:"varint,1,opt,name=client_session,json=clientSession" json:"client_session,omitempty"`
	ClientSteamId           *uint64 `protobuf:"fixed64,2,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	ClientTimestamp         *uint32 `protobuf:"fixed32,3,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	RouterTimestamp         *uint32 `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	RouterGameserverLatency *uint32 `protobuf:"varint,5,opt,name=router_gameserver_latency,json=routerGameserverLatency" json:"router_gameserver_latency,omitempty"`
	SeqNumberRouter         *uint32 `protobuf:"varint,6,opt,name=seq_number_router,json=seqNumberRouter" json:"seq_number_router,omitempty"`
	SeqNumberE2E            *uint32 `protobuf:"varint,7,opt,name=seq_number_e2e,json=seqNumberE2e" json:"seq_number_e2e,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPing) Reset()         { *m = CMsgSteamDatagramGameserverPing{} }
func (m *CMsgSteamDatagramGameserverPing) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverPing) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverPing) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{1}
}

func (m *CMsgSteamDatagramGameserverPing) GetClientSession() uint32 {
	if m != nil && m.ClientSession != nil {
		return *m.ClientSession
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberRouter() uint32 {
	if m != nil && m.SeqNumberRouter != nil {
		return *m.SeqNumberRouter
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberE2E() uint32 {
	if m != nil && m.SeqNumberE2E != nil {
		return *m.SeqNumberE2E
	}
	return 0
}

type CMsgSteamDatagramGameServerAuthTicket struct {
	TimeExpiry         *uint32                                             `protobuf:"fixed32,1,opt,name=time_expiry,json=timeExpiry" json:"time_expiry,omitempty"`
	AuthorizedSteamId  *uint64                                             `protobuf:"fixed64,2,opt,name=authorized_steam_id,json=authorizedSteamId" json:"authorized_steam_id,omitempty"`
	AuthorizedPublicIp *uint32                                             `protobuf:"fixed32,3,opt,name=authorized_public_ip,json=authorizedPublicIp" json:"authorized_public_ip,omitempty"`
	GameserverSteamId  *uint64                                             `protobuf:"fixed64,4,opt,name=gameserver_steam_id,json=gameserverSteamId" json:"gameserver_steam_id,omitempty"`
	GameserverNetId    *uint64                                             `protobuf:"fixed64,5,opt,name=gameserver_net_id,json=gameserverNetId" json:"gameserver_net_id,omitempty"`
	Signature          []byte                                              `protobuf:"bytes,6,opt,name=signature" json:"signature,omitempty"`
	AppId              *uint32                                             `protobuf:"varint,7,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ExtraFields        []*CMsgSteamDatagramGameServerAuthTicket_ExtraField `protobuf:"bytes,8,rep,name=extra_fields,json=extraFields" json:"extra_fields,omitempty"`
	XXX_unrecognized   []byte                                              `json:"-"`
}

func (m *CMsgSteamDatagramGameServerAuthTicket) Reset()         { *m = CMsgSteamDatagramGameServerAuthTicket{} }
func (m *CMsgSteamDatagramGameServerAuthTicket) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameServerAuthTicket) ProtoMessage()    {}
func (*CMsgSteamDatagramGameServerAuthTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{2}
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetTimeExpiry() uint32 {
	if m != nil && m.TimeExpiry != nil {
		return *m.TimeExpiry
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAuthorizedSteamId() uint64 {
	if m != nil && m.AuthorizedSteamId != nil {
		return *m.AuthorizedSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAuthorizedPublicIp() uint32 {
	if m != nil && m.AuthorizedPublicIp != nil {
		return *m.AuthorizedPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetGameserverSteamId() uint64 {
	if m != nil && m.GameserverSteamId != nil {
		return *m.GameserverSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetGameserverNetId() uint64 {
	if m != nil && m.GameserverNetId != nil {
		return *m.GameserverNetId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetExtraFields() []*CMsgSteamDatagramGameServerAuthTicket_ExtraField {
	if m != nil {
		return m.ExtraFields
	}
	return nil
}

type CMsgSteamDatagramGameServerAuthTicket_ExtraField struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StringValue      *string `protobuf:"bytes,2,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	Int32Value       *int32  `protobuf:"zigzag32,3,opt,name=int32_value,json=int32Value" json:"int32_value,omitempty"`
	Fixed32Value     *uint32 `protobuf:"fixed32,4,opt,name=fixed32_value,json=fixed32Value" json:"fixed32_value,omitempty"`
	Fixed64Value     *uint64 `protobuf:"fixed64,5,opt,name=fixed64_value,json=fixed64Value" json:"fixed64_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) Reset() {
	*m = CMsgSteamDatagramGameServerAuthTicket_ExtraField{}
}
func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameServerAuthTicket_ExtraField) ProtoMessage() {}
func (*CMsgSteamDatagramGameServerAuthTicket_ExtraField) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{2, 0}
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetInt32Value() int32 {
	if m != nil && m.Int32Value != nil {
		return *m.Int32Value
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetFixed32Value() uint32 {
	if m != nil && m.Fixed32Value != nil {
		return *m.Fixed32Value
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetFixed64Value() uint64 {
	if m != nil && m.Fixed64Value != nil {
		return *m.Fixed64Value
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionRequest struct {
	Ticket               *CMsgSteamDatagramGameServerAuthTicket `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	ChallengeTime        *uint32                                `protobuf:"fixed32,3,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64                                `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	ClientCookie         *uint32                                `protobuf:"fixed32,5,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	NetworkConfigVersion *uint32                                `protobuf:"varint,6,opt,name=network_config_version,json=networkConfigVersion" json:"network_config_version,omitempty"`
	XXX_unrecognized     []byte                                 `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionRequest) Reset() {
	*m = CMsgSteamDatagramGameserverSessionRequest{}
}
func (m *CMsgSteamDatagramGameserverSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverSessionRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{3}
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetTicket() *CMsgSteamDatagramGameServerAuthTicket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetNetworkConfigVersion() uint32 {
	if m != nil && m.NetworkConfigVersion != nil {
		return *m.NetworkConfigVersion
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionEstablished struct {
	ClientCookie         *uint32 `protobuf:"fixed32,1,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	GameserverSteamId    *uint64 `protobuf:"fixed64,3,opt,name=gameserver_steam_id,json=gameserverSteamId" json:"gameserver_steam_id,omitempty"`
	SecondsUntilShutdown *uint32 `protobuf:"varint,4,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	SessionId            *uint32 `protobuf:"varint,5,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) Reset() {
	*m = CMsgSteamDatagramGameserverSessionEstablished{}
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverSessionEstablished) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{4}
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetGameserverSteamId() uint64 {
	if m != nil && m.GameserverSteamId != nil {
		return *m.GameserverSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSessionId() uint32 {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return 0
}

type CMsgSteamDatagramNoSession struct {
	ClientCookie         *uint32 `protobuf:"fixed32,7,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	YourPublicIp         *uint32 `protobuf:"fixed32,2,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	ServerTime           *uint32 `protobuf:"fixed32,3,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge            *uint64 `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown *uint32 `protobuf:"varint,5,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgSteamDatagramNoSession) Reset()                    { *m = CMsgSteamDatagramNoSession{} }
func (m *CMsgSteamDatagramNoSession) String() string            { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSession) ProtoMessage()               {}
func (*CMsgSteamDatagramNoSession) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{5} }

func (m *CMsgSteamDatagramNoSession) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

type CMsgSteamDatagramDiagnostic struct {
	Severity         *uint32 `protobuf:"varint,1,opt,name=severity" json:"severity,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramDiagnostic) Reset()                    { *m = CMsgSteamDatagramDiagnostic{} }
func (m *CMsgSteamDatagramDiagnostic) String() string            { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDiagnostic) ProtoMessage()               {}
func (*CMsgSteamDatagramDiagnostic) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{6} }

func (m *CMsgSteamDatagramDiagnostic) GetSeverity() uint32 {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return 0
}

func (m *CMsgSteamDatagramDiagnostic) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CMsgSteamDatagramDataCenterState struct {
	DataCenters      []*CMsgSteamDatagramDataCenterState_DataCenter `protobuf:"bytes,1,rep,name=data_centers,json=dataCenters" json:"data_centers,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState) Reset()         { *m = CMsgSteamDatagramDataCenterState{} }
func (m *CMsgSteamDatagramDataCenterState) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7}
}

func (m *CMsgSteamDatagramDataCenterState) GetDataCenters() []*CMsgSteamDatagramDataCenterState_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

type CMsgSteamDatagramDataCenterState_Server struct {
	Address          *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	PingMs           *uint32 `protobuf:"varint,2,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_Server) Reset() {
	*m = CMsgSteamDatagramDataCenterState_Server{}
}
func (m *CMsgSteamDatagramDataCenterState_Server) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState_Server) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState_Server) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7, 0}
}

func (m *CMsgSteamDatagramDataCenterState_Server) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_Server) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

type CMsgSteamDatagramDataCenterState_DataCenter struct {
	Code             *string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	ServerSample     []*CMsgSteamDatagramDataCenterState_Server `protobuf:"bytes,2,rep,name=server_sample,json=serverSample" json:"server_sample,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) Reset() {
	*m = CMsgSteamDatagramDataCenterState_DataCenter{}
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramDataCenterState_DataCenter) ProtoMessage() {}
func (*CMsgSteamDatagramDataCenterState_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7, 1}
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetServerSample() []*CMsgSteamDatagramDataCenterState_Server {
	if m != nil {
		return m.ServerSample
	}
	return nil
}

type CMsgSteamDatagramLinkInstantaneousStats struct {
	OutPacketsPerSecX10     *uint32 `protobuf:"varint,1,opt,name=out_packets_per_sec_x10,json=outPacketsPerSecX10" json:"out_packets_per_sec_x10,omitempty"`
	OutBytesPerSec          *uint32 `protobuf:"varint,2,opt,name=out_bytes_per_sec,json=outBytesPerSec" json:"out_bytes_per_sec,omitempty"`
	InPacketsPerSecX10      *uint32 `protobuf:"varint,3,opt,name=in_packets_per_sec_x10,json=inPacketsPerSecX10" json:"in_packets_per_sec_x10,omitempty"`
	InBytesPerSec           *uint32 `protobuf:"varint,4,opt,name=in_bytes_per_sec,json=inBytesPerSec" json:"in_bytes_per_sec,omitempty"`
	PingMs                  *uint32 `protobuf:"varint,5,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	PacketsDroppedPct       *uint32 `protobuf:"varint,6,opt,name=packets_dropped_pct,json=packetsDroppedPct" json:"packets_dropped_pct,omitempty"`
	PacketsWeirdSequencePct *uint32 `protobuf:"varint,7,opt,name=packets_weird_sequence_pct,json=packetsWeirdSequencePct" json:"packets_weird_sequence_pct,omitempty"`
	PeakJitterUsec          *uint32 `protobuf:"varint,8,opt,name=peak_jitter_usec,json=peakJitterUsec" json:"peak_jitter_usec,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) Reset() {
	*m = CMsgSteamDatagramLinkInstantaneousStats{}
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkInstantaneousStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkInstantaneousStats) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{8}
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutPacketsPerSecX10() uint32 {
	if m != nil && m.OutPacketsPerSecX10 != nil {
		return *m.OutPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutBytesPerSec() uint32 {
	if m != nil && m.OutBytesPerSec != nil {
		return *m.OutBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInPacketsPerSecX10() uint32 {
	if m != nil && m.InPacketsPerSecX10 != nil {
		return *m.InPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInBytesPerSec() uint32 {
	if m != nil && m.InBytesPerSec != nil {
		return *m.InBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsDroppedPct() uint32 {
	if m != nil && m.PacketsDroppedPct != nil {
		return *m.PacketsDroppedPct
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsWeirdSequencePct() uint32 {
	if m != nil && m.PacketsWeirdSequencePct != nil {
		return *m.PacketsWeirdSequencePct
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPeakJitterUsec() uint32 {
	if m != nil && m.PeakJitterUsec != nil {
		return *m.PeakJitterUsec
	}
	return 0
}

type CMsgSteamDatagramLinkLifetimeStats struct {
	PacketsSent               *uint64 `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent" json:"packets_sent,omitempty"`
	KbSent                    *uint64 `protobuf:"varint,4,opt,name=kb_sent,json=kbSent" json:"kb_sent,omitempty"`
	PacketsRecv               *uint64 `protobuf:"varint,5,opt,name=packets_recv,json=packetsRecv" json:"packets_recv,omitempty"`
	KbRecv                    *uint64 `protobuf:"varint,6,opt,name=kb_recv,json=kbRecv" json:"kb_recv,omitempty"`
	PacketsRecvSequenced      *uint64 `protobuf:"varint,7,opt,name=packets_recv_sequenced,json=packetsRecvSequenced" json:"packets_recv_sequenced,omitempty"`
	PacketsRecvDropped        *uint64 `protobuf:"varint,8,opt,name=packets_recv_dropped,json=packetsRecvDropped" json:"packets_recv_dropped,omitempty"`
	PacketsRecvOutOfOrder     *uint64 `protobuf:"varint,9,opt,name=packets_recv_out_of_order,json=packetsRecvOutOfOrder" json:"packets_recv_out_of_order,omitempty"`
	PacketsRecvDuplicate      *uint64 `protobuf:"varint,10,opt,name=packets_recv_duplicate,json=packetsRecvDuplicate" json:"packets_recv_duplicate,omitempty"`
	PacketsRecvLurch          *uint64 `protobuf:"varint,11,opt,name=packets_recv_lurch,json=packetsRecvLurch" json:"packets_recv_lurch,omitempty"`
	QualityHistogram_100      *uint32 `protobuf:"varint,21,opt,name=quality_histogram_100,json=qualityHistogram100" json:"quality_histogram_100,omitempty"`
	QualityHistogram_99       *uint32 `protobuf:"varint,22,opt,name=quality_histogram_99,json=qualityHistogram99" json:"quality_histogram_99,omitempty"`
	QualityHistogram_97       *uint32 `protobuf:"varint,23,opt,name=quality_histogram_97,json=qualityHistogram97" json:"quality_histogram_97,omitempty"`
	QualityHistogram_95       *uint32 `protobuf:"varint,24,opt,name=quality_histogram_95,json=qualityHistogram95" json:"quality_histogram_95,omitempty"`
	QualityHistogram_90       *uint32 `protobuf:"varint,25,opt,name=quality_histogram_90,json=qualityHistogram90" json:"quality_histogram_90,omitempty"`
	QualityHistogram_75       *uint32 `protobuf:"varint,26,opt,name=quality_histogram_75,json=qualityHistogram75" json:"quality_histogram_75,omitempty"`
	QualityHistogram_50       *uint32 `protobuf:"varint,27,opt,name=quality_histogram_50,json=qualityHistogram50" json:"quality_histogram_50,omitempty"`
	QualityHistogram_1        *uint32 `protobuf:"varint,28,opt,name=quality_histogram_1,json=qualityHistogram1" json:"quality_histogram_1,omitempty"`
	QualityHistogramDead      *uint32 `protobuf:"varint,29,opt,name=quality_histogram_dead,json=qualityHistogramDead" json:"quality_histogram_dead,omitempty"`
	QualityNtile_2Nd          *uint32 `protobuf:"varint,30,opt,name=quality_ntile_2nd,json=qualityNtile2nd" json:"quality_ntile_2nd,omitempty"`
	QualityNtile_5Th          *uint32 `protobuf:"varint,31,opt,name=quality_ntile_5th,json=qualityNtile5th" json:"quality_ntile_5th,omitempty"`
	QualityNtile_25Th         *uint32 `protobuf:"varint,32,opt,name=quality_ntile_25th,json=qualityNtile25th" json:"quality_ntile_25th,omitempty"`
	QualityNtile_50Th         *uint32 `protobuf:"varint,33,opt,name=quality_ntile_50th,json=qualityNtile50th" json:"quality_ntile_50th,omitempty"`
	PingHistogram_25          *uint32 `protobuf:"varint,41,opt,name=ping_histogram_25,json=pingHistogram25" json:"ping_histogram_25,omitempty"`
	PingHistogram_50          *uint32 `protobuf:"varint,42,opt,name=ping_histogram_50,json=pingHistogram50" json:"ping_histogram_50,omitempty"`
	PingHistogram_75          *uint32 `protobuf:"varint,43,opt,name=ping_histogram_75,json=pingHistogram75" json:"ping_histogram_75,omitempty"`
	PingHistogram_100         *uint32 `protobuf:"varint,44,opt,name=ping_histogram_100,json=pingHistogram100" json:"ping_histogram_100,omitempty"`
	PingHistogram_125         *uint32 `protobuf:"varint,45,opt,name=ping_histogram_125,json=pingHistogram125" json:"ping_histogram_125,omitempty"`
	PingHistogram_150         *uint32 `protobuf:"varint,46,opt,name=ping_histogram_150,json=pingHistogram150" json:"ping_histogram_150,omitempty"`
	PingHistogram_200         *uint32 `protobuf:"varint,47,opt,name=ping_histogram_200,json=pingHistogram200" json:"ping_histogram_200,omitempty"`
	PingHistogram_300         *uint32 `protobuf:"varint,48,opt,name=ping_histogram_300,json=pingHistogram300" json:"ping_histogram_300,omitempty"`
	PingHistogramMax          *uint32 `protobuf:"varint,49,opt,name=ping_histogram_max,json=pingHistogramMax" json:"ping_histogram_max,omitempty"`
	PingNtile_5Th             *uint32 `protobuf:"varint,50,opt,name=ping_ntile_5th,json=pingNtile5th" json:"ping_ntile_5th,omitempty"`
	PingNtile_50Th            *uint32 `protobuf:"varint,51,opt,name=ping_ntile_50th,json=pingNtile50th" json:"ping_ntile_50th,omitempty"`
	PingNtile_75Th            *uint32 `protobuf:"varint,52,opt,name=ping_ntile_75th,json=pingNtile75th" json:"ping_ntile_75th,omitempty"`
	PingNtile_95Th            *uint32 `protobuf:"varint,53,opt,name=ping_ntile_95th,json=pingNtile95th" json:"ping_ntile_95th,omitempty"`
	PingNtile_98Th            *uint32 `protobuf:"varint,54,opt,name=ping_ntile_98th,json=pingNtile98th" json:"ping_ntile_98th,omitempty"`
	JitterHistogramNegligible *uint32 `protobuf:"varint,61,opt,name=jitter_histogram_negligible,json=jitterHistogramNegligible" json:"jitter_histogram_negligible,omitempty"`
	JitterHistogram_1         *uint32 `protobuf:"varint,62,opt,name=jitter_histogram_1,json=jitterHistogram1" json:"jitter_histogram_1,omitempty"`
	JitterHistogram_2         *uint32 `protobuf:"varint,63,opt,name=jitter_histogram_2,json=jitterHistogram2" json:"jitter_histogram_2,omitempty"`
	JitterHistogram_5         *uint32 `protobuf:"varint,64,opt,name=jitter_histogram_5,json=jitterHistogram5" json:"jitter_histogram_5,omitempty"`
	JitterHistogram_10        *uint32 `protobuf:"varint,65,opt,name=jitter_histogram_10,json=jitterHistogram10" json:"jitter_histogram_10,omitempty"`
	JitterHistogram_20        *uint32 `protobuf:"varint,66,opt,name=jitter_histogram_20,json=jitterHistogram20" json:"jitter_histogram_20,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *CMsgSteamDatagramLinkLifetimeStats) Reset()         { *m = CMsgSteamDatagramLinkLifetimeStats{} }
func (m *CMsgSteamDatagramLinkLifetimeStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkLifetimeStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkLifetimeStats) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{9}
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsSent() uint64 {
	if m != nil && m.PacketsSent != nil {
		return *m.PacketsSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbSent() uint64 {
	if m != nil && m.KbSent != nil {
		return *m.KbSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecv() uint64 {
	if m != nil && m.PacketsRecv != nil {
		return *m.PacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbRecv() uint64 {
	if m != nil && m.KbRecv != nil {
		return *m.KbRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvSequenced() uint64 {
	if m != nil && m.PacketsRecvSequenced != nil {
		return *m.PacketsRecvSequenced
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDropped() uint64 {
	if m != nil && m.PacketsRecvDropped != nil {
		return *m.PacketsRecvDropped
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvOutOfOrder() uint64 {
	if m != nil && m.PacketsRecvOutOfOrder != nil {
		return *m.PacketsRecvOutOfOrder
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDuplicate() uint64 {
	if m != nil && m.PacketsRecvDuplicate != nil {
		return *m.PacketsRecvDuplicate
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvLurch() uint64 {
	if m != nil && m.PacketsRecvLurch != nil {
		return *m.PacketsRecvLurch
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_100() uint32 {
	if m != nil && m.QualityHistogram_100 != nil {
		return *m.QualityHistogram_100
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_99() uint32 {
	if m != nil && m.QualityHistogram_99 != nil {
		return *m.QualityHistogram_99
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_97() uint32 {
	if m != nil && m.QualityHistogram_97 != nil {
		return *m.QualityHistogram_97
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_95() uint32 {
	if m != nil && m.QualityHistogram_95 != nil {
		return *m.QualityHistogram_95
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_90() uint32 {
	if m != nil && m.QualityHistogram_90 != nil {
		return *m.QualityHistogram_90
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_75() uint32 {
	if m != nil && m.QualityHistogram_75 != nil {
		return *m.QualityHistogram_75
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_50() uint32 {
	if m != nil && m.QualityHistogram_50 != nil {
		return *m.QualityHistogram_50
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_1() uint32 {
	if m != nil && m.QualityHistogram_1 != nil {
		return *m.QualityHistogram_1
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogramDead() uint32 {
	if m != nil && m.QualityHistogramDead != nil {
		return *m.QualityHistogramDead
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_2Nd() uint32 {
	if m != nil && m.QualityNtile_2Nd != nil {
		return *m.QualityNtile_2Nd
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_5Th() uint32 {
	if m != nil && m.QualityNtile_5Th != nil {
		return *m.QualityNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_25Th() uint32 {
	if m != nil && m.QualityNtile_25Th != nil {
		return *m.QualityNtile_25Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_50Th() uint32 {
	if m != nil && m.QualityNtile_50Th != nil {
		return *m.QualityNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_25() uint32 {
	if m != nil && m.PingHistogram_25 != nil {
		return *m.PingHistogram_25
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_50() uint32 {
	if m != nil && m.PingHistogram_50 != nil {
		return *m.PingHistogram_50
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_75() uint32 {
	if m != nil && m.PingHistogram_75 != nil {
		return *m.PingHistogram_75
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_100() uint32 {
	if m != nil && m.PingHistogram_100 != nil {
		return *m.PingHistogram_100
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_125() uint32 {
	if m != nil && m.PingHistogram_125 != nil {
		return *m.PingHistogram_125
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_150() uint32 {
	if m != nil && m.PingHistogram_150 != nil {
		return *m.PingHistogram_150
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_200() uint32 {
	if m != nil && m.PingHistogram_200 != nil {
		return *m.PingHistogram_200
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_300() uint32 {
	if m != nil && m.PingHistogram_300 != nil {
		return *m.PingHistogram_300
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogramMax() uint32 {
	if m != nil && m.PingHistogramMax != nil {
		return *m.PingHistogramMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_5Th() uint32 {
	if m != nil && m.PingNtile_5Th != nil {
		return *m.PingNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_50Th() uint32 {
	if m != nil && m.PingNtile_50Th != nil {
		return *m.PingNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_75Th() uint32 {
	if m != nil && m.PingNtile_75Th != nil {
		return *m.PingNtile_75Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_95Th() uint32 {
	if m != nil && m.PingNtile_95Th != nil {
		return *m.PingNtile_95Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_98Th() uint32 {
	if m != nil && m.PingNtile_98Th != nil {
		return *m.PingNtile_98Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogramNegligible() uint32 {
	if m != nil && m.JitterHistogramNegligible != nil {
		return *m.JitterHistogramNegligible
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_1() uint32 {
	if m != nil && m.JitterHistogram_1 != nil {
		return *m.JitterHistogram_1
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_2() uint32 {
	if m != nil && m.JitterHistogram_2 != nil {
		return *m.JitterHistogram_2
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_5() uint32 {
	if m != nil && m.JitterHistogram_5 != nil {
		return *m.JitterHistogram_5
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_10() uint32 {
	if m != nil && m.JitterHistogram_10 != nil {
		return *m.JitterHistogram_10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_20() uint32 {
	if m != nil && m.JitterHistogram_20 != nil {
		return *m.JitterHistogram_20
	}
	return 0
}

type CMsgSteamDatagramConnectionQuality struct {
	Instantaneous    *CMsgSteamDatagramLinkInstantaneousStats `protobuf:"bytes,1,opt,name=instantaneous" json:"instantaneous,omitempty"`
	Lifetime         *CMsgSteamDatagramLinkLifetimeStats      `protobuf:"bytes,2,opt,name=lifetime" json:"lifetime,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgSteamDatagramConnectionQuality) Reset()         { *m = CMsgSteamDatagramConnectionQuality{} }
func (m *CMsgSteamDatagramConnectionQuality) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectionQuality) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectionQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{10}
}

func (m *CMsgSteamDatagramConnectionQuality) GetInstantaneous() *CMsgSteamDatagramLinkInstantaneousStats {
	if m != nil {
		return m.Instantaneous
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionQuality) GetLifetime() *CMsgSteamDatagramLinkLifetimeStats {
	if m != nil {
		return m.Lifetime
	}
	return nil
}

type CMsgSteamDatagramConnectionStatsClientToRouter struct {
	C2R              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=c2r" json:"c2r,omitempty"`
	C2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	ClientTimestamp  *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	ClientCookie     *uint32                             `protobuf:"fixed32,8,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	SeqNumC2R        *uint32                             `protobuf:"varint,9,opt,name=seq_num_c2r,json=seqNumC2r" json:"seq_num_c2r,omitempty"`
	SeqNumC2S        *uint32                             `protobuf:"varint,10,opt,name=seq_num_c2s,json=seqNumC2s" json:"seq_num_c2s,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{11}
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToClient struct {
	R2C                        *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2c" json:"r2c,omitempty"`
	S2C                        *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	ClientTimestampFromRouter  *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp_from_router,json=clientTimestampFromRouter" json:"client_timestamp_from_router,omitempty"`
	ClientTimestampFromServer  *uint32                             `protobuf:"fixed32,4,opt,name=client_timestamp_from_server,json=clientTimestampFromServer" json:"client_timestamp_from_server,omitempty"`
	RouterGameserverLatency    *uint32                             `protobuf:"varint,5,opt,name=router_gameserver_latency,json=routerGameserverLatency" json:"router_gameserver_latency,omitempty"`
	SecondsUntilShutdown       *uint32                             `protobuf:"varint,6,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	MigrateRequestIp           *uint32                             `protobuf:"fixed32,10,opt,name=migrate_request_ip,json=migrateRequestIp" json:"migrate_request_ip,omitempty"`
	MigrateRequestPort         *uint32                             `protobuf:"varint,11,opt,name=migrate_request_port,json=migrateRequestPort" json:"migrate_request_port,omitempty"`
	ScoringPenaltyRelayCluster *uint32                             `protobuf:"varint,12,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	ClientCookie               *uint32                             `protobuf:"fixed32,7,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	SeqNumR2C                  *uint32                             `protobuf:"varint,8,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	SeqNumS2C                  *uint32                             `protobuf:"varint,9,opt,name=seq_num_s2c,json=seqNumS2c" json:"seq_num_s2c,omitempty"`
	XXX_unrecognized           []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{12}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetR2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientTimestampFromRouter() uint32 {
	if m != nil && m.ClientTimestampFromRouter != nil {
		return *m.ClientTimestampFromRouter
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientTimestampFromServer() uint32 {
	if m != nil && m.ClientTimestampFromServer != nil {
		return *m.ClientTimestampFromServer
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestIp() uint32 {
	if m != nil && m.MigrateRequestIp != nil {
		return *m.MigrateRequestIp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestPort() uint32 {
	if m != nil && m.MigrateRequestPort != nil {
		return *m.MigrateRequestPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToServer struct {
	R2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2s" json:"r2s,omitempty"`
	C2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	ClientTimestamp  *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	RouterTimestamp  *uint32                             `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	SeqNumR2S        *uint32                             `protobuf:"varint,5,opt,name=seq_num_r2s,json=seqNumR2s" json:"seq_num_r2s,omitempty"`
	SeqNumC2S        *uint32                             `protobuf:"varint,6,opt,name=seq_num_c2s,json=seqNumC2s" json:"seq_num_c2s,omitempty"`
	ClientSteamId    *uint64                             `protobuf:"fixed64,7,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	ClientSessionId  *uint32                             `protobuf:"varint,8,opt,name=client_session_id,json=clientSessionId" json:"client_session_id,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToServer{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{13}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetR2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumR2S() uint32 {
	if m != nil && m.SeqNumR2S != nil {
		return *m.SeqNumR2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientSessionId() uint32 {
	if m != nil && m.ClientSessionId != nil {
		return *m.ClientSessionId
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsServerToRouter struct {
	S2R              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=s2r" json:"s2r,omitempty"`
	S2C              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	SeqNumS2R        *uint32                             `protobuf:"varint,3,opt,name=seq_num_s2r,json=seqNumS2r" json:"seq_num_s2r,omitempty"`
	SeqNumS2C        *uint32                             `protobuf:"varint,4,opt,name=seq_num_s2c,json=seqNumS2c" json:"seq_num_s2c,omitempty"`
	ClientSteamId    *uint64                             `protobuf:"fixed64,5,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	ClientSessionId  *uint32                             `protobuf:"varint,6,opt,name=client_session_id,json=clientSessionId" json:"client_session_id,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsServerToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{14}
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2R() uint32 {
	if m != nil && m.SeqNumS2R != nil {
		return *m.SeqNumS2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientSessionId() uint32 {
	if m != nil && m.ClientSessionId != nil {
		return *m.ClientSessionId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleRequest struct {
	ClientCookie     *uint32 `protobuf:"fixed32,1,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleRequest) Reset() {
	*m = CMsgSteamDatagramClientPingSampleRequest{}
}
func (m *CMsgSteamDatagramClientPingSampleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{15}
}

func (m *CMsgSteamDatagramClientPingSampleRequest) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply struct {
	ClientCookie     *uint32                                                  `protobuf:"fixed32,1,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	RoutingClusters  []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster `protobuf:"bytes,2,rep,name=routing_clusters,json=routingClusters" json:"routing_clusters,omitempty"`
	XXX_unrecognized []byte                                                   `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply{}
}
func (m *CMsgSteamDatagramClientPingSampleReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleReply) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{16}
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetRoutingClusters() []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster {
	if m != nil {
		return m.RoutingClusters
	}
	return nil
}

type CMsgSteamDatagramClientPingSampleReply_RoutingCluster struct {
	Id               *uint32 `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	FrontPingMs      *uint32 `protobuf:"varint,2,opt,name=front_ping_ms,json=frontPingMs" json:"front_ping_ms,omitempty"`
	E2EPingMs        *uint32 `protobuf:"varint,3,opt,name=e2e_ping_ms,json=e2ePingMs" json:"e2e_ping_ms,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_RoutingCluster{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{16, 0}
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetFrontPingMs() uint32 {
	if m != nil && m.FrontPingMs != nil {
		return *m.FrontPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetE2EPingMs() uint32 {
	if m != nil && m.E2EPingMs != nil {
		return *m.E2EPingMs
	}
	return 0
}

type CMsgSteamDatagramClientSwitchedPrimary struct {
	ClientCookie          *uint32                                               `protobuf:"fixed32,1,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	FromIp                *uint32                                               `protobuf:"fixed32,2,opt,name=from_ip,json=fromIp" json:"from_ip,omitempty"`
	FromPort              *uint32                                               `protobuf:"varint,3,opt,name=from_port,json=fromPort" json:"from_port,omitempty"`
	FromRouterCluster     *uint32                                               `protobuf:"fixed32,4,opt,name=from_router_cluster,json=fromRouterCluster" json:"from_router_cluster,omitempty"`
	FromActiveTime        *uint32                                               `protobuf:"varint,5,opt,name=from_active_time,json=fromActiveTime" json:"from_active_time,omitempty"`
	FromActivePacketsRecv *uint32                                               `protobuf:"varint,6,opt,name=from_active_packets_recv,json=fromActivePacketsRecv" json:"from_active_packets_recv,omitempty"`
	FromDroppedReason     *string                                               `protobuf:"bytes,7,opt,name=from_dropped_reason,json=fromDroppedReason" json:"from_dropped_reason,omitempty"`
	GapMs                 *uint32                                               `protobuf:"varint,8,opt,name=gap_ms,json=gapMs" json:"gap_ms,omitempty"`
	FromQualityNow        *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,9,opt,name=from_quality_now,json=fromQualityNow" json:"from_quality_now,omitempty"`
	ToQualityNow          *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,10,opt,name=to_quality_now,json=toQualityNow" json:"to_quality_now,omitempty"`
	FromQualityThen       *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,11,opt,name=from_quality_then,json=fromQualityThen" json:"from_quality_then,omitempty"`
	ToQualityThen         *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,12,opt,name=to_quality_then,json=toQualityThen" json:"to_quality_then,omitempty"`
	XXX_unrecognized      []byte                                                `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientSwitchedPrimary) ProtoMessage()    {}
func (*CMsgSteamDatagramClientSwitchedPrimary) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{17}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromIp() uint32 {
	if m != nil && m.FromIp != nil {
		return *m.FromIp
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromPort() uint32 {
	if m != nil && m.FromPort != nil {
		return *m.FromPort
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromRouterCluster() uint32 {
	if m != nil && m.FromRouterCluster != nil {
		return *m.FromRouterCluster
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActiveTime() uint32 {
	if m != nil && m.FromActiveTime != nil {
		return *m.FromActiveTime
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActivePacketsRecv() uint32 {
	if m != nil && m.FromActivePacketsRecv != nil {
		return *m.FromActivePacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromDroppedReason() string {
	if m != nil && m.FromDroppedReason != nil {
		return *m.FromDroppedReason
	}
	return ""
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetGapMs() uint32 {
	if m != nil && m.GapMs != nil {
		return *m.GapMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityThen
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityThen
	}
	return nil
}

type CMsgSteamDatagramClientSwitchedPrimary_RouterQuality struct {
	Score            *uint32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	FrontPing        *uint32 `protobuf:"varint,2,opt,name=front_ping,json=frontPing" json:"front_ping,omitempty"`
	BackPing         *uint32 `protobuf:"varint,3,opt,name=back_ping,json=backPing" json:"back_ping,omitempty"`
	SecondsUntilDown *uint32 `protobuf:"varint,4,opt,name=seconds_until_down,json=secondsUntilDown" json:"seconds_until_down,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary_RouterQuality{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) ProtoMessage() {}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{17, 0}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetFrontPing() uint32 {
	if m != nil && m.FrontPing != nil {
		return *m.FrontPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetBackPing() uint32 {
	if m != nil && m.BackPing != nil {
		return *m.BackPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetSecondsUntilDown() uint32 {
	if m != nil && m.SecondsUntilDown != nil {
		return *m.SecondsUntilDown
	}
	return 0
}

type CMsgSteamDatagramRouterHealth struct {
	CpuLoad              *float32                                    `protobuf:"fixed32,1,opt,name=cpu_load,json=cpuLoad" json:"cpu_load,omitempty"`
	ActiveSessions       *uint32                                     `protobuf:"varint,2,opt,name=active_sessions,json=activeSessions" json:"active_sessions,omitempty"`
	DataPktsSec          *uint32                                     `protobuf:"varint,3,opt,name=data_pkts_sec,json=dataPktsSec" json:"data_pkts_sec,omitempty"`
	OtherPktsSec         *uint32                                     `protobuf:"varint,4,opt,name=other_pkts_sec,json=otherPktsSec" json:"other_pkts_sec,omitempty"`
	SecondsUntilShutdown *uint32                                     `protobuf:"varint,5,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	CpuCostPerUser       *float32                                    `protobuf:"fixed32,8,opt,name=cpu_cost_per_user,json=cpuCostPerUser" json:"cpu_cost_per_user,omitempty"`
	CpuCostPerPacket     *float32                                    `protobuf:"fixed32,9,opt,name=cpu_cost_per_packet,json=cpuCostPerPacket" json:"cpu_cost_per_packet,omitempty"`
	DataCenters          []*CMsgSteamDatagramRouterHealth_DataCenter `protobuf:"bytes,6,rep,name=data_centers,json=dataCenters" json:"data_centers,omitempty"`
	Magic                *uint64                                     `protobuf:"fixed64,7,opt,name=magic" json:"magic,omitempty"`
	XXX_unrecognized     []byte                                      `json:"-"`
}

func (m *CMsgSteamDatagramRouterHealth) Reset()                    { *m = CMsgSteamDatagramRouterHealth{} }
func (m *CMsgSteamDatagramRouterHealth) String() string            { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterHealth) ProtoMessage()               {}
func (*CMsgSteamDatagramRouterHealth) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{18} }

func (m *CMsgSteamDatagramRouterHealth) GetCpuLoad() float32 {
	if m != nil && m.CpuLoad != nil {
		return *m.CpuLoad
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetActiveSessions() uint32 {
	if m != nil && m.ActiveSessions != nil {
		return *m.ActiveSessions
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetDataPktsSec() uint32 {
	if m != nil && m.DataPktsSec != nil {
		return *m.DataPktsSec
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetOtherPktsSec() uint32 {
	if m != nil && m.OtherPktsSec != nil {
		return *m.OtherPktsSec
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetCpuCostPerUser() float32 {
	if m != nil && m.CpuCostPerUser != nil {
		return *m.CpuCostPerUser
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetCpuCostPerPacket() float32 {
	if m != nil && m.CpuCostPerPacket != nil {
		return *m.CpuCostPerPacket
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetDataCenters() []*CMsgSteamDatagramRouterHealth_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

func (m *CMsgSteamDatagramRouterHealth) GetMagic() uint64 {
	if m != nil && m.Magic != nil {
		return *m.Magic
	}
	return 0
}

type CMsgSteamDatagramRouterHealth_DataCenter struct {
	DatacenterId     *uint32 `protobuf:"fixed32,1,opt,name=datacenter_id,json=datacenterId" json:"datacenter_id,omitempty"`
	State            *uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramRouterHealth_DataCenter) Reset() {
	*m = CMsgSteamDatagramRouterHealth_DataCenter{}
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterHealth_DataCenter) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterHealth_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{18, 0}
}

func (m *CMsgSteamDatagramRouterHealth_DataCenter) GetDatacenterId() uint32 {
	if m != nil && m.DatacenterId != nil {
		return *m.DatacenterId
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth_DataCenter) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply)(nil), "dota.CMsgSteamDatagramRouterPingReply")
	proto.RegisterType((*CMsgSteamDatagramGameserverPing)(nil), "dota.CMsgSteamDatagramGameserverPing")
	proto.RegisterType((*CMsgSteamDatagramGameServerAuthTicket)(nil), "dota.CMsgSteamDatagramGameServerAuthTicket")
	proto.RegisterType((*CMsgSteamDatagramGameServerAuthTicket_ExtraField)(nil), "dota.CMsgSteamDatagramGameServerAuthTicket.ExtraField")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionRequest)(nil), "dota.CMsgSteamDatagramGameserverSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionEstablished)(nil), "dota.CMsgSteamDatagramGameserverSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramNoSession)(nil), "dota.CMsgSteamDatagramNoSession")
	proto.RegisterType((*CMsgSteamDatagramDiagnostic)(nil), "dota.CMsgSteamDatagramDiagnostic")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState)(nil), "dota.CMsgSteamDatagramDataCenterState")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_Server)(nil), "dota.CMsgSteamDatagramDataCenterState.Server")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_DataCenter)(nil), "dota.CMsgSteamDatagramDataCenterState.DataCenter")
	proto.RegisterType((*CMsgSteamDatagramLinkInstantaneousStats)(nil), "dota.CMsgSteamDatagramLinkInstantaneousStats")
	proto.RegisterType((*CMsgSteamDatagramLinkLifetimeStats)(nil), "dota.CMsgSteamDatagramLinkLifetimeStats")
	proto.RegisterType((*CMsgSteamDatagramConnectionQuality)(nil), "dota.CMsgSteamDatagramConnectionQuality")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsClientToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToClient)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToServer)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToServer")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsServerToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsServerToRouter")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleRequest)(nil), "dota.CMsgSteamDatagramClientPingSampleRequest")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply)(nil), "dota.CMsgSteamDatagramClientPingSampleReply")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_RoutingCluster)(nil), "dota.CMsgSteamDatagramClientPingSampleReply.RoutingCluster")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary.RouterQuality")
	proto.RegisterType((*CMsgSteamDatagramRouterHealth)(nil), "dota.CMsgSteamDatagramRouterHealth")
	proto.RegisterType((*CMsgSteamDatagramRouterHealth_DataCenter)(nil), "dota.CMsgSteamDatagramRouterHealth.DataCenter")
	proto.RegisterEnum("dota.ESteamDatagramMsgID", ESteamDatagramMsgID_name, ESteamDatagramMsgID_value)
}

func init() { proto.RegisterFile("steamdatagram_messages.proto", fileDescriptor35) }

var fileDescriptor35 = []byte{
	// 2938 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0x4f, 0x73, 0xdb, 0xc8,
	0xb1, 0x5f, 0xfe, 0x11, 0x25, 0x35, 0x45, 0x09, 0x1a, 0xcb, 0x32, 0x24, 0x5b, 0xb6, 0x4c, 0xbf,
	0xb5, 0x25, 0xd9, 0xe6, 0x42, 0xb0, 0xb8, 0xb2, 0x77, 0xeb, 0xed, 0x3e, 0x5b, 0xf2, 0xee, 0xea,
	0x95, 0x2d, 0x6b, 0x21, 0xef, 0xbe, 0x97, 0x13, 0x02, 0x01, 0x23, 0x12, 0x11, 0x09, 0xc0, 0x98,
	0xa1, 0xfe, 0xe4, 0x94, 0xaa, 0x7c, 0x80, 0xa4, 0x72, 0xc9, 0x21, 0x97, 0x1c, 0xf6, 0x96, 0xaa,
	0x9c, 0x93, 0xaa, 0x54, 0xe5, 0x98, 0x2f, 0x90, 0x4b, 0xaa, 0xf2, 0x1d, 0xf2, 0x15, 0x52, 0xf3,
	0x07, 0x20, 0x40, 0x0e, 0x25, 0x7a, 0x5d, 0x95, 0x93, 0x88, 0xee, 0x5f, 0xcf, 0xf4, 0xfc, 0xd0,
	0xdd, 0x33, 0xd3, 0x10, 0xdc, 0x22, 0x14, 0x3b, 0x5d, 0xcf, 0xa1, 0x4e, 0x2b, 0x76, 0xba, 0x76,
	0x17, 0x13, 0xe2, 0xb4, 0x30, 0x69, 0x44, 0x71, 0x48, 0x43, 0x54, 0xf6, 0x42, 0xea, 0xd4, 0xff,
	0x5c, 0x86, 0xd5, 0x9d, 0xd7, 0xa4, 0x75, 0xc8, 0xa0, 0xbb, 0x12, 0x6a, 0x85, 0x3d, 0x8a, 0xe3,
	0x03, 0x3f, 0x68, 0x59, 0x38, 0xea, 0x5c, 0xa0, 0x75, 0xd0, 0xdc, 0x8e, 0x8f, 0x03, 0x6a, 0x53,
	0xbf, 0x8b, 0x09, 0x75, 0xba, 0x91, 0x5e, 0x58, 0x2d, 0xac, 0x4d, 0x5a, 0x73, 0x42, 0xfe, 0x36,
	0x11, 0xa3, 0xa7, 0xb0, 0xd8, 0x71, 0x28, 0x0e, 0xdc, 0x0b, 0x9b, 0x4d, 0xec, 0xe2, 0x80, 0xe2,
	0xd8, 0xf6, 0x3d, 0xa2, 0x17, 0x57, 0x4b, 0x6b, 0x93, 0x2f, 0x8a, 0x5a, 0xc1, 0x5a, 0x90, 0x88,
	0xdd, 0x14, 0xb0, 0xe7, 0x11, 0xb4, 0x01, 0x73, 0x89, 0x65, 0xe4, 0x07, 0x2d, 0xbb, 0x4b, 0xf4,
	0xd2, 0x6a, 0x69, 0xad, 0xc6, 0x4d, 0x6a, 0x52, 0xc5, 0x7c, 0x7a, 0x4d, 0xd0, 0x7f, 0xc1, 0xec,
	0x45, 0xd8, 0x8b, 0xed, 0xa8, 0x77, 0xd4, 0xf1, 0x5d, 0xdb, 0x8f, 0xf4, 0x32, 0x77, 0x67, 0x86,
	0x49, 0x0f, 0xb8, 0x70, 0x2f, 0x42, 0x77, 0xa0, 0x4a, 0x70, 0x7c, 0x8a, 0x63, 0xee, 0xb6, 0x3e,
	0xc1, 0x21, 0x20, 0x44, 0xcc, 0x63, 0x74, 0x0b, 0xa6, 0xdd, 0xb6, 0xd3, 0xe9, 0xe0, 0xa0, 0x85,
	0xf5, 0xca, 0x6a, 0x61, 0xad, 0x62, 0xf5, 0x05, 0x68, 0x0b, 0x16, 0x09, 0x76, 0xc3, 0xc0, 0x23,
	0x76, 0x2f, 0xa0, 0x7e, 0xc7, 0x26, 0xed, 0x1e, 0xf5, 0xc2, 0xb3, 0x40, 0x9f, 0x5c, 0x2d, 0xac,
	0xd5, 0xac, 0x05, 0xa9, 0xfd, 0x8e, 0x29, 0x0f, 0xa5, 0x0e, 0xdd, 0x83, 0x9a, 0xe4, 0xca, 0x0d,
	0xc3, 0x13, 0x1f, 0xeb, 0x53, 0xc2, 0x33, 0x21, 0xdc, 0xe1, 0x32, 0xf4, 0x1c, 0x56, 0x88, 0x1b,
	0xc6, 0x6c, 0x99, 0x11, 0x0e, 0x9c, 0x0e, 0xbd, 0xb0, 0x63, 0xdc, 0x71, 0x2e, 0x6c, 0xb7, 0xd3,
	0x23, 0x14, 0xc7, 0xfa, 0x34, 0x9f, 0x61, 0x59, 0x82, 0x0e, 0x04, 0xc6, 0x62, 0x90, 0x1d, 0x81,
	0x40, 0x5f, 0xc3, 0xed, 0xc1, 0x21, 0x06, 0x08, 0x87, 0x94, 0xf0, 0x9b, 0xf9, 0x71, 0xf2, 0xbc,
	0x3f, 0x85, 0xc5, 0xc1, 0x81, 0x4e, 0x9d, 0x4e, 0x0f, 0x13, 0xbd, 0x9a, 0xd2, 0xbf, 0x90, 0x1f,
	0xe0, 0x7b, 0xae, 0xaf, 0xff, 0xbd, 0x08, 0x77, 0x86, 0x62, 0xe7, 0x6b, 0xa7, 0x8b, 0x05, 0xc5,
	0xec, 0x5d, 0xa1, 0x8f, 0x61, 0x56, 0xd2, 0x41, 0x30, 0x21, 0x7e, 0x18, 0xf0, 0xc0, 0xa9, 0x59,
	0x92, 0xa4, 0x43, 0x21, 0x44, 0xf7, 0x61, 0x2e, 0x81, 0xb1, 0xc1, 0x6c, 0xdf, 0xd3, 0x8b, 0xfc,
	0x7d, 0x24, 0x38, 0x26, 0xdd, 0xf3, 0x94, 0x91, 0x58, 0x52, 0x47, 0xe2, 0x3a, 0x68, 0x31, 0x8f,
	0xe3, 0x0c, 0x54, 0x44, 0xc9, 0x9c, 0x90, 0xf7, 0xa1, 0x9f, 0xc1, 0x92, 0x84, 0xb6, 0x52, 0xef,
	0x6d, 0x19, 0x71, 0x3c, 0x6c, 0x6a, 0xd6, 0x0d, 0x01, 0xe8, 0xaf, 0xee, 0x95, 0x50, 0xa3, 0x0d,
	0x98, 0x27, 0xf8, 0x9d, 0x1d, 0xf4, 0xba, 0x47, 0x38, 0xb6, 0x05, 0x8a, 0xc7, 0x52, 0xcd, 0x9a,
	0x23, 0xf8, 0xdd, 0x3e, 0x97, 0x8b, 0x84, 0x62, 0x61, 0x9b, 0xc1, 0x62, 0x13, 0xcb, 0x48, 0x9a,
	0x49, 0x81, 0x2f, 0x4d, 0x5c, 0xff, 0x5b, 0x19, 0x3e, 0x56, 0xd2, 0x7a, 0xc8, 0x27, 0x7e, 0xde,
	0xa3, 0xed, 0xb7, 0xbe, 0x7b, 0x82, 0x29, 0x0b, 0x70, 0xb6, 0x36, 0x1b, 0x9f, 0x47, 0x7e, 0x7c,
	0x21, 0x53, 0x12, 0x98, 0xe8, 0x25, 0x97, 0xa0, 0x06, 0x5c, 0x73, 0x7a, 0xb4, 0x1d, 0xc6, 0xfe,
	0xcf, 0xb1, 0x37, 0x48, 0xed, 0x7c, 0x5f, 0x95, 0xd0, 0x6b, 0xc0, 0x42, 0x06, 0xdf, 0xcf, 0x2e,
	0x41, 0x31, 0xea, 0xeb, 0xd2, 0x1c, 0x6b, 0xc0, 0xb5, 0x0c, 0x67, 0xe9, 0x0c, 0x65, 0x31, 0x43,
	0x5f, 0x95, 0xcc, 0xb0, 0x01, 0x19, 0xa1, 0x1d, 0x60, 0xca, 0xd0, 0x13, 0x1c, 0x3d, 0xd7, 0x57,
	0xec, 0x63, 0xba, 0xe7, 0xb1, 0xf4, 0x24, 0x7e, 0x2b, 0x70, 0x68, 0x2f, 0x16, 0xe9, 0x39, 0x63,
	0xf5, 0x05, 0xe8, 0x3a, 0x54, 0x9c, 0x28, 0x62, 0xe6, 0x82, 0xc4, 0x09, 0x27, 0x8a, 0xf6, 0x3c,
	0xf4, 0x13, 0x98, 0xc1, 0xe7, 0x34, 0x76, 0xec, 0x63, 0x1f, 0x77, 0x3c, 0xa2, 0x4f, 0xad, 0x96,
	0xd6, 0xaa, 0xe6, 0xa7, 0x0d, 0x56, 0xed, 0x1a, 0x63, 0xd1, 0xda, 0x78, 0xc9, 0xec, 0xbf, 0x62,
	0xe6, 0x56, 0x15, 0xa7, 0xbf, 0xc9, 0xf2, 0x1f, 0x0b, 0x00, 0x7d, 0x1d, 0x42, 0x50, 0x0e, 0x9c,
	0x2e, 0xe6, 0xb4, 0x4f, 0x5b, 0xfc, 0x37, 0xba, 0x0b, 0x33, 0x84, 0xf2, 0x5c, 0xe2, 0x39, 0xc4,
	0x99, 0x9e, 0xb6, 0xaa, 0x42, 0xc6, 0xd3, 0x86, 0xbd, 0x34, 0x3f, 0xa0, 0x4f, 0x4c, 0x89, 0x60,
	0xd4, 0xce, 0x5b, 0xc0, 0x45, 0x02, 0x70, 0x0f, 0x6a, 0xc7, 0xfe, 0x39, 0xf6, 0x52, 0x88, 0xac,
	0x6d, 0x52, 0x98, 0x07, 0x7d, 0xba, 0x25, 0x41, 0x82, 0xc3, 0x19, 0x29, 0xe4, 0xa0, 0xfa, 0xaf,
	0x8b, 0xb0, 0x7e, 0x49, 0x82, 0xca, 0xe4, 0xb3, 0xf0, 0xbb, 0x1e, 0x26, 0x14, 0xed, 0x40, 0x85,
	0x72, 0x02, 0xf8, 0x8a, 0xaa, 0xe6, 0xc3, 0xf7, 0xe0, 0xcc, 0x92, 0xa6, 0x3c, 0xdf, 0x93, 0x0a,
	0x2a, 0xca, 0xae, 0x88, 0x9d, 0x5a, 0x2a, 0x1d, 0xae, 0xbc, 0xe5, 0xc1, 0xca, 0x3b, 0x54, 0x43,
	0x27, 0x14, 0x35, 0x74, 0x0b, 0x16, 0x03, 0x4c, 0xcf, 0xc2, 0xf8, 0xc4, 0x76, 0xc3, 0xe0, 0xd8,
	0x6f, 0xd9, 0xa7, 0x38, 0xe6, 0x15, 0x46, 0x64, 0xdf, 0x82, 0xd4, 0xee, 0x70, 0xe5, 0xf7, 0x42,
	0x57, 0xff, 0x47, 0x01, 0x1e, 0x5f, 0x4d, 0xc9, 0x4b, 0x42, 0x9d, 0xa3, 0x8e, 0x4f, 0xda, 0xd8,
	0x1b, 0x76, 0xa6, 0xa0, 0x70, 0x66, 0x44, 0x1a, 0x94, 0x46, 0xa5, 0xc1, 0xe8, 0xbd, 0xa5, 0x7c,
	0xc9, 0xde, 0xb2, 0x02, 0x20, 0xab, 0x68, 0x92, 0x35, 0x35, 0x6b, 0x5a, 0x4a, 0xf6, 0xbc, 0xfa,
	0x3f, 0x0b, 0xb0, 0x3c, 0xb4, 0xb6, 0xfd, 0x30, 0xa9, 0xb1, 0x43, 0x0b, 0x99, 0x54, 0x2c, 0x64,
	0x78, 0x67, 0x2d, 0x5e, 0xbd, 0xb3, 0x96, 0x2e, 0xdf, 0x59, 0xcb, 0xe3, 0xef, 0xac, 0x13, 0xa3,
	0x57, 0x5f, 0x7f, 0x0d, 0x37, 0x87, 0x56, 0xb7, 0xeb, 0x3b, 0xad, 0x20, 0x24, 0xd4, 0x77, 0xd1,
	0x32, 0x4c, 0x11, 0x7c, 0x8a, 0x63, 0x9f, 0x5e, 0xc8, 0x3d, 0x26, 0x7d, 0x66, 0xa9, 0x4a, 0xf1,
	0x39, 0x95, 0xe9, 0xc8, 0x7f, 0xd7, 0xff, 0x50, 0x54, 0x9c, 0x7c, 0xd8, 0xdf, 0x1d, 0xbe, 0x35,
	0x1e, 0x52, 0x87, 0x62, 0xf4, 0x16, 0x66, 0xd8, 0xae, 0x6a, 0x8b, 0xed, 0x92, 0xe8, 0x05, 0x5e,
	0x4d, 0x36, 0x47, 0x64, 0xc6, 0x80, 0x75, 0xa3, 0xff, 0x6c, 0x55, 0xbd, 0xf4, 0x37, 0x59, 0xfe,
	0x1c, 0x2a, 0x22, 0x81, 0x90, 0x0e, 0x93, 0x8e, 0xe7, 0xc5, 0x98, 0x10, 0x59, 0x46, 0x92, 0x47,
	0x74, 0x03, 0x26, 0x93, 0x63, 0x50, 0x91, 0xaf, 0xa6, 0x12, 0xf1, 0xb3, 0xcf, 0x32, 0x05, 0xe8,
	0x8f, 0xcb, 0x56, 0xe6, 0x86, 0x5e, 0x5a, 0x84, 0xd8, 0x6f, 0x64, 0x41, 0x2d, 0x09, 0x44, 0xa7,
	0x1b, 0x75, 0x30, 0x3f, 0x7a, 0x55, 0xcd, 0xc7, 0x63, 0x7a, 0x2d, 0x5c, 0x63, 0x9b, 0x12, 0x8f,
	0x58, 0x3e, 0x44, 0xfd, 0xb7, 0x25, 0x78, 0x30, 0x64, 0xf9, 0xca, 0x0f, 0x4e, 0xf6, 0x02, 0x42,
	0x9d, 0x80, 0x3a, 0x01, 0x0e, 0x7b, 0x84, 0x0d, 0x40, 0xd0, 0x16, 0xdc, 0x08, 0x7b, 0xd4, 0x8e,
	0x1c, 0x56, 0x11, 0x88, 0x1d, 0x31, 0x47, 0xb0, 0x6b, 0x9f, 0x6f, 0x1a, 0xf2, 0xc5, 0x5c, 0x0b,
	0x7b, 0xf4, 0x40, 0x68, 0x0f, 0x58, 0xce, 0xb9, 0xff, 0xbf, 0x69, 0xa0, 0x75, 0x98, 0x67, 0x56,
	0x47, 0x17, 0x14, 0xa7, 0x36, 0x72, 0xe9, 0xb3, 0x61, 0x8f, 0xbe, 0x60, 0x72, 0x81, 0x46, 0x26,
	0x2c, 0xfa, 0x81, 0x72, 0xfc, 0x12, 0xc7, 0x23, 0x3f, 0x18, 0x1a, 0xfe, 0x01, 0x68, 0x7e, 0x30,
	0x30, 0xba, 0xc8, 0xb5, 0x9a, 0x1f, 0x64, 0x07, 0xcf, 0x10, 0x3f, 0x91, 0x25, 0x9e, 0xe5, 0x78,
	0x32, 0xa5, 0x17, 0x87, 0x51, 0xc4, 0x76, 0x48, 0x97, 0xca, 0x6a, 0x33, 0x2f, 0x55, 0xbb, 0x42,
	0x73, 0xe0, 0x52, 0xf4, 0x39, 0x2c, 0x27, 0xf8, 0x33, 0xec, 0xc7, 0x9e, 0x4d, 0x58, 0xa1, 0x0d,
	0x5c, 0xcc, 0xcd, 0xc4, 0xa6, 0x75, 0x43, 0x22, 0xfe, 0x8f, 0x01, 0x0e, 0xa5, 0x9e, 0x19, 0xaf,
	0x81, 0x16, 0x61, 0xe7, 0xc4, 0xfe, 0x99, 0x4f, 0xd9, 0xb9, 0xa4, 0xc7, 0xdc, 0x9d, 0x12, 0x64,
	0x30, 0xf9, 0xff, 0x72, 0xf1, 0x77, 0x04, 0xbb, 0xf5, 0x1f, 0xe6, 0xa0, 0xae, 0x7c, 0x33, 0xaf,
	0xfc, 0x63, 0xcc, 0xd2, 0x53, 0xbc, 0x94, 0xbb, 0x30, 0x93, 0x78, 0x43, 0x70, 0x40, 0x39, 0x53,
	0x65, 0xab, 0x2a, 0x65, 0x87, 0x38, 0xa0, 0x6c, 0xe5, 0x27, 0x47, 0x42, 0x5b, 0xe6, 0xda, 0xca,
	0xc9, 0x11, 0x57, 0x64, 0x6c, 0x63, 0xec, 0x9e, 0x72, 0x5e, 0xfa, 0xb6, 0x16, 0x76, 0x4f, 0xa5,
	0x2d, 0xd7, 0x56, 0x12, 0x5b, 0xae, 0xd8, 0x82, 0xc5, 0xac, 0x6d, 0x4a, 0x82, 0xd8, 0xb6, 0xcb,
	0xd6, 0x42, 0x66, 0x94, 0x84, 0x00, 0x7e, 0x10, 0xc9, 0x59, 0x49, 0xc2, 0x39, 0x05, 0x65, 0x0b,
	0x65, 0x6c, 0x24, 0xe1, 0xe8, 0x29, 0x2c, 0xe5, 0x2c, 0x58, 0x2c, 0x85, 0xc7, 0x76, 0x18, 0x7b,
	0xf2, 0x38, 0x5d, 0xb6, 0xae, 0x67, 0xcc, 0xde, 0xf4, 0xe8, 0x9b, 0xe3, 0x37, 0x4c, 0x39, 0xe4,
	0xa1, 0xd7, 0x8b, 0x3a, 0xbe, 0xeb, 0x50, 0xac, 0xc3, 0x90, 0x87, 0xbb, 0x89, 0x0e, 0x3d, 0x02,
	0x94, 0xb3, 0xea, 0xf4, 0x62, 0xb7, 0xad, 0x57, 0xb9, 0x85, 0x96, 0xb1, 0x78, 0xc5, 0xe4, 0xc8,
	0x84, 0xeb, 0xef, 0x7a, 0x4e, 0xc7, 0xa7, 0x17, 0x76, 0xdb, 0x27, 0x34, 0xe4, 0x17, 0xb2, 0x4d,
	0xc3, 0xd0, 0xaf, 0x8b, 0x84, 0x90, 0xca, 0x6f, 0x12, 0xdd, 0xa6, 0x61, 0x30, 0x0e, 0x86, 0x6d,
	0x9e, 0x3d, 0xd3, 0x17, 0x45, 0x8c, 0x0f, 0x9a, 0x3c, 0x7b, 0x36, 0xc2, 0x62, 0x5b, 0xbf, 0x31,
	0xc2, 0x62, 0x7b, 0x84, 0x45, 0x53, 0xd7, 0x47, 0x58, 0x34, 0x47, 0x58, 0x18, 0xfa, 0xd2, 0x08,
	0x8b, 0x11, 0xeb, 0xd8, 0x6e, 0xea, 0xcb, 0x6a, 0x8b, 0xed, 0x11, 0x73, 0x34, 0x0d, 0xfd, 0xa6,
	0xda, 0xa2, 0x69, 0xb0, 0xdc, 0x54, 0xf0, 0xab, 0xdf, 0x12, 0xb9, 0x39, 0xc4, 0x2e, 0x7b, 0xe7,
	0xc3, 0x78, 0x0f, 0x3b, 0x9e, 0xbe, 0x22, 0x76, 0xa0, 0x41, 0x93, 0x5d, 0xec, 0xf0, 0xc3, 0x6b,
	0x62, 0xc5, 0x76, 0x26, 0x6c, 0x9b, 0x81, 0xa7, 0xdf, 0x16, 0x67, 0x7d, 0xa9, 0xd8, 0x67, 0x72,
	0x33, 0x50, 0x60, 0x9b, 0xb4, 0xad, 0xdf, 0x19, 0xc6, 0x36, 0x69, 0x9b, 0xc5, 0xd2, 0xc0, 0xb8,
	0x0c, 0xbc, 0xca, 0xc1, 0x5a, 0x6e, 0x60, 0x25, 0xba, 0x69, 0xd0, 0xb6, 0x7e, 0x77, 0x18, 0xcd,
	0xe4, 0xcc, 0x0f, 0x5e, 0xce, 0xfa, 0xcb, 0x34, 0x9b, 0xfa, 0xba, 0xf0, 0x83, 0x29, 0xd2, 0x15,
	0x9a, 0x4d, 0x05, 0xb6, 0x69, 0xe8, 0x1b, 0x0a, 0x6c, 0xd3, 0x50, 0x60, 0xb7, 0x9b, 0xfa, 0x43,
	0x05, 0x76, 0xbb, 0xc9, 0x73, 0x25, 0x8f, 0x65, 0xa1, 0xff, 0x48, 0x78, 0x9c, 0x03, 0xb3, 0xb8,
	0x57, 0xa0, 0xcd, 0xa6, 0xfe, 0x58, 0x85, 0x36, 0x95, 0x63, 0x37, 0x0d, 0xbd, 0xa1, 0x42, 0x37,
	0x55, 0x63, 0x9b, 0x86, 0xa1, 0x7f, 0xa2, 0x40, 0x9b, 0x4a, 0x4f, 0x9e, 0x18, 0x86, 0x6e, 0x28,
	0xd0, 0x4f, 0x94, 0xe8, 0xae, 0x73, 0xae, 0x6f, 0x2a, 0xd0, 0xaf, 0x9d, 0x73, 0x76, 0xd0, 0xe2,
	0xe8, 0x7e, 0x70, 0x98, 0xe2, 0x2e, 0xc8, 0xa4, 0x69, 0x64, 0xdc, 0x87, 0xb9, 0x2c, 0x8a, 0xbd,
	0xe8, 0x27, 0x62, 0xd3, 0xea, 0xc3, 0x8c, 0x21, 0xdc, 0x36, 0x1b, 0x6e, 0x6b, 0x00, 0xb7, 0x3d,
	0x3c, 0xde, 0x33, 0x86, 0x6b, 0x0e, 0xe0, 0x9e, 0x29, 0x70, 0x4f, 0x69, 0x5b, 0xff, 0x74, 0x10,
	0xf7, 0x94, 0xb6, 0xd1, 0x17, 0x70, 0x53, 0xee, 0x50, 0xfd, 0x55, 0x07, 0xb8, 0xd5, 0xf1, 0x5b,
	0xfe, 0x51, 0x07, 0xeb, 0xff, 0xcd, 0x6d, 0x96, 0x04, 0x24, 0x5d, 0xfe, 0x7e, 0x0a, 0x60, 0x9c,
	0x0d, 0xd9, 0x6f, 0xea, 0x5f, 0x08, 0xce, 0x06, 0xcc, 0x36, 0x95, 0x68, 0x53, 0xff, 0x52, 0x89,
	0x36, 0x95, 0xe8, 0xa6, 0xfe, 0x3f, 0x4a, 0x74, 0x93, 0x55, 0x90, 0x61, 0x4f, 0x0c, 0xfd, 0xb9,
	0xa8, 0x20, 0x83, 0xae, 0x18, 0x4a, 0xbc, 0x69, 0xe8, 0x2f, 0x94, 0x78, 0xd3, 0xa8, 0xff, 0xb5,
	0xa0, 0xd8, 0xa6, 0x77, 0xc2, 0x20, 0xc0, 0x2e, 0xf5, 0xc3, 0xe0, 0x5b, 0x91, 0xb7, 0xe8, 0x10,
	0x6a, 0x7e, 0xf6, 0x44, 0x25, 0xef, 0x62, 0xa3, 0xce, 0x6e, 0xea, 0x13, 0x98, 0x95, 0x1f, 0x03,
	0xed, 0xc2, 0x54, 0x47, 0x1e, 0x06, 0xf8, 0x89, 0xaa, 0x6a, 0xae, 0x5d, 0x32, 0x5e, 0xee, 0xdc,
	0x60, 0xa5, 0x96, 0xf5, 0x3f, 0x15, 0xa1, 0x71, 0xc9, 0x0a, 0x38, 0x7c, 0x47, 0x34, 0x61, 0x42,
	0xd9, 0xf0, 0xf8, 0x0c, 0x4a, 0xae, 0x19, 0xcb, 0x35, 0x8c, 0x9a, 0x73, 0x88, 0x04, 0x8b, 0x19,
	0x09, 0x5b, 0x72, 0x85, 0xbf, 0x4a, 0x5b, 0xf2, 0x3e, 0x6d, 0xa2, 0xb1, 0xfa, 0x75, 0xb7, 0xd9,
	0x7d, 0x87, 0x37, 0x6e, 0x6c, 0xb6, 0x9e, 0xe9, 0xe4, 0xe6, 0xf5, 0x6e, 0xbf, 0xd7, 0xdd, 0x31,
	0xe3, 0xbc, 0x9e, 0xf0, 0x73, 0x43, 0x46, 0x4f, 0xea, 0x3f, 0x4c, 0x5c, 0x4d, 0x9d, 0xa0, 0xec,
	0x6d, 0x28, 0x28, 0x64, 0xcb, 0x8f, 0x4d, 0xf7, 0xfd, 0xa9, 0x8b, 0x4d, 0x97, 0xd9, 0x12, 0xd3,
	0x7d, 0x7f, 0xea, 0x88, 0xe9, 0xa2, 0x2f, 0xe1, 0xd6, 0x20, 0x75, 0xf6, 0x71, 0x1c, 0x76, 0x93,
	0xd6, 0x96, 0xa0, 0x71, 0x69, 0x80, 0xc6, 0xaf, 0xe2, 0x50, 0x76, 0x8d, 0x47, 0x0f, 0x20, 0xee,
	0x13, 0xb2, 0x9b, 0xa1, 0x1a, 0x40, 0xde, 0x89, 0x3e, 0xa4, 0x1b, 0x37, 0xfa, 0x66, 0x59, 0xb9,
	0xe4, 0x5e, 0xfd, 0x08, 0x50, 0xd7, 0x6f, 0xc5, 0x0e, 0xc5, 0x76, 0x2c, 0x9a, 0x21, 0xec, 0xe2,
	0x0b, 0xdc, 0x51, 0x4d, 0x6a, 0x64, 0x97, 0x64, 0x2f, 0x62, 0xa7, 0x93, 0x41, 0x74, 0x14, 0xc6,
	0x94, 0x9f, 0xfd, 0x6a, 0x16, 0xca, 0xe3, 0x0f, 0xc2, 0x98, 0x5e, 0xdd, 0xee, 0x9d, 0xb9, 0xb2,
	0xdd, 0x3b, 0xd6, 0xe5, 0x3d, 0x13, 0x86, 0x2c, 0x76, 0xa6, 0xb2, 0x61, 0x68, 0x99, 0x6e, 0x56,
	0xcf, 0xe2, 0x23, 0x17, 0xc6, 0x87, 0xa6, 0x5b, 0xff, 0x4d, 0x69, 0xfc, 0x30, 0x4d, 0x5f, 0x56,
	0x29, 0x36, 0xc9, 0x8f, 0x09, 0x53, 0xf2, 0x9f, 0xca, 0xf0, 0xf7, 0x68, 0x04, 0xe7, 0x08, 0x24,
	0xfd, 0x0e, 0x8b, 0x20, 0x90, 0x0c, 0xe6, 0x79, 0x65, 0x20, 0xcf, 0x55, 0x6d, 0xec, 0x49, 0x55,
	0x1b, 0x7b, 0x03, 0xe6, 0xf3, 0x5d, 0x71, 0x86, 0x14, 0xaf, 0x6b, 0x2e, 0xd7, 0x18, 0xdf, 0xf3,
	0xea, 0x7f, 0x19, 0xa3, 0xec, 0x8a, 0x97, 0x91, 0x2d, 0xbb, 0xe4, 0xc7, 0x94, 0x5d, 0x62, 0xc6,
	0x1f, 0x54, 0x3b, 0x72, 0xf1, 0x15, 0xcb, 0xcb, 0x78, 0x1a, 0x5f, 0xf1, 0x60, 0xfc, 0x95, 0x07,
	0xe2, 0x4f, 0x45, 0xdf, 0xc4, 0xd8, 0xf4, 0x55, 0xd4, 0xf4, 0xbd, 0x81, 0xb5, 0x61, 0xf7, 0x39,
	0xe6, 0xc0, 0x0f, 0x5a, 0xa2, 0xbb, 0x91, 0x74, 0x40, 0xc7, 0x69, 0xf5, 0xd5, 0x7f, 0x57, 0x84,
	0xfb, 0x63, 0x8c, 0x18, 0x75, 0x2e, 0xc6, 0x6b, 0x1d, 0x1e, 0x8b, 0xf0, 0x64, 0xc5, 0x41, 0x96,
	0x03, 0x22, 0x1b, 0x36, 0x9f, 0x8f, 0x62, 0x5f, 0x35, 0x59, 0xc3, 0x12, 0x83, 0xc8, 0x82, 0x21,
	0x62, 0xbb, 0xff, 0x4c, 0x96, 0x3d, 0x98, 0xcd, 0x43, 0xd0, 0x2c, 0x14, 0x7d, 0x4f, 0xfa, 0x54,
	0xf4, 0x3d, 0x54, 0x87, 0xda, 0x71, 0x1c, 0x06, 0xd4, 0xce, 0x37, 0x9e, 0xaa, 0x5c, 0x28, 0xbf,
	0xbc, 0xdd, 0x86, 0x2a, 0x36, 0x71, 0xe6, 0x0b, 0x1d, 0x7f, 0x85, 0xd8, 0xc4, 0x42, 0x5f, 0xff,
	0xe5, 0xe4, 0x48, 0x76, 0x0e, 0xcf, 0x7c, 0xea, 0xb6, 0xb1, 0x77, 0x10, 0xfb, 0x5d, 0x27, 0x1e,
	0x93, 0x9d, 0x1b, 0x30, 0xc9, 0x37, 0x8f, 0xb4, 0x11, 0x59, 0x61, 0x8f, 0x7b, 0x11, 0xba, 0x09,
	0xd3, 0x5c, 0xc1, 0x4b, 0xaf, 0x70, 0x63, 0x8a, 0x09, 0x78, 0xc1, 0x6d, 0xc0, 0xb5, 0xcc, 0x9e,
	0x95, 0x96, 0x59, 0x91, 0xf5, 0xf3, 0xc7, 0xe9, 0x66, 0x95, 0x30, 0xb1, 0x06, 0x1a, 0xc7, 0x3b,
	0x2e, 0xf5, 0x4f, 0x71, 0xff, 0x73, 0x61, 0xcd, 0x9a, 0x65, 0xf2, 0xe7, 0x5c, 0xcc, 0x1b, 0x9b,
	0xdb, 0xa0, 0x67, 0x91, 0xb9, 0xb6, 0x88, 0x88, 0xc0, 0xeb, 0x7d, 0x8b, 0x83, 0x4c, 0x83, 0x24,
	0x71, 0x29, 0x69, 0x1d, 0xc5, 0xd8, 0x21, 0xa1, 0xf8, 0x94, 0x38, 0x2d, 0x5c, 0x92, 0x9d, 0x0c,
	0x8b, 0x2b, 0xd0, 0x75, 0xa8, 0xb4, 0x9c, 0x88, 0x71, 0x2c, 0xea, 0xc2, 0x44, 0xcb, 0x89, 0x5e,
	0x13, 0xe4, 0x49, 0x4f, 0xd3, 0x1b, 0x60, 0x78, 0xc6, 0xeb, 0x78, 0xd5, 0xfc, 0xec, 0xd2, 0x68,
	0x19, 0x20, 0xbf, 0x21, 0xd6, 0x9f, 0x64, 0x2f, 0x5f, 0xa5, 0x7c, 0xd8, 0x0f, 0xcf, 0xd0, 0x4f,
	0x61, 0x96, 0x86, 0xb9, 0x39, 0xe0, 0x83, 0xe7, 0x98, 0xa1, 0x61, 0x66, 0x86, 0x63, 0x98, 0xcf,
	0xad, 0x83, 0xb6, 0x71, 0xc0, 0x77, 0xd0, 0x0f, 0x9b, 0x64, 0x2e, 0xb3, 0x90, 0xb7, 0x6d, 0x1c,
	0xa0, 0x23, 0x98, 0xcb, 0xac, 0x84, 0xcf, 0x32, 0xf3, 0xc1, 0xb3, 0xd4, 0xd2, 0xa5, 0xb0, 0x39,
	0x96, 0x7f, 0x55, 0x80, 0x5a, 0x0e, 0x80, 0x16, 0x60, 0x82, 0xed, 0xe5, 0x58, 0xf6, 0x3b, 0xc5,
	0x03, 0x5a, 0x01, 0xe8, 0xe7, 0x97, 0x4c, 0xae, 0xe9, 0x34, 0xb9, 0x58, 0x44, 0x1f, 0x39, 0xee,
	0x89, 0xd0, 0xca, 0x88, 0x66, 0x02, 0xae, 0x7c, 0x04, 0x28, 0x7f, 0xb0, 0xc9, 0x7c, 0x2c, 0xd0,
	0xb2, 0x87, 0x9a, 0xdd, 0xf0, 0x2c, 0xa8, 0xff, 0xab, 0x04, 0x2b, 0x23, 0xbe, 0xea, 0x7f, 0x83,
	0x9d, 0x0e, 0x6d, 0xa3, 0x25, 0x98, 0x72, 0xa3, 0x9e, 0xdd, 0x09, 0x1d, 0x51, 0x01, 0x8a, 0xd6,
	0xa4, 0x1b, 0xf5, 0x5e, 0x85, 0x8e, 0x87, 0x1e, 0xc0, 0x9c, 0x8c, 0x6e, 0x59, 0x5d, 0x93, 0x42,
	0x30, 0x2b, 0xc4, 0xb2, 0xb6, 0x12, 0x56, 0x2f, 0x78, 0x73, 0x3c, 0x3a, 0xe1, 0x4d, 0x45, 0x57,
	0x3a, 0xcd, 0x5b, 0xdd, 0x07, 0x27, 0x6c, 0x57, 0x72, 0xd9, 0x35, 0x37, 0xa4, 0x6d, 0x1c, 0xf7,
	0x41, 0xc2, 0xe7, 0x19, 0x2e, 0x4d, 0x50, 0x3f, 0xea, 0x83, 0x00, 0x5a, 0x87, 0x79, 0xb6, 0x06,
	0x37, 0x64, 0x27, 0x30, 0xd1, 0x24, 0x8d, 0x79, 0xb6, 0x14, 0xad, 0x59, 0x37, 0xea, 0xed, 0x84,
	0x84, 0x1e, 0xf0, 0x26, 0x69, 0x8c, 0x1e, 0xc3, 0xb5, 0x1c, 0x54, 0xe4, 0x2d, 0xcf, 0x9c, 0xa2,
	0xa5, 0xf5, 0xc1, 0x22, 0x63, 0xd1, 0xb7, 0x03, 0x6d, 0xff, 0x0a, 0xaf, 0xc7, 0x8d, 0x11, 0x21,
	0x93, 0x25, 0x76, 0x54, 0xcf, 0x9f, 0x85, 0x44, 0xd7, 0x69, 0xf9, 0xae, 0x3c, 0x10, 0x88, 0x87,
	0xe5, 0xaf, 0x73, 0xcd, 0xfc, 0x7b, 0x82, 0xd0, 0xf4, 0x1b, 0x7e, 0x52, 0x11, 0xbd, 0xcc, 0x07,
	0x7b, 0x1e, 0x5b, 0xd4, 0xa1, 0x58, 0xbe, 0x14, 0xf1, 0xb0, 0xf1, 0xfb, 0x0a, 0x5c, 0x7b, 0x99,
	0xf3, 0xea, 0x35, 0x69, 0xed, 0xed, 0xa2, 0x3b, 0x70, 0xf3, 0xc4, 0x1e, 0x52, 0xd8, 0x7b, 0xc1,
	0xa9, 0xd3, 0xf1, 0x3d, 0xed, 0x23, 0xb4, 0x0e, 0x1f, 0xab, 0x00, 0xd9, 0x7f, 0x01, 0xe1, 0x9b,
	0xa3, 0x56, 0x40, 0x0f, 0xe0, 0xde, 0x55, 0xd0, 0xa8, 0x73, 0xa1, 0x15, 0xd1, 0x63, 0x58, 0x57,
	0x01, 0xf3, 0xff, 0x1a, 0x90, 0x8c, 0x5b, 0x42, 0x0f, 0xe1, 0xc1, 0x38, 0x70, 0x36, 0x76, 0x19,
	0x19, 0xf0, 0xe8, 0x72, 0x70, 0xfe, 0xab, 0xa6, 0x36, 0x81, 0xb6, 0xc0, 0x18, 0xcb, 0x22, 0xf3,
	0xd1, 0x4f, 0xab, 0xa0, 0xbb, 0xb0, 0xa2, 0xb2, 0x4a, 0x3f, 0xa7, 0x69, 0x93, 0xa8, 0x0e, 0xb7,
	0x55, 0x90, 0xfe, 0x37, 0x29, 0x6d, 0x0a, 0x6d, 0xc0, 0x7d, 0x25, 0x86, 0xbd, 0xf4, 0xdc, 0x5d,
	0x59, 0x9b, 0xbe, 0x0c, 0x9b, 0x3f, 0x75, 0x6b, 0x70, 0x19, 0x36, 0x7f, 0x18, 0xd4, 0xaa, 0xe3,
	0x8c, 0x2b, 0x7c, 0xd1, 0x66, 0xd0, 0x0a, 0x2c, 0xa9, 0xb0, 0xfc, 0x94, 0xa9, 0xd5, 0xd0, 0x27,
	0xf0, 0x50, 0xa5, 0x1e, 0x71, 0xa0, 0xd2, 0x66, 0x47, 0x85, 0x82, 0xf2, 0x08, 0xa3, 0xcd, 0xa1,
	0x26, 0x6c, 0x8e, 0x86, 0x27, 0x4b, 0x1a, 0x28, 0xce, 0x9a, 0x86, 0xee, 0xc1, 0x1d, 0x65, 0x64,
	0xb2, 0x1b, 0x94, 0xc8, 0x4b, 0x6d, 0xfe, 0x45, 0xe9, 0x17, 0x85, 0x8f, 0xfe, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0x96, 0x08, 0x1e, 0xc5, 0x14, 0x25, 0x00, 0x00,
}
